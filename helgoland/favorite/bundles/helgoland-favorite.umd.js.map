{"version":3,"file":"helgoland-favorite.umd.js.map","sources":["ng://@helgoland/favorite/lib/service/favorite.service.ts","ng://@helgoland/favorite/lib/favorite-toggler/favorite-toggler.component.ts","ng://@helgoland/favorite/lib/service/json-favorite-exporter.service.ts","ng://@helgoland/favorite/lib/favorite.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map<string, SingleFavorite>;\n  private groupFavs: Map<string, GroupFavorite>;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray<SingleFavorite>(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray<GroupFavorite>(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { IDataset, NotifierService } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { FavoriteService } from '../service/favorite.service';\n\n@Component({\n  selector: 'n52-favorite-toggler',\n  template: `<i class=\"fa\" (click)=\"toggle(); $event.stopPropagation();\" [ngClass]=\"isFavorite ? 'fa-star' : 'fa-star-o'\"></i>`\n})\nexport class FavoriteTogglerComponent implements OnChanges {\n\n  @Input()\n  public dataset: IDataset;\n  public isFavorite: boolean;\n\n  constructor(\n    protected favSrvc: FavoriteService,\n    protected notifier: NotifierService,\n    protected translate: TranslateService\n  ) { }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.dataset && this.dataset) {\n      this.isFavorite = this.favSrvc.hasFavorite(this.dataset);\n    }\n  }\n\n  public toggle() {\n    if (this.isFavorite) {\n      this.isFavorite = false;\n      this.favSrvc.removeFavorite(this.dataset.internalId);\n      this.translate.get('favorite.notifier.remove-favorite').subscribe((translation) => {\n        this.notifier.notify(translation + ': ' + this.dataset.label);\n      });\n    } else {\n      this.isFavorite = true;\n      this.favSrvc.addFavorite(this.dataset);\n      this.translate.get('favorite.notifier.add-favorite').subscribe((translation) => {\n        this.notifier.notify(translation + ': ' + this.dataset.label);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { FavoriteService, SingleFavorite } from './favorite.service';\n\n@Injectable()\nexport class JsonFavoriteExporterService {\n\n  constructor(\n    protected favoriteSrvc: FavoriteService\n  ) { }\n\n  public exportFavorites() {\n    const filename = 'favorites.json';\n    const json = JSON.stringify(this.favoriteSrvc.getFavorites());\n    // if (window.navigator.msSaveBlob) {\n    //     // IE version >= 10\n    //     const blob = new Blob([json], {\n    //         type: 'application/json;charset=utf-8;'\n    //     });\n    //     window.navigator.msSaveBlob(blob, filename);\n    // } else {\n    // FF, Chrome ...\n    const a = document.createElement('a');\n    a.href = 'data:application/json,' + encodeURIComponent(json);\n    a.target = '_blank';\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    // }\n  }\n\n  public importFavorites(event: any): Observable<boolean> {\n    return new Observable<boolean>((observer: Observer<boolean>) => {\n      const files = event.target.files;\n      if (files && files.length > 0) {\n        this.favoriteSrvc.removeAllFavorites();\n        const reader = new FileReader();\n        reader.readAsText(files[0]);\n        reader.onerror = () => {\n          // alertService.error($translate.instant('favorite.import.wrongFile'));\n        };\n        reader.onload = (e: any) => {\n          const result = e.target.result;\n          const favorites = JSON.parse(result) as SingleFavorite[];\n          favorites.forEach((entry) => {\n            this.favoriteSrvc.addFavorite(entry.favorite, entry.label);\n          });\n          observer.next(true);\n          observer.complete();\n        };\n      }\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FavoriteTogglerComponent } from './favorite-toggler/favorite-toggler.component';\nimport { FavoriteService } from './service/favorite.service';\nimport { JsonFavoriteExporterService } from './service/json-favorite-exporter.service';\n\nconst COMPONENTS = [\n  FavoriteTogglerComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    FavoriteService,\n    JsonFavoriteExporterService\n  ]\n})\nexport class HelgolandFavoriteModule { }\n"],"names":["Injectable","LocalStorage","Component","NotifierService","TranslateService","Input","Observable","NgModule","CommonModule"],"mappings":"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"}
