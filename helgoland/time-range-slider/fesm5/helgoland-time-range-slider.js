import { __extends } from 'tslib';
import { Injectable, Component, EventEmitter, Input, Output, ViewEncapsulation, NgModule } from '@angular/core';
import { IdCache, Timespan } from '@helgoland/core';
import 'bootstrap-slider';
import jquery from 'jquery';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var TimeRangeSliderCache = /** @class */ (function (_super) {
    __extends(TimeRangeSliderCache, _super);
    function TimeRangeSliderCache() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TimeRangeSliderCache.decorators = [
        { type: Injectable },
    ];
    return TimeRangeSliderCache;
}(IdCache));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var TimeRangeSliderComponent = /** @class */ (function () {
    function TimeRangeSliderComponent(cache) {
        this.cache = cache;
        this.id = '';
        this.onTimespanSelected = new EventEmitter();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    TimeRangeSliderComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        if (changes["timeList"] && this.timeList) {
            /** @type {?} */
            var min = void 0;
            /** @type {?} */
            var max = void 0;
            this.start = min = this.timeList[0];
            this.end = max = this.timeList[this.timeList.length - 1];
            if (this.id && this.cache.has(this.id)) {
                this.selectionStart = this.cache.get(this.id).from;
                this.selectionEnd = this.cache.get(this.id).to;
            }
            else {
                this.selectionStart = this.start;
                this.selectionEnd = this.end;
            }
            jquery('#slider').slider({
                tooltip: 'hide',
                min: min,
                max: max,
                value: [this.selectionStart, this.selectionEnd]
            }).on('slideStop', function (event) {
                /** @type {?} */
                var timespan = new Timespan(event.value[0], event.value[1]);
                _this.cache.set(_this.id, timespan);
                _this.onTimespanSelected.emit(timespan);
            }).on('slide', function (event) {
                _this.selectionStart = event.value[0];
                _this.selectionEnd = event.value[1];
            });
        }
    };
    TimeRangeSliderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'n52-time-range-slider',
                    template: "<div class=\"time-range-slider\" [hidden]=\"!timeList\">\n  <div class=\"slider-container\">\n    <div class=\"left-start\">\n      <span>{{start | date : 'short'}}</span>\n    </div>\n    <div class=\"center\">\n      <input id=\"slider\" type=\"text\" />\n    </div>\n    <div class=\"right-end\">\n      <span>{{end | date : 'short'}}</span>\n    </div>\n  </div>\n  <div class=\"selection\" *ngIf=\"selectionStart\">\n    <span>{{selectionStart | date : 'short'}}</span>\n    <span> - </span>\n    <span>{{selectionEnd | date : 'short'}}</span>\n  </div>\n</div>\n",
                    styles: ["n52-time-range-slider-selector .time-range-slider{width:100%}n52-time-range-slider-selector .time-range-slider .slider-container{display:flex;display:-webkit-flex}n52-time-range-slider-selector .time-range-slider .left-start,n52-time-range-slider-selector .time-range-slider .right-end{width:150px;padding:0 15px}n52-time-range-slider-selector .time-range-slider .left-start{text-align:right}n52-time-range-slider-selector .time-range-slider .center{flex:1}n52-time-range-slider-selector .time-range-slider .center .slider{width:100%}n52-time-range-slider-selector .time-range-slider .selection{text-align:center}", "/*! =======================================================\n                      VERSION  9.9.0              \n========================================================= *//*! =========================================================\n * bootstrap-slider.js\n *\n * Maintainers:\n *\t\tKyle Kemp\n *\t\t\t- Twitter: @seiyria\n *\t\t\t- Github:  seiyria\n *\t\tRohit Kalkur\n *\t\t\t- Twitter: @Rovolutionary\n *\t\t\t- Github:  rovolution\n *\n * =========================================================\n  *\n * bootstrap-slider is released under the MIT License\n * Copyright (c) 2017 Kyle Kemp, Rohit Kalkur, and contributors\n * \n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n * \n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n *\n * ========================================================= */.slider{display:inline-block;vertical-align:middle;position:relative}.slider.slider-horizontal{width:210px;height:20px}.slider.slider-horizontal .slider-track{height:10px;width:100%;margin-top:-5px;top:50%;left:0}.slider.slider-horizontal .slider-selection,.slider.slider-horizontal .slider-track-high,.slider.slider-horizontal .slider-track-low{height:100%;top:0;bottom:0}.slider.slider-horizontal .slider-handle,.slider.slider-horizontal .slider-tick{margin-left:-10px}.slider.slider-horizontal .slider-handle.triangle,.slider.slider-horizontal .slider-tick.triangle{position:relative;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);border-width:0 10px 10px;width:0;height:0;border-bottom-color:#2e6da4;margin-top:0}.slider.slider-horizontal .slider-tick-container{white-space:nowrap;position:absolute;top:0;left:0;width:100%}.slider.slider-horizontal .slider-tick-label-container{white-space:nowrap;margin-top:20px}.slider.slider-horizontal .slider-tick-label-container .slider-tick-label{padding-top:4px;display:inline-block;text-align:center}.slider.slider-horizontal.slider-rtl .slider-track{left:initial;right:0}.slider.slider-horizontal.slider-rtl .slider-handle,.slider.slider-horizontal.slider-rtl .slider-tick{margin-left:initial;margin-right:-10px}.slider.slider-horizontal.slider-rtl .slider-tick-container{left:initial;right:0}.slider.slider-vertical{height:210px;width:20px}.slider.slider-vertical .slider-track{width:10px;height:100%;left:25%;top:0}.slider.slider-vertical .slider-selection{width:100%;left:0;top:0;bottom:0}.slider.slider-vertical .slider-track-high,.slider.slider-vertical .slider-track-low{width:100%;left:0;right:0}.slider.slider-vertical .slider-handle,.slider.slider-vertical .slider-tick{margin-top:-10px}.slider.slider-vertical .slider-handle.triangle,.slider.slider-vertical .slider-tick.triangle{border-width:10px 0 10px 10px;width:1px;height:1px;border-left-color:#2e6da4;border-right-color:#2e6da4;margin-left:0;margin-right:0}.slider.slider-vertical .slider-tick-label-container{white-space:nowrap}.slider.slider-vertical .slider-tick-label-container .slider-tick-label{padding-left:4px}.slider.slider-vertical.slider-rtl .slider-track{left:initial;right:25%}.slider.slider-vertical.slider-rtl .slider-selection{left:initial;right:0}.slider.slider-vertical.slider-rtl .slider-handle.triangle,.slider.slider-vertical.slider-rtl .slider-tick.triangle{border-width:10px 10px 10px 0}.slider.slider-vertical.slider-rtl .slider-tick-label-container .slider-tick-label{padding-left:initial;padding-right:4px}.slider.slider-disabled .slider-handle{background-image:linear-gradient(to bottom,#dfdfdf 0,#bebebe 100%);background-repeat:repeat-x}.slider.slider-disabled .slider-track{background-image:linear-gradient(to bottom,#e5e5e5 0,#e9e9e9 100%);background-repeat:repeat-x;cursor:not-allowed}.slider input{display:none}.slider .tooltip.top{margin-top:-36px}.slider .tooltip-inner{white-space:nowrap;max-width:none}.slider .hide{display:none}.slider-track{position:absolute;cursor:pointer;background-image:linear-gradient(to bottom,#f5f5f5 0,#f9f9f9 100%);background-repeat:repeat-x;box-shadow:inset 0 1px 2px rgba(0,0,0,.1);border-radius:4px}.slider-selection{position:absolute;background-image:linear-gradient(to bottom,#f9f9f9 0,#f5f5f5 100%);background-repeat:repeat-x;box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);box-sizing:border-box;border-radius:4px}.slider-selection.tick-slider-selection{background-image:linear-gradient(to bottom,#8ac1ef 0,#82b3de 100%);background-repeat:repeat-x}.slider-track-high,.slider-track-low{position:absolute;background:0 0;box-sizing:border-box;border-radius:4px}.slider-handle{position:absolute;top:0;width:20px;height:20px;background-color:#337ab7;background-image:linear-gradient(to bottom,#337ab7 0,#2e6da4 100%);background-repeat:repeat-x;-webkit-filter:none;filter:none;box-shadow:inset 0 1px 0 rgba(255,255,255,.2),0 1px 2px rgba(0,0,0,.05);border:0 solid transparent}.slider-handle.round{border-radius:50%}.slider-handle.custom,.slider-handle.triangle{background:0 0}.slider-handle.custom::before{line-height:20px;font-size:20px;content:'\\2605';color:#726204}.slider-tick{position:absolute;width:20px;height:20px;background-image:linear-gradient(to bottom,#f9f9f9 0,#f5f5f5 100%);background-repeat:repeat-x;box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);box-sizing:border-box;-webkit-filter:none;filter:none;opacity:.8;border:0 solid transparent}.slider-tick.round{border-radius:50%}.slider-tick.custom,.slider-tick.triangle{background:0 0}.slider-tick.custom::before{line-height:20px;font-size:20px;content:'\\2605';color:#726204}.slider-tick.in-selection{background-image:linear-gradient(to bottom,#8ac1ef 0,#82b3de 100%);background-repeat:repeat-x;opacity:1}"],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    TimeRangeSliderComponent.ctorParameters = function () { return [
        { type: TimeRangeSliderCache }
    ]; };
    TimeRangeSliderComponent.propDecorators = {
        id: [{ type: Input }],
        timeList: [{ type: Input }],
        onTimespanSelected: [{ type: Output }]
    };
    return TimeRangeSliderComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var HelgolandTimeRangeSliderModule = /** @class */ (function () {
    function HelgolandTimeRangeSliderModule() {
    }
    HelgolandTimeRangeSliderModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [TimeRangeSliderComponent],
                    exports: [TimeRangeSliderComponent],
                    imports: [CommonModule],
                    providers: [TimeRangeSliderCache]
                },] },
    ];
    return HelgolandTimeRangeSliderModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { TimeRangeSliderCache, TimeRangeSliderComponent, HelgolandTimeRangeSliderModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,