{"version":3,"sources":["ng://@helgoland/permalink/lib/permalink-in-mail/permalink-in-mail.component.ts","ng://@helgoland/permalink/lib/permalink-new-window/permalink-new-window.component.ts","ng://@helgoland/permalink/lib/permalink-to-clipboard/permalink-to-clipboard.component.ts","ng://@helgoland/permalink/lib/permalink.module.ts","ng://@helgoland/permalink/lib/services/permalink.service.ts"],"names":["PermalinkInMailComponent","EventEmitter","prototype","openInMail","window","location","href","encodeURIComponent","this","url","onTriggered","emit","Component","args","selector","template","Input","Output","PermalinkNewWindowComponent","openInNewWindow","open","PermalinkToClipboardComponent","COMPONENTS","NgModule","declarations","imports","ClipboardModule","exports","providers","PermalinkService","_this","generatePermalink","createBaseUrl","indexOf","substring"],"mappings":"gWAAA,IAAAA,EAAA,yCAY2C,IAAIC,EAAAA,oBAEtCD,EAAAE,UAAAC,sBACLC,OAAOC,SAASC,KAAO,gBAAkBC,mBAAmBC,KAAKC,KACjED,KAAKE,YAAYC,4BAdpBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAU,sGAITC,EAAAA,2BAGAC,EAAAA,YAXH,GCAAC,EAAA,yCAY2C,IAAIjB,EAAAA,oBAEtCiB,EAAAhB,UAAAiB,2BACLf,OAAOgB,KAAKZ,KAAKC,IAAK,UACtBD,KAAKE,YAAYC,4BAdpBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,2BACVC,SAAU,iHAITC,EAAAA,2BAGAC,EAAAA,YAXH,GCAAI,EAAA,yCAa2C,IAAIpB,EAAAA,wCAX9CW,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,6BACVC,SAAU,kJAKTC,EAAAA,2BAGAC,EAAAA,YAZH,GCOMK,EAAa,CACjBtB,EACAkB,EACAG,yDAGDE,EAAAA,SAAQV,KAAA,CAAC,CACRW,aAAc,CACZF,GAEFG,QAAS,CACPC,EAAAA,iBAEFC,QAAS,CACPL,GAEFM,UAAW,YCvBbC,EAAA,wDAE2B,WACvB,OAAOC,EAAKC,4BAOJF,EAAA3B,UAAA8B,cAAV,WACE,IAAMvB,EAAML,OAAOC,SAASC,KAC5B,OAA0B,IAAtBG,EAAIwB,QAAQ,KACPxB,EAAIyB,UAAU,EAAGzB,EAAIwB,QAAQ,MAE7BxB,KAfb","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-in-mail',\n  template: `<button type=\"button\" (click)=\"openInMail()\">open in mail</button>`\n})\nexport class PermalinkInMailComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter<void> = new EventEmitter<void>();\n\n  public openInMail() {\n    window.location.href = 'mailto:?body=' + encodeURIComponent(this.url);\n    this.onTriggered.emit();\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-new-window',\n  template: `<button type=\"button\" (click)=\"openInNewWindow()\">open in new window</button>`\n})\nexport class PermalinkNewWindowComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter<void> = new EventEmitter<void>();\n\n  public openInNewWindow() {\n    window.open(this.url, '_blank');\n    this.onTriggered.emit();\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-to-clipboard',\n  template: `<button type=\"button\" ngxClipboard [cbContent]=\"url\" (click)=\"onTriggered.emit()\">copy to clipboard</button>\n`\n})\nexport class PermalinkToClipboardComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter<void> = new EventEmitter<void>();\n\n}\n","import { NgModule } from '@angular/core';\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { PermalinkInMailComponent } from './permalink-in-mail/permalink-in-mail.component';\nimport { PermalinkNewWindowComponent } from './permalink-new-window/permalink-new-window.component';\nimport { PermalinkToClipboardComponent } from './permalink-to-clipboard/permalink-to-clipboard.component';\n\nconst COMPONENTS = [\n  PermalinkInMailComponent,\n  PermalinkNewWindowComponent,\n  PermalinkToClipboardComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    ClipboardModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandPermalinkModule { }\n","export abstract class PermalinkService<T> {\n\n  public createPermalink = () => {\n    return this.generatePermalink();\n  }\n\n  public abstract validatePeramlink(): T;\n\n  protected abstract generatePermalink(): string;\n\n  protected createBaseUrl() {\n    const url = window.location.href;\n    if (url.indexOf('?') !== -1) {\n      return url.substring(0, url.indexOf('?'));\n    } else {\n      return url;\n    }\n  }\n}\n"]}