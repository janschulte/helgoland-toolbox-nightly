{"version":3,"file":"helgoland-d3.js.map","sources":["ng://@helgoland/d3/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts","ng://@helgoland/d3/lib/helper/d3-time-format-locale.service.ts","ng://@helgoland/d3/lib/model/d3-plot-options.ts","ng://@helgoland/d3/lib/d3-timeseries-graph/d3-timeseries-graph.component.ts","ng://@helgoland/d3/lib/model/d3-axis-type.ts","ng://@helgoland/d3/lib/model/d3-selection-range.ts","ng://@helgoland/d3/lib/d3-trajectory-graph/d3-trajectory-graph.component.ts","ng://@helgoland/d3/lib/extended-data-d3-timeseries-graph/extended-data-d3-timeseries-graph.component.ts","ng://@helgoland/d3/lib/d3-general-graph/d3-general-graph.component.ts","ng://@helgoland/d3/lib/d3.module.ts"],"sourcesContent":["import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    OnDestroy,\n} from '@angular/core';\nimport { DatasetOptions, HasLoadableContent, Mixin, Time, TimeInterval, Timespan } from '@helgoland/core';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\n@Component({\n    selector: 'n52-d3-overview-timeseries-graph',\n    template: `<n52-d3-timeseries-graph [datasetIds]=\"datasetIds\" [datasetOptions]=\"datasetOptions\" [reloadForDatasets]=\"reloadForDatasets\"\n    [timeInterval]=\"overviewTimespan\" [mainTimeInterval]=\"timespan\" [presenterOptions]=\"presenterOptions\" (onTimespanChanged)=\"timeSpanChanged($event)\"\n    (onContentLoading)=\"onGraphLoading($event)\"></n52-d3-timeseries-graph>`,\n    styles: [`:host .d3{height:100%}`]\n})\n@Mixin([HasLoadableContent])\nexport class D3OverviewTimeseriesGraphComponent implements OnChanges, AfterViewInit, HasLoadableContent, OnDestroy {\n\n    @Input()\n    public datasetIds: string[];\n\n    @Input()\n    public datasetOptions: Map<string, DatasetOptions>;\n\n    @Input()\n    public presenterOptions: D3PlotOptions;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public rangefactor: number;\n\n    @Input()\n    public reloadForDatasets: string[];\n\n    @Output()\n    public onTimespanChanged: EventEmitter<Timespan> = new EventEmitter();\n\n    @Output()\n    public onLoading: EventEmitter<boolean> = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter<boolean> = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    public overviewTimespan: Timespan;\n    public timespan: Timespan;\n\n    private init = false;\n\n    constructor(\n        protected timeSrvc: Time,\n        protected cd: ChangeDetectorRef\n    ) {\n        if (this.presenterOptions) {\n            this.presenterOptions.overview = true;\n        } else {\n            this.presenterOptions = { overview: true };\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rangefactor = this.rangefactor || 1;\n        this.calculateOverviewRange();\n        this.init = true;\n        this.cd.detectChanges();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.timeInterval && this.init) {\n            this.calculateOverviewRange();\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.cd.detach();\n    }\n\n    public timeSpanChanged(timespan: Timespan) {\n        this.onTimespanChanged.emit(timespan);\n    }\n\n    public onGraphLoading(loading: boolean) {\n        this.isContentLoading(loading);\n    }\n\n    private calculateOverviewRange() {\n        const timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n        this.timespan = timespan;\n        this.overviewTimespan = this.timeSrvc.getBufferedTimespan(timespan, this.rangefactor);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { timeFormat, timeFormatLocale, TimeLocaleDefinition } from 'd3';\n\n/**\n * This service holds the translations for d3 charts time axis labels.\n * Add a new translation with the method 'addTimeFormatLocale' like this sample:\n *\n * addTimeFormatLocale('de',\n * {\n *   'dateTime': '%a %b %e %X %Y',\n *   'date': '%d-%m-%Y',\n *   'time': '%H:%M:%S',\n *   'periods': ['AM', 'PM'],\n *   'days': ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n *   'shortDays': ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n *   'months': ['Januar', 'Februar', 'MÃ¤rz', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n *   'shortMonths': ['Jan', 'Feb', 'MÃ¤r', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']\n * })\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3TimeFormatLocaleService {\n\n  private timeFormatLocaleMapper: Map<string, TimeLocaleDefinition> = new Map();\n\n  constructor(\n    private translateService: TranslateService\n  ) { }\n\n  public addTimeFormatLocale(localeCode: string, definition: TimeLocaleDefinition) {\n    this.timeFormatLocaleMapper.set(localeCode, definition);\n  }\n\n  public getTimeLocale(specifier: string): (date: Date) => string {\n    const langCode = this.translateService.currentLang;\n    if (this.timeFormatLocaleMapper.has(langCode)) {\n      return timeFormatLocale(this.timeFormatLocaleMapper.get(langCode)).format(specifier);\n    } else {\n      return timeFormat(specifier);\n    }\n  }\n}\n","/**\n * Plot options for D3 component.\n *\n * @export\n */\nexport interface D3PlotOptions {\n\n    /**\n     * show reference values for a graph\n     *\n     * @memberof D3PlotOptions\n     */\n    showReferenceValues?: boolean;\n\n    /**\n     * requests the dataset data generalized\n     *\n     * @memberof D3PlotOptions\n     */\n    generalizeAllways?: boolean;\n\n    /**\n     * toggle panning (true) and zooming (false)\n     *\n     * @memberof D3PlotOptions\n     */\n    togglePanZoom?: boolean;\n\n    /**\n     * show or hide y axis\n     *\n     * @memberof D3PlotOptions\n     */\n    yaxis?: boolean;\n\n    /**\n     * show or hide grid lines inside plot\n     *\n     * @memberof D3PlotOptions\n     */\n    grid?: boolean;\n\n    /**\n     * show or hide lines with values when hovering with mouse\n     *\n     * @memberof D3PlotOptions\n     */\n    hoverable?: boolean;\n\n    /**\n     * style when hovering with mouse\n     *\n     * @memberof D3PlotOptions\n     */\n    hoverStyle?: HoveringStyle;\n\n    /**\n     * indicating if component should build overview diagram or not\n     *\n     * @memberof D3PlotOptions\n     */\n    overview?: boolean;\n\n    /**\n     * show copyright label\n     *\n     * default position is top left\n     *\n     * @memberof D3PlotOptions\n     */\n    copyright?: D3Copyright;\n\n    /**\n    * toggle dataset grouping by uom\n    * true = group y axis by uom\n    * false = single y axis for each timeseries\n    *\n    * @memberof D3PlotOptions\n    */\n    groupYaxis?: boolean;\n\n    /**\n    * show the label of the xaxis\n    *\n    * @memberof D3PlotOptions\n    */\n    showTimeLabel?: boolean;\n\n    /**\n    * Request the data with expanded=true, to get valueBeforeTimespan/valueAfterTimespan\n    *\n    * @memberof D3PlotOptions\n    */\n    requestBeforeAfterValues?: boolean;\n\n}\n\nexport interface D3Copyright {\n    label: string;\n    positionX?: 'right' | 'left';\n    positionY?: 'top' | 'bottom';\n}\n\nexport enum HoveringStyle {\n    none = 'none',\n    line = 'line',\n    point = 'point'\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ColorService,\n    Data,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalDatasetId,\n    InternalIdHandler,\n    MinMaxRange,\n    Time,\n    Timeseries,\n    TimeseriesData,\n    Timespan,\n} from '@helgoland/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { D3TimeFormatLocaleService } from '../helper/d3-time-format-locale.service';\nimport { HighlightOutput } from '../model/d3-highlight';\nimport { D3PlotOptions, HoveringStyle } from '../model/d3-plot-options';\n\nexport interface DataEntry {\n    timestamp: number;\n    value: number;\n    xDiagCoord?: number;\n    yDiagCoord?: number;\n}\n\nexport interface InternalDataEntry {\n    internalId: string;\n    id?: number; // TODO needed?\n    color: string;\n    data: DataEntry[];\n    selected?: boolean;\n    points: {\n        fillColor: string\n    };\n    lines?: {\n        lineWidth?: number;\n        pointRadius?: number;\n    };\n    bars?: {\n        lineWidth?: number;\n    };\n    axisOptions: {\n        uom: string;\n        label?: string;\n        zeroBased?: boolean;\n        yAxisRange?: MinMaxRange;\n        autoRangeSelection?: boolean;\n        separateYAxis?: boolean;\n        parameters?: {\n            feature?: { id: String, label: String };\n            phenomenon?: { id: String, label: String };\n            offering?: { id: String, label: String };\n        };\n    };\n    visible: boolean;\n    focusLabelRect?: any;\n    focusLabel?: any;\n}\n\nexport interface DataConst extends IDataset {\n    data?: Data<[number, number]>;\n}\n\nexport interface YRanges {\n    uom: string;\n    range?: MinMaxRange; // necessary if grouped by uom\n    preRange?: MinMaxRange; // necessary if grouped by uom\n    originRange?: MinMaxRange; // necessary if grouped by uom\n    zeroBased: boolean;\n    autoRange: boolean;\n    outOfrange: boolean;\n    id?: string; // necessary if grouped by internalId\n    ids?: string[]; // necessary if grouped by uom\n    first?: boolean;\n    yScale?: d3.ScaleLinear<number, number>;\n    offset?: number;\n    parameters: {   // additional information for the y axis label\n        feature?: { id: String, label: String };\n        phenomenon?: { id: String, label: String };\n        offering?: { id: String, label: String };\n    };\n}\n\ninterface YScale {\n    buffer: number;\n    yScale: d3.ScaleLinear<number, number>;\n}\n\ninterface YAxisSelection {\n    id: string;\n    clicked: boolean;\n    ids?: Array<string>;\n    uom?: string;\n}\n\ninterface HighlightDataset {\n    id: string;\n    change: boolean;\n}\n\n@Component({\n    selector: 'n52-d3-timeseries-graph',\n    template: `<div class=\"d3\" #d3timeseries></div>\n`,\n    styles: [`.d3{height:100%;width:100%;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.d3 .grid .tick line{stroke:#d3d3d3;stroke-opacity:.7;shape-rendering:crispEdges}.d3 .graphDots{stroke-width:0;stroke-opacity:1}.d3 .graphDots .hover{stroke-width:20px;stroke-opacity:.5}.d3 .formerButton,.d3 .laterButton{fill:grey;opacity:.3}.d3 .formerButton:hover,.d3 .laterButton:hover{opacity:.6}.d3 .arrow{stroke:grey;stroke-width:3px}`],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TimeseriesGraphComponent\n    extends DatasetPresenterComponent<DatasetOptions, D3PlotOptions>\n    implements AfterViewInit {\n\n    @Input()\n    // difference to timespan/timeInterval --> if brush, then this is the timespan of the main-diagram\n    public mainTimeInterval: Timespan;\n\n    @Output()\n    public onHighlightChanged: EventEmitter<HighlightOutput> = new EventEmitter();\n\n    @Output()\n    public onClickDataPoint: EventEmitter<TimeseriesData[]> = new EventEmitter();\n\n    @ViewChild('d3timeseries')\n    public d3Elem: ElementRef;\n\n    public highlightOutput: HighlightOutput;\n\n    // DOM elements\n    protected rawSvg: any; // d3.Selection<EnterElement, {}, null, undefined>;\n    protected graph: any;\n    protected graphFocus: any;\n    protected graphBody: any;\n    private dragRect: any;\n    private dragRectG: any;\n    private background: any;\n    private copyright: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private highlightRect: any;\n    private highlightText: any;\n    private focuslabelTime: any;\n\n    // options for interaction\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n    private draggingMove: boolean;\n    private dragMoveStart: number;\n    private dragMoveRange: [number, number];\n    private mousedownBrush: boolean;\n    private oldGroupYaxis: boolean;\n\n    // data types\n    protected preparedData: InternalDataEntry[] = []; // : DataSeries[]\n    protected datasetMap: Map<string, DataConst> = new Map();\n    protected listOfUoms: string[] = [];\n    protected yRangesEachUom: YRanges[] = []; // y array of objects containing ranges for each uom\n    protected dataYranges: YRanges[] = []; // y array of objects containing ranges of all datasets\n    private xAxisRange: Timespan; // x domain range\n    private xAxisRangeOrigin: any = []; // x domain range\n    private xAxisRangePan: [number, number]; // x domain range\n    private listOfSeparation = Array();\n    private yAxisSelect;\n\n    private xScaleBase: d3.ScaleTime<number, number>; // calculate diagram coord of x value\n    private yScaleBase: d3.ScaleLinear<number, number>; // calculate diagram coord of y value\n    // private dotsObjects: any[];\n    private labelTimestamp: number[];\n    private labelXCoord: number[];\n    private distLabelXCoord: number[];\n    private bufferSum: number;\n\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private opac = {\n        default: 0,\n        hover: 0.3,\n        click: 0.5\n    };\n    private addLineWidth = 2; // value added to linewidth\n    private loadingCounter = 0;\n    private currentTimeId: string;\n\n    // default plot options\n    private plotOptions: D3PlotOptions = {\n        showReferenceValues: false,\n        generalizeAllways: true,\n        togglePanZoom: true,\n        hoverable: true,\n        hoverStyle: HoveringStyle.point,\n        grid: true,\n        yaxis: true,\n        overview: false,\n        showTimeLabel: true,\n        requestBeforeAfterValues: false\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        protected timeFormatLocaleService: D3TimeFormatLocaleService,\n        protected colorService: ColorService,\n        protected translateService: TranslateService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc, translateService);\n    }\n\n    public ngAfterViewInit(): void {\n        this.currentTimeId = this.uuidv4();\n        // this.dotsObjects = [];\n\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.graphFocus = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.mousedownBrush = false;\n        this.plotGraph();\n    }\n\n    protected onLanguageChanged(langChangeEvent: LangChangeEvent): void {\n        this.plotGraph();\n    }\n\n    public reloadDataForDatasets(datasetIds: string[]): void {\n        datasetIds.forEach(id => {\n            if (this.datasetMap.has(id)) {\n                this.loadDatasetData(this.datasetMap.get(id), true);\n            }\n        });\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getSingleTimeseries(id, url).subscribe(\n            (timeseries) => this.loadAddedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(id, url).subscribe(\n                    (dataset) => this.loadAddedDataset(dataset),\n                );\n            }\n        );\n    }\n    protected removeDataset(internalId: string): void {\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n        this.datasetMap.delete(internalId);\n        let spliceIdx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (spliceIdx >= 0) {\n            this.preparedData.splice(spliceIdx, 1);\n            if (this.preparedData.length <= 0) {\n                this.yRangesEachUom = [];\n                this.plotGraph();\n            } else {\n                this.preparedData.forEach((entry) => {\n                    this.processData(entry);\n                });\n            }\n        }\n    }\n    protected setSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (!tsData.selected || tsData.selected === undefined) {\n            tsData.selected = true;\n            tsData.lines.lineWidth += this.addLineWidth;\n            tsData.lines.pointRadius > 0 ? tsData.lines.pointRadius += this.addLineWidth : tsData.lines.pointRadius += 0;\n            tsData.bars.lineWidth += this.addLineWidth;\n\n            if (tsData.axisOptions.separateYAxis || !this.plotOptions.groupYaxis) {\n                this.checkYselector(tsData.internalId, tsData.axisOptions.uom);\n                if (this.yAxisSelect[internalId]) {\n                    this.yAxisSelect[internalId].clicked = true;\n                }\n            } else {\n                let identifier = tsData.axisOptions.uom;\n                let existingUom = this.yRangesEachUom.find(el => el.uom === identifier);\n\n                if (existingUom.ids.findIndex(el => el === internalId) >= 0) {\n                    this.checkYselector(identifier, tsData.axisOptions.uom);\n                    this.yAxisSelect[identifier].clicked = true;\n                    this.yAxisSelect[identifier].ids.push(internalId);\n\n                    // check axis for uom of dataset with selected internalId\n                    if (existingUom !== undefined && existingUom.ids !== undefined) {\n                        // only highlight axis of uom if all datasets with this uom are highlighted\n                        // count datasets for specific uom\n                        if (this.yAxisSelect[identifier].ids.length !== existingUom.ids.length) {\n                            this.yAxisSelect[identifier].clicked = false;\n                        } else {\n                            this.yAxisSelect[identifier].clicked = true;\n                        }\n                    }\n                }\n            }\n        }\n        this.plotGraph();\n    }\n    protected removeSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (tsData.selected || tsData.selected === undefined) {\n            tsData.selected = false;\n            tsData.lines.lineWidth -= this.addLineWidth;\n            tsData.lines.pointRadius > 0 ? tsData.lines.pointRadius -= this.addLineWidth : tsData.lines.pointRadius -= 0;\n            tsData.bars.lineWidth -= this.addLineWidth;\n\n            if (tsData.axisOptions.separateYAxis || !this.plotOptions.groupYaxis) {\n                this.checkYselector(tsData.internalId, tsData.axisOptions.uom);\n                if (this.yAxisSelect[tsData.internalId]) {\n                    this.yAxisSelect[tsData.internalId].clicked = false;\n                    if (this.yAxisSelect[tsData.internalId]) {\n                        this.yAxisSelect[tsData.internalId].ids = [];\n                    }\n                }\n            } else {\n                let identifier = tsData.axisOptions.uom;\n                this.checkYselector(identifier, tsData.axisOptions.uom);\n                this.yAxisSelect[identifier].ids = this.yAxisSelect[identifier].ids.filter(el => el !== internalId);\n                this.yAxisSelect[identifier].clicked = false;\n            }\n        }\n        this.plotGraph();\n    }\n    protected presenterOptionsChanged(options: D3PlotOptions): void {\n        this.oldGroupYaxis = this.plotOptions.groupYaxis;\n        if (this.plotOptions.hoverStyle !== HoveringStyle.point && options.hoverStyle === HoveringStyle.point) {\n            d3.select('g.d3line').attr('visibility', 'visible');\n        }\n        Object.assign(this.plotOptions, options);\n        if (this.rawSvg && this.yRangesEachUom) {\n            this.plotGraph();\n        }\n    }\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean): void {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadDatasetData(this.datasetMap.get(internalId), false);\n        }\n    }\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((dataset) => {\n            this.loadDatasetData(dataset, false);\n        });\n    }\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    public centerTime(timestamp: number): void {\n        const centeredTimespan = this.timeSrvc.centerTimespan(this.timespan, new Date(timestamp));\n        this.onTimespanChanged.emit(centeredTimespan);\n    }\n\n    private changeTime(from: number, to: number): void {\n        this.onTimespanChanged.emit(new Timespan(from, to));\n    }\n\n    private loadAddedDataset(dataset: IDataset): void {\n        this.datasetMap.set(dataset.internalId, dataset);\n        this.loadDatasetData(dataset, false);\n    }\n\n    // load data of dataset\n    private loadDatasetData(dataset: IDataset, force: boolean): void {\n        const datasetOptions = this.datasetOptions.get(dataset.internalId);\n        if (this.loadingCounter === 0) { this.onContentLoading.emit(true); }\n        this.loadingCounter++;\n\n        if (dataset instanceof Timeseries) {\n            const buffer = this.timeSrvc.getBufferedTimespan(this.timespan, 0.2);\n\n            this.api.getTsData<[number, number]>(dataset.id, dataset.url, buffer,\n                {\n                    format: 'flot',\n                    expanded: this.plotOptions.showReferenceValues || this.plotOptions.requestBeforeAfterValues,\n                    generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                },\n                { forceUpdate: force }\n            ).subscribe(\n                (result) => this.prepareTsData(dataset, result),\n                (error) => this.onError(error),\n                () => this.onCompleteLoadingData()\n            );\n        }\n    }\n\n    private onCompleteLoadingData(): void {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.onContentLoading.emit(false); }\n    }\n\n    /**\n     * Function to prepare each dataset for the graph and adding it to an array of datasets.\n     * @param dataset {IDataset} Object of the whole dataset\n     */\n    private prepareTsData(dataset: IDataset, data: Data<[number, number]>): void {\n\n        // add surrounding entries to the set\n        if (data.valueBeforeTimespan) { data.values.unshift(data.valueBeforeTimespan); }\n        if (data.valueAfterTimespan) { data.values.push(data.valueAfterTimespan); }\n\n        this.datasetMap.get(dataset.internalId).data = data;\n        const datasetIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n        const styles = this.datasetOptions.get(dataset.internalId);\n\n        // TODO: change uom for testing\n        // if (this.preparedData.length > 0) {\n        //     dataset.uom = 'mc';\n        // }\n\n        // generate random color, if color is not defined\n        if (styles.color === undefined) {\n            styles.color = this.colorService.getColor();\n        }\n\n        // end of check for datasets\n        const dataEntry: InternalDataEntry = {\n            internalId: dataset.internalId,\n            id: (datasetIdx >= 0 ? datasetIdx : this.preparedData.length),\n            color: styles.color,\n            data: styles.visible ? data.values.map(d => ({ timestamp: d[0], value: d[1] })) : [],\n            points: {\n                fillColor: styles.color\n            },\n            lines: {\n                lineWidth: styles.lineWidth,\n                pointRadius: styles.pointRadius\n            },\n            bars: {\n                lineWidth: styles.lineWidth\n            },\n            axisOptions: {\n                uom: dataset.uom,\n                label: dataset.label,\n                zeroBased: styles.zeroBasedYAxis,\n                yAxisRange: styles.yAxisRange,\n                autoRangeSelection: styles.autoRangeSelection,\n                separateYAxis: styles.separateYAxis,\n                parameters: {\n                    feature: dataset.parameters.feature,\n                    phenomenon: dataset.parameters.phenomenon,\n                    offering: dataset.parameters.offering\n                }\n            },\n            visible: styles.visible\n        };\n\n        let separationIdx: number = this.listOfSeparation.findIndex((id) => id === dataset.internalId);\n        if (styles.separateYAxis) {\n            if (separationIdx < 0) {\n                this.listOfSeparation.push(dataset.internalId);\n            }\n        } else {\n            this.listOfSeparation = this.listOfSeparation.filter(entry => entry !== dataset.internalId);\n        }\n\n        // alternative linewWidth = this.plotOptions.selected.includes(dataset.uom)\n        if (this.selectedDatasetIds.indexOf(dataset.internalId) >= 0) {\n            dataEntry.lines.lineWidth += this.addLineWidth;\n            dataEntry.lines.pointRadius > 0 ? dataEntry.lines.pointRadius += this.addLineWidth : dataEntry.lines.pointRadius += 0;\n            dataEntry.bars.lineWidth += this.addLineWidth;\n\n            if (styles.separateYAxis) {\n                this.checkYselector(dataEntry.internalId, dataEntry.axisOptions.uom);\n                if (this.yAxisSelect[dataEntry.internalId]) {\n                    this.yAxisSelect[dataEntry.internalId].clicked = true;\n                    this.yAxisSelect[dataEntry.internalId].ids.push(dataEntry.internalId);\n                }\n            }\n        }\n\n        // check selected datasets for highlighting\n        if (this.yAxisSelect) {\n            if (styles.separateYAxis) {\n                if (this.yAxisSelect[dataEntry.axisOptions.uom]) {\n                    let idx = this.yAxisSelect[dataEntry.axisOptions.uom].ids.findIndex(el => el === dataEntry.internalId);\n                    if (idx >= 0) {\n                        this.yAxisSelect[dataEntry.axisOptions.uom].ids.splice(idx, 1);\n                    }\n                    let counted = this.countGroupedDatasets(dataEntry.axisOptions.uom, dataEntry.internalId);\n                    if (this.yAxisSelect[dataEntry.axisOptions.uom].ids.length === counted) {\n                        this.yAxisSelect[dataEntry.axisOptions.uom].clicked = true;\n                    }\n                }\n            } else {\n                if (this.yAxisSelect[dataEntry.internalId] && this.yAxisSelect[dataEntry.axisOptions.uom]) {\n                    if (this.yAxisSelect[dataEntry.internalId].clicked) {\n                        this.yAxisSelect[dataEntry.axisOptions.uom].ids.push(dataEntry.internalId);\n                    } else {\n                        this.yAxisSelect[dataEntry.axisOptions.uom].clicked = false;\n                    }\n                    delete this.yAxisSelect[dataEntry.internalId];\n                }\n            }\n        }\n\n        if (datasetIdx >= 0) {\n            this.preparedData[datasetIdx] = dataEntry;\n        } else {\n            this.preparedData.push(dataEntry);\n        }\n        this.addReferenceValueData(dataset.internalId, styles, data, dataset.uom);\n        this.processData(dataEntry);\n    }\n\n    /**\n     * Function to add referencevaluedata to the dataset (e.g. mean).\n     * @param internalId {String} String with the id of a dataset\n     * @param styles {DatasetOptions} Object containing information for dataset styling\n     * @param data {Data} Array of Arrays containing the measurement-data of the dataset\n     * @param uom {String} String with the uom of a dataset\n     */\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data<[number, number]>, uom: string): void {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry: InternalDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    visible: true,\n                    data: data.referenceValues[refValue.id].map(d => ({ timestamp: d[0], value: d[1] })),\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                    axisOptions: {\n                        uom: uom\n                    }\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    /**\n     * Function that processes the data to calculate y axis range of each dataset.\n     * @param dataEntry {DataEntry} Object containing dataset related data.\n     */\n    protected processData(dataEntry: InternalDataEntry): void {\n        let calculatedRange: MinMaxRange;\n        let calculatedPreRange: MinMaxRange;\n        let calculatedOriginRange: MinMaxRange;\n        let predefinedRange: MinMaxRange;\n        if (dataEntry.axisOptions.yAxisRange && dataEntry.axisOptions.yAxisRange.min !== dataEntry.axisOptions.yAxisRange.max) {\n            predefinedRange = dataEntry.axisOptions.yAxisRange;\n        }\n        let autoDataExtent: boolean = dataEntry.axisOptions.autoRangeSelection;\n\n        // get min and max value of data\n        const dataExtent = d3.extent<DataEntry, number>(dataEntry.data, (d) => {\n            return d.value;\n        });\n\n        calculatedOriginRange = { min: dataExtent[0], max: dataExtent[1] };\n\n        let setDataExtent = false;\n\n        // calculate out of predefined range\n        if (predefinedRange && !this.plotOptions.overview) {\n            if (predefinedRange.min > predefinedRange.max) {\n                calculatedRange = { min: predefinedRange.max, max: predefinedRange.min };\n                calculatedPreRange = { min: predefinedRange.max, max: predefinedRange.min };\n            } else {\n                calculatedRange = { min: predefinedRange.min, max: predefinedRange.max };\n                calculatedPreRange = { min: predefinedRange.min, max: predefinedRange.max };\n            }\n            if (predefinedRange.min > dataExtent[1] || predefinedRange.max < dataExtent[0]) {\n                setDataExtent = autoDataExtent ? false : true;\n            }\n        } else {\n            setDataExtent = true;\n        }\n\n        if (setDataExtent) {\n            calculatedRange = { min: dataExtent[0], max: dataExtent[1] };\n            this.extendRange(calculatedRange);\n        }\n\n        // if style option 'zero based y-axis' is checked,\n        // the axis will be aligned to top 0 (with data below 0) or to bottom 0 (with data above 0)\n        // let zeroBasedValue = -1;\n        if (dataEntry.axisOptions.zeroBased && !this.plotOptions.overview) {\n            if (dataExtent[1] <= 0) {\n                calculatedRange.max = 0;\n                if (calculatedPreRange) { calculatedPreRange.max = 0; }\n            }\n            if (dataExtent[0] >= 0) {\n                calculatedRange.min = 0;\n                if (calculatedPreRange) { calculatedPreRange.min = 0; }\n            }\n        }\n\n        const newDatasetIdx = this.preparedData.findIndex((e) => e.internalId === dataEntry.internalId);\n\n        // set range, uom and id for each dataset\n        if (dataEntry.visible) {\n            this.dataYranges[newDatasetIdx] = {\n                uom: dataEntry.axisOptions.uom,\n                id: dataEntry.internalId,\n                zeroBased: dataEntry.axisOptions.zeroBased,\n                outOfrange: setDataExtent,\n                autoRange: autoDataExtent,\n                parameters: dataEntry.axisOptions.parameters\n            };\n            if (isFinite(calculatedRange.min) && isFinite(calculatedRange.max)) {\n                this.dataYranges[newDatasetIdx].range = calculatedRange;\n                this.dataYranges[newDatasetIdx].preRange = calculatedPreRange;\n                this.dataYranges[newDatasetIdx].originRange = calculatedOriginRange;\n            }\n        } else {\n            this.dataYranges[newDatasetIdx] = null;\n        }\n\n        // set range and array of IDs for each uom to generate y-axis later on\n        this.yRangesEachUom = [];\n        this.dataYranges.forEach((yRange) => {\n            if (yRange !== null) {\n                let idx: number = this.yRangesEachUom.findIndex((e) => e.uom === yRange.uom);\n                let yrangeObj: YRanges = {\n                    uom: yRange.uom,\n                    range: yRange.range,\n                    preRange: yRange.preRange,\n                    originRange: yRange.originRange,\n                    ids: [yRange.id],\n                    zeroBased: yRange.zeroBased,\n                    outOfrange: yRange.outOfrange,\n                    autoRange: yRange.autoRange,\n                    parameters: yRange.parameters\n                };\n\n                if (idx >= 0) {\n                    if (this.yRangesEachUom[idx].range) {\n                        if (yRange.range) {\n                            if (this.yRangesEachUom[idx].autoRange || yRange.autoRange) {\n                                if (yRange.preRange && this.yRangesEachUom[idx].preRange) {\n                                    this.checkCurrentLatest(idx, yRange, 'preRange');\n                                    this.yRangesEachUom[idx].range = this.yRangesEachUom[idx].preRange;\n                                } else {\n                                    this.checkCurrentLatest(idx, yRange, 'range');\n                                }\n                                this.yRangesEachUom[idx].autoRange = true;\n                            } else {\n                                if (yRange.outOfrange !== this.yRangesEachUom[idx].outOfrange) {\n                                    this.checkCurrentLatest(idx, yRange, 'originRange');\n                                    this.yRangesEachUom[idx].range = this.yRangesEachUom[idx].originRange;\n                                } else {\n                                    this.checkCurrentLatest(idx, yRange, 'range');\n                                }\n                            }\n                        }\n                    } else {\n                        this.takeLatest(idx, yRange, 'range');\n                    }\n\n                    this.yRangesEachUom[idx].ids.push(yRange.id);\n\n                } else {\n                    this.yRangesEachUom.push(yrangeObj);\n                }\n            }\n        });\n        if (this.graph) {\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function to set range to default interval, if min and max of range are not set.\n     * @param range {MinMaxRange} range to be set\n     */\n    protected extendRange(range: MinMaxRange): void {\n        if (range.min === range.max) {\n            range.min = range.min - 1;\n            range.max = range.max + 1;\n        }\n    }\n\n    /**\n     * Function to check ranges for min and max range.\n     * @param idx {Number} Index of element\n     * @param obj {YRanges} new object to be compared with old\n     * @param pos {String} type of range (e.g. preRange, range, originRange)\n     */\n    private checkCurrentLatest(idx: number, obj: YRanges, pos: string): void {\n        if (this.yRangesEachUom[idx][pos].min > obj[pos].min && !isNaN(obj[pos].min)) {\n            this.yRangesEachUom[idx][pos].min = obj[pos].min;\n        }\n        if (this.yRangesEachUom[idx][pos].max < obj[pos].max && !isNaN(obj[pos].max)) {\n            this.yRangesEachUom[idx][pos].max = obj[pos].max;\n        }\n    }\n\n    /**\n     * Function to set min and max range.\n     * @param idx {Number} Index of element\n     * @param obj {YRanges} new object\n     * @param pos {String} type of range (e.g. preRange, range, originRange)\n     */\n    private takeLatest(idx: number, obj: YRanges, pos: string): void {\n        this.yRangesEachUom[idx][pos] = obj[pos];\n    }\n\n    /**\n     * Function that returns the height of the graph diagram.\n     */\n    private calculateHeight(): number {\n        return (this.d3Elem.nativeElement as HTMLElement).clientHeight - this.margin.top - this.margin.bottom + (this.plotOptions.showTimeLabel ? 0 : 20);\n    }\n\n    /**\n     * Function that returns the width of the graph diagram.\n     */\n    private calculateWidth(): number {\n        return this.rawSvg.node().width.baseVal.value - this.margin.left - this.margin.right - this.maxLabelwidth;\n    }\n\n    /**\n     * Function that returns the value range for building the y axis for each uom of every dataset.\n     * @param uom {String} String that is the uom of a dataset\n     */\n    private getyAxisRange(uom: string): MinMaxRange {\n        let rangeObj = this.yRangesEachUom.find(el => el.uom === uom);\n        if (rangeObj) {\n            // check for zero based y axis\n            // if (rangeObj.zeroBased) {\n            //     if (rangeObj.zeroBasedValue === 0) {\n            //         range.min = 0;\n            //     } else {\n            //         range.max = 0;\n            //     }\n            // }\n            return rangeObj.range;\n        }\n        return null; // error: uom does not exist\n    }\n\n    /**\n     * Function to plot the graph and its dependencies\n     * (graph line, graph axes, event handlers)\n     */\n    protected plotGraph(): void {\n        this.highlightOutput = {\n            timestamp: 0,\n            ids: new Map()\n        };\n        if (!this.yRangesEachUom) { return; }\n\n        this.preparedData.forEach((entry) => {\n            let idx: number = this.listOfUoms.findIndex((uom) => uom === entry.axisOptions.uom);\n            if (idx < 0) { this.listOfUoms.push(entry.axisOptions.uom); }\n        });\n\n        // adapt axis highlighting, when changing grouping of y axis\n        if (this.oldGroupYaxis !== this.plotOptions.groupYaxis) {\n            this.changeYselection();\n        }\n\n        this.height = this.calculateHeight();\n        this.width = this.calculateWidth();\n        this.graph.selectAll('*').remove();\n        this.graphFocus.selectAll('*').remove();\n\n        this.bufferSum = 0;\n        this.yScaleBase = null;\n\n        // get range of x and y axis\n        this.xAxisRange = this.timespan;\n\n        // #####################################################\n        let yAxisArray: YRanges[] = [];\n        if (this.plotOptions.groupYaxis || this.plotOptions.groupYaxis === undefined) {\n            yAxisArray = this.yRangesEachUom;\n            // push all listOfSeparation into yAxisArray\n            if (this.listOfSeparation.length > 0) {\n                this.listOfSeparation.forEach((sepId) => {\n                    let newEl: YRanges = this.dataYranges.find((el) => el !== null && el.id === sepId);\n                    if (newEl && (yAxisArray.findIndex(el => el.id === newEl.id) < 0)) {\n                        // if all dataset for specific uom are separated from grouping, the yaxis of this uom will be removed from axis\n                        let existingUom = yAxisArray.findIndex(el => el.uom === newEl.uom && (el.ids !== undefined || el.ids.length === 0));\n                        if (existingUom >= 0) {\n                            // delete id from ids\n                            let deleteId = yAxisArray[existingUom].ids.findIndex(id => id === sepId);\n                            if (deleteId >= 0) { yAxisArray[existingUom].ids.splice(deleteId, 1); }\n                            if (yAxisArray[existingUom].ids.length === 0) {\n                                // delete yAxisArray[existingUom]\n                                yAxisArray.splice(existingUom, 1);\n                            }\n                        }\n                        yAxisArray.push(newEl);\n                    }\n                });\n            }\n        } else {\n            yAxisArray = this.dataYranges;\n        }\n\n        yAxisArray.forEach((entry) => {\n            if (entry !== null) {\n                entry.first = (this.yScaleBase === null);\n                entry.offset = this.bufferSum;\n\n                let yAxisResult = this.drawYaxis(entry);\n                if (this.yScaleBase === null) {\n                    this.yScaleBase = yAxisResult.yScale;\n                    this.bufferSum = yAxisResult.buffer;\n                } else {\n                    this.bufferSum = yAxisResult.buffer;\n                }\n                entry.yScale = yAxisResult.yScale;\n            }\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw x and y axis\n        this.drawXaxis(this.bufferSum);\n\n        // create background as rectangle providing panning\n        this.background = this.graph.append('svg:rect')\n            .attr('width', this.width - this.bufferSum)\n            .attr('height', this.height)\n            .attr('id', 'backgroundRect')\n            .attr('fill', 'none')\n            .attr('stroke', 'none')\n            .attr('pointer-events', 'all')\n            .attr('transform', 'translate(' + this.bufferSum + ', 0)');\n\n        this.drawAllGraphLines();\n        this.addTimespanJumpButtons();\n\n        // #####################################################\n        // create background rect\n        if (!this.plotOptions.overview) {\n            // execute when it is not an overview diagram\n            // mouse events hovering\n            if (this.plotOptions.hoverable) {\n                if (this.plotOptions.hoverStyle === HoveringStyle.line) {\n                    this.createLineHovering();\n                } else {\n                    d3.select('g.d3line').attr('visibility', 'hidden');\n                }\n            }\n\n            if (this.plotOptions.togglePanZoom === false) {\n                this.background\n                    .call(d3.zoom()\n                        .on('start', this.zoomStartHandler)\n                        .on('zoom', this.zoomHandler)\n                        .on('end', this.zoomEndHandler)\n                    );\n            } else {\n                this.background\n                    .call(d3.drag()\n                        .on('start', this.panStartHandler)\n                        .on('drag', this.panMoveHandler)\n                        .on('end', this.panEndHandler));\n            }\n\n            this.createCopyrightLabel();\n        } else {\n            // execute when it is overview diagram\n            let interval: [number, number] = this.getXDomainByTimestamp();\n            let overviewTimespanInterval = [interval[0], interval[1]];\n\n            // create brush\n            let brush = d3.brushX()\n                .extent([[0, 0], [this.width, this.height]])\n                .on('end', () => {\n                    // on mouseclick change time after brush was moved\n                    if (this.mousedownBrush) {\n                        let timeByCoord: [number, number] = this.getTimestampByCoord(d3.event.selection[0], d3.event.selection[1]);\n                        this.changeTime(timeByCoord[0], timeByCoord[1]);\n                    }\n                    this.mousedownBrush = false;\n                });\n\n            // add brush to svg\n            this.background = this.graph.append('g')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('pointer-events', 'all')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, overviewTimespanInterval);\n\n            /**\n             * add event to selection to prevent unnecessary re-rendering of brush\n             * add style of brush selection here\n             * e.g. 'fill' for color,\n             * 'stroke' for borderline-color,\n             * 'stroke-dasharray' for customizing borderline-style\n             */\n            this.background.selectAll('.selection')\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n\n            // do not allow clear selection\n            this.background.selectAll('.overlay')\n                .remove();\n\n            // add event to resizing handle to allow change time on resize\n            this.background.selectAll('.handle')\n                .style('fill', 'red')\n                .style('opacity', 0.3)\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n        }\n    }\n\n    private createPointHovering(entry: InternalDataEntry, line: d3.Line<DataEntry>) {\n        this.graphBody.selectAll('.hoverDots')\n            .data(entry.data.filter((d) => !isNaN(d.value)))\n            .enter().append('circle')\n            .attr('class', 'hoverDots')\n            .attr('id', (d: DataEntry) => 'hover-dot-' + d.timestamp + '-' + entry.id)\n            .attr('stroke', 'transparent')\n            .attr('fill', 'transparent')\n            .attr('cx', line.x())\n            .attr('cy', line.y())\n            .attr('r', entry.lines.pointRadius + 3)\n            .on('mouseover', (d: DataEntry) => this.mouseOverPointHovering(d, entry))\n            .on('mouseout', (d: DataEntry) => this.mouseOutPointHovering(d, entry))\n            .on('mousedown', (d: DataEntry) => this.clickDataPoint(d, entry));\n    }\n\n    private createLineHovering() {\n        this.background\n            .on('mousemove.focus', this.mousemoveHandler)\n            .on('mouseout.focus', this.mouseoutHandler);\n        // line inside graph\n        this.highlightFocus = this.focusG.append('svg:line')\n            .attr('class', 'mouse-focus-line')\n            .attr('x2', '0')\n            .attr('y2', '0')\n            .attr('x1', '0')\n            .attr('y1', '0')\n            .style('stroke', 'black')\n            .style('stroke-width', '1px');\n        this.preparedData.forEach((entry) => {\n            // label inside graph\n            entry.focusLabelRect = this.focusG.append('svg:rect')\n                .attr('class', 'mouse-focus-label')\n                .style('fill', 'white')\n                .style('stroke', 'none')\n                .style('pointer-events', 'none');\n            entry.focusLabel = this.focusG.append('svg:text')\n                .attr('class', 'mouse-focus-label')\n                .style('pointer-events', 'none')\n                .style('fill', entry.color)\n                .style('font-weight', 'lighter');\n            this.focuslabelTime = this.focusG.append('svg:text')\n                .style('pointer-events', 'none')\n                .attr('class', 'mouse-focus-time');\n        });\n    }\n\n    private clickDataPoint(d: DataEntry, entry: InternalDataEntry) {\n        console.log('click point');\n        if (d !== undefined) {\n            const externalId: InternalDatasetId = this.datasetIdResolver.resolveInternalId(entry.internalId);\n            const apiurl = externalId.url;\n            const timespan: Timespan = { from: d.timestamp, to: d.timestamp };\n\n            // request all timeseries that have data for the same offering and feature\n            this.api.getTimeseries(apiurl,\n                {\n                    offering: entry.axisOptions.parameters.offering.id,\n                    feature: entry.axisOptions.parameters.feature.id\n                }).subscribe(\n                    (tsArray) => {\n                        const timeseries = [];\n                        tsArray.forEach(ts => {\n                            timeseries.push(ts.id);\n                        });\n\n                        // request ts data by timeseries ID for specific offering and feature\n                        this.api.getTimeseriesData(apiurl, timeseries, timespan)\n                            .subscribe(\n                                (tsData) => this.onClickDataPoint.emit(tsData),\n                                (error) => console.error(error)\n                            );\n                    },\n                    (error) => console.error(error)\n                );\n        }\n    }\n\n    private addTimespanJumpButtons(): void {\n        let dataVisible = false;\n        let formerTimestamp = null;\n        let laterTimestamp = null;\n        if (this.plotOptions.requestBeforeAfterValues) {\n            this.preparedData.forEach((entry: InternalDataEntry) => {\n                const firstIdxInTimespan = entry.data.findIndex(e => (this.timespan.from < e[0] && this.timespan.to > e[0]) && isFinite(e[1]));\n                if (firstIdxInTimespan < 0) {\n                    const lastIdxInTimespan = entry.data.findIndex(e => (e[0] > this.timespan.from && e[0] > this.timespan.to) && isFinite(e[1]));\n                    if (lastIdxInTimespan >= 0) {\n                        laterTimestamp = entry.data[entry.data.length - 1][0];\n                    }\n                    const temp = entry.data.findIndex(e => (e[0] < this.timespan.from && e[0] < this.timespan.to) && isFinite(e[1]));\n                    if (temp >= 0) {\n                        formerTimestamp = entry.data[entry.data.length - 1][0];\n                    }\n                } else {\n                    dataVisible = true;\n                }\n            });\n        }\n        if (!dataVisible) {\n            const buttonWidth = 50;\n            const leftRight = 15;\n            if (formerTimestamp) {\n                const g = this.background.append('g');\n                g.append('svg:rect')\n                    .attr('class', 'formerButton')\n                    .attr('width', buttonWidth + 'px')\n                    .attr('height', this.height + 'px')\n                    .attr('transform', 'translate(' + this.bufferSum + ', 0)')\n                    .on('click', () => this.centerTime(formerTimestamp));\n                g.append('line')\n                    .attr('class', 'arrow')\n                    .attr('x1', 0 + this.bufferSum + leftRight + 'px')\n                    .attr('y1', this.height / 2 + 'px')\n                    .attr('x2', 0 + this.bufferSum + (buttonWidth - leftRight) + 'px')\n                    .attr('y2', this.height / 2 - (buttonWidth - leftRight) / 2 + 'px');\n                g.append('line')\n                    .attr('class', 'arrow')\n                    .attr('x1', 0 + this.bufferSum + leftRight + 'px')\n                    .attr('y1', this.height / 2 + 'px')\n                    .attr('x2', 0 + this.bufferSum + (buttonWidth - leftRight) + 'px')\n                    .attr('y2', this.height / 2 + (buttonWidth - leftRight) / 2 + 'px');\n            }\n            if (laterTimestamp) {\n                const g = this.background.append('g');\n                g.append('svg:rect')\n                    .attr('class', 'laterButton')\n                    .attr('width', '50px')\n                    .attr('height', this.height)\n                    .attr('transform', 'translate(' + (this.width - 50) + ', 0)')\n                    .on('click', () => this.centerTime(laterTimestamp));\n                g.append('line')\n                    .attr('class', 'arrow')\n                    .attr('x1', this.width - leftRight + 'px')\n                    .attr('y1', this.height / 2 + 'px')\n                    .attr('x2', this.width - (buttonWidth - leftRight) + 'px')\n                    .attr('y2', this.height / 2 - (buttonWidth - leftRight) / 2 + 'px');\n                g.append('line')\n                    .attr('class', 'arrow')\n                    .attr('x1', this.width - leftRight + 'px')\n                    .attr('y1', this.height / 2 + 'px')\n                    .attr('x2', this.width - (buttonWidth - leftRight) + 'px')\n                    .attr('y2', this.height / 2 + (buttonWidth - leftRight) / 2 + 'px');\n            }\n        }\n    }\n\n    private createCopyrightLabel(): void {\n        if (this.plotOptions.copyright) {\n            let background = this.getDimensions(this.background.node());\n            // default = top left\n            let x = 0; // left\n            let y = 0; // + this.margin.top; // top\n            this.copyright = this.graph.append('g');\n            let copyrightLabel = this.copyright.append('svg:text')\n                .text(this.plotOptions.copyright.label)\n                .attr('class', 'copyright')\n                .style('pointer-events', 'none')\n                .style('fill', 'grey');\n            if (this.plotOptions.copyright.positionX === 'right') {\n                x = background.w - this.margin.right - this.getDimensions(copyrightLabel.node()).w;\n            }\n            if (this.plotOptions.copyright.positionY === 'bottom') {\n                y = background.h - this.margin.top * 2;\n            }\n            let yTransform = y + this.getDimensions(copyrightLabel.node()).h - 3;\n            let xTransform = this.bufferSum + x;\n            copyrightLabel\n                .attr('transform', 'translate(' + xTransform + ', ' + yTransform + ')');\n            this.copyright.append('svg:rect')\n                .attr('class', 'copyright')\n                .style('fill', 'none')\n                .style('stroke', 'none')\n                .style('pointer-events', 'none')\n                .attr('width', this.getDimensions(copyrightLabel.node()).w)\n                .attr('height', this.getDimensions(copyrightLabel.node()).h)\n                .attr('transform', 'translate(' + xTransform + ', ' + y + ')');\n        }\n    }\n\n    /**\n     * Draws for every preprared data entry the graph line.\n     */\n    protected drawAllGraphLines(): void {\n        this.focusG = this.graphFocus.append('g');\n        if ((this.plotOptions.hoverStyle === HoveringStyle.point) && !this.plotOptions.overview) {\n            // create label for point hovering\n            this.highlightRect = this.focusG.append('svg:rect');\n            this.highlightText = this.focusG.append('svg:text');\n        }\n        this.preparedData.forEach((entry) => this.drawGraphLine(entry));\n    }\n\n    /**\n     * Function that calculates and returns the x diagram coordinate for the brush range\n     * for the overview diagram by the selected time interval of the main diagram.\n     * Calculate to get brush extent when main diagram time interval changes.\n     */\n    private getXDomainByTimestamp(): [number, number] {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * brush_min =\n         * (overview_width / (overview_max - overview_min)) * (brush_min - overview_min)\n         * brus_max =\n         * (overview_width / (overview_max - overview_min)) * (brush_max - overview_min)\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let minDiagramTimestamp = this.mainTimeInterval.from;\n        let maxDiagramTimestamp = this.mainTimeInterval.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let divOverviewTimeWidth = diagramWidth / diffOverviewTimeInterval;\n        let minCalcBrush: number = divOverviewTimeWidth * (minDiagramTimestamp - minOverviewTimeInterval);\n        let maxCalcBrush: number = divOverviewTimeWidth * (maxDiagramTimestamp - minOverviewTimeInterval);\n\n        return [minCalcBrush, maxCalcBrush];\n    }\n\n    /**\n     * Function that calculates and returns the timestamp for the main diagram calculated\n     * by the selected coordinate of the brush range.\n     * @param minCalcBrush {Number} Number with the minimum coordinate of the selected brush range.\n     * @param maxCalcBrush {Number} Number with the maximum coordinate of the selected brush range.\n     */\n    private getTimestampByCoord(minCalcBrush: number, maxCalcBrush: number): [number, number] {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * minDiagramTimestamp =\n         * ((minCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         * maxDiagramTimestamp =\n         * ((maxCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let minDiagramTimestamp: number = ((minCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n        let maxDiagramTimestamp: number = ((maxCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n\n        return [minDiagramTimestamp, maxDiagramTimestamp];\n    }\n\n    /**\n     * Function that draws the x axis to the svg element.\n     * @param bufferXrange {Number} Number with the distance between left edge and the beginning of the graph.\n     */\n    private drawXaxis(bufferXrange: number): void {\n        // range for x axis scale\n        this.xScaleBase = d3.scaleTime()\n            .domain([new Date(this.xAxisRange.from), new Date(this.xAxisRange.to)])\n            .range([bufferXrange, this.width]);\n\n        let xAxis = d3.axisBottom(this.xScaleBase)\n            .tickFormat(d => {\n                const date = new Date(d.valueOf());\n\n                const formatMillisecond = '.%L',\n                    formatSecond = ':%S',\n                    formatMinute = '%H:%M',\n                    formatHour = '%H:%M',\n                    formatDay = '%b %d',\n                    formatWeek = '%b %d',\n                    formatMonth = '%B',\n                    formatYear = '%Y';\n\n                const format = d3.timeSecond(date) < date ? formatMillisecond\n                    : d3.timeMinute(date) < date ? formatSecond\n                        : d3.timeHour(date) < date ? formatMinute\n                            : d3.timeDay(date) < date ? formatHour\n                                : d3.timeMonth(date) < date ? (d3.timeWeek(date) < date ? formatDay : formatWeek)\n                                    : d3.timeYear(date) < date ? formatMonth\n                                        : formatYear;\n                return this.timeFormatLocaleService.getTimeLocale(format)(new Date(d.valueOf()));\n            });\n\n        this.graph.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxis)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        if (this.plotOptions.grid) {\n            // draw the x grid lines\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(xAxis\n                    .tickSize(-this.height)\n                    .tickFormat(() => '')\n                );\n        }\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        if (this.plotOptions.showTimeLabel) {\n            this.graph.append('text')\n                .attr('x', (this.width + bufferXrange) / 2)\n                .attr('y', this.height + this.margin.bottom - 5)\n                .style('text-anchor', 'middle')\n                .text('time');\n        }\n    }\n\n    /**\n     * Function to draw the y axis for each dataset.\n     * Each uom has its own axis.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    private drawYaxis(entry: YRanges): YScale {\n        let showAxis = (this.plotOptions.overview ? false : (this.plotOptions.yaxis === undefined ? true : this.plotOptions.yaxis));\n        // check for y axis grouping\n        let range;\n        if (this.plotOptions.groupYaxis || this.plotOptions.groupYaxis === undefined) {\n            // grouped axis\n            let uomIdx = this.listOfUoms.findIndex((uom) => uom === entry.uom);\n            if (uomIdx >= 0 && entry.ids && entry.ids.length > 1) {\n                // grouped with more than ony datasets (if uom has more than one datasets)\n                range = this.getyAxisRange(entry.uom);\n            } else {\n                // separated id (if not entry.uom) OR grouped, but only one dataset (if entry is grouped but has only one id => use range of this dataset)\n                let entryElem = this.dataYranges.find((el) => el !== null && (entry.id ? el.id === entry.id : el.id === entry.ids[0]));\n                if (entryElem) {\n                    range = entryElem.range;\n                    // range = entryElem.preRange ? entryElem.preRange : entryElem.range;\n                }\n            }\n        } else {\n            // ungrouped axis\n            let entryElem = this.dataYranges.find((el) => el !== null && el.id === entry.id);\n            if (entryElem) {\n                range = entryElem.preRange ? entryElem.preRange : entryElem.range;\n            }\n        }\n\n        let yMin = -1;\n        let yMax = 1;\n        if (range !== undefined && range !== null) {\n            yMin = range.min;\n            yMax = range.max;\n        }\n\n        // range for y axis scale\n        const rangeOffset = (yMax - yMin) * 0.10;\n        const yScale = d3.scaleLinear()\n            .domain([yMin - rangeOffset, yMax + rangeOffset])\n            .range([this.height, 0]);\n\n        let yAxisGen = d3.axisLeft(yScale).ticks(5);\n        let buffer = 0;\n\n        // only if yAxis should not be visible\n        if (!showAxis) {\n            yAxisGen\n                .tickFormat(() => '')\n                .tickSize(0);\n        }\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // only if yAxis should be visible\n        if (showAxis) {\n            // draw y axis label\n            const text = this.graph.append('text')\n                .attr('transform', 'rotate(-90)')\n                .attr('dy', '1em')\n                .attr('class', 'yaxisTextLabel')\n                .style('font', '18px times')\n                .style('text-anchor', 'middle')\n                .style('fill', 'black')\n                .text((entry.id ? (entry.uom + ' @ ' + entry.parameters.feature.label) : entry.uom));\n            // .text((entry.id ? (entry.parameters.station + ' (' + entry.uom + ' ' + entry.parameters.phenomenon + ')') : entry.uom));\n\n            this.graph.selectAll('.yaxisTextLabel')\n                .call(this.wrapText, (axis.node().getBBox().height - 10), this.height / 2);\n\n            const axisWidth = axis.node().getBBox().width + 10 + this.getDimensions(text.node()).h;\n            // if yAxis should not be visible, buffer will be set to 0\n            buffer = (showAxis ? entry.offset + (axisWidth < this.margin.left ? this.margin.left : axisWidth) : 0);\n            const axisWidthDiv = (axisWidth < this.margin.left ? this.margin.left : axisWidth);\n\n            if (!entry.first) {\n                axis.attr('transform', 'translate(' + buffer + ', 0)');\n            } else {\n                buffer = axisWidthDiv - this.margin.left;\n                axis.attr('transform', 'translate(' + buffer + ', 0)');\n            }\n\n            let textOff = - (this.bufferSum);\n            if (entry.first) {\n                textOff = this.margin.left;\n            }\n            text.attr('y', 0 - textOff);\n\n            if (text) {\n                let textWidth = text.node().getBBox().width;\n                let textHeight = text.node().getBBox().height;\n                let textPosition = {\n                    x: text.node().getBBox().x,\n                    y: text.node().getBBox().y\n                };\n                let axisradius = 4;\n                let startOfPoints = {\n                    x: textPosition.y + textHeight / 2 + axisradius / 2, // + 2 because radius === 4\n                    y: Math.abs(textPosition.x + textWidth) - axisradius * 2\n                };\n                let pointOffset = 0;\n\n                if (entry.ids) {\n                    entry.ids.forEach((entryID) => {\n                        let dataentry = this.preparedData.find(el => el.internalId === entryID);\n                        if (dataentry) {\n                            this.graph.append('circle')\n                                .attr('class', 'axisDots')\n                                .attr('id', 'axisdot-' + entry.id)\n                                .attr('stroke', dataentry.color)\n                                .attr('fill', dataentry.color)\n                                .attr('cx', startOfPoints.x)\n                                .attr('cy', startOfPoints.y - pointOffset)\n                                .attr('r', axisradius);\n                            pointOffset += axisradius * 3;\n                        }\n                    });\n                } else {\n                    let dataentry = this.preparedData.find(el => el.internalId === entry.id);\n                    if (dataentry) {\n                        this.graph.append('circle')\n                            .attr('class', 'axisDots')\n                            .attr('id', 'axisdot-' + entry.id)\n                            .attr('stroke', dataentry.color)\n                            .attr('fill', dataentry.color)\n                            .attr('cx', startOfPoints.x)\n                            .attr('cy', startOfPoints.y - pointOffset)\n                            .attr('r', axisradius);\n                    }\n                }\n            }\n\n            // set id to uom, if group yaxis is toggled, else set id to dataset id\n            let id: string = (entry.id ? entry.id : entry.uom);\n            this.checkYselector(id, entry.uom);\n\n            const axisDiv = this.graph.append('rect')\n                // .attr('id', 'yaxis' + id)\n                .attr('class', 'axisDiv')\n                .attr('width', axisWidthDiv)\n                .attr('height', this.height)\n                .attr('fill', 'grey')\n                .attr('opacity', (this.yAxisSelect[id].clicked ? this.opac.click : this.opac.default))\n                .on('mouseover', (d, i, k) => {\n                    d3.select(k[0])\n                        .attr('opacity', this.opac.hover);\n                })\n                .on('mouseout', (d, i, k) => {\n                    if (!this.yAxisSelect[id].clicked) {\n                        d3.select(k[0])\n                            .attr('opacity', this.opac.default);\n                    } else {\n                        d3.select(k[0])\n                            .attr('opacity', this.opac.click);\n                    }\n                })\n                .on('mouseup', (d, i, k) => {\n                    if (!this.yAxisSelect[id].clicked) {\n                        d3.select(k[0])\n                            .attr('opacity', this.opac.default);\n                    } else {\n                        d3.select(k[0])\n                            .attr('opacity', this.opac.click);\n                    }\n                    this.yAxisSelect[id].clicked = !this.yAxisSelect[id].clicked;\n\n                    let entryArray = [];\n                    if (entry.id) {\n                        entryArray.push(entry.id);\n                    } else {\n                        entryArray = entry.ids;\n                    }\n                    this.highlightLine(entryArray);\n                });\n\n            if (!entry.first) {\n                axisDiv\n                    .attr('x', entry.offset)\n                    .attr('y', 0);\n            } else {\n                axisDiv\n                    .attr('x', 0 - this.margin.left - this.maxLabelwidth)\n                    .attr('y', 0);\n            }\n\n        }\n\n        // draw the y grid lines\n        if (this.yRangesEachUom.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(' + buffer + ', 0)')\n                .call(d3.axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width + buffer)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    /**\n     * Function to check whether object yAxisSelect exists with selected uom.\n     * If it does not exist, it will be created.\n     * @param identifier {String} String providing the selected uom or the selected dataset ID.\n     */\n    private checkYselector(identifier: string, uom: string): void {\n        if (this.yAxisSelect === undefined) {\n            this.yAxisSelect = {};\n        }\n\n        let selector: YAxisSelection = {\n            id: identifier,\n            ids: (this.yAxisSelect[identifier] !== undefined ? this.yAxisSelect[identifier].ids : []),\n            uom: uom,\n            clicked: (this.yAxisSelect[identifier] !== undefined ? this.yAxisSelect[identifier].clicked : false)\n        };\n\n        this.yAxisSelect[identifier] = selector;\n    }\n\n    /**\n     * Function to adapt y axis highlighting to selected TS or selected uom\n     */\n    private changeYselection(): void {\n        let groupList = {};\n        if (this.yAxisSelect) {\n            if (!this.plotOptions.groupYaxis) {\n                // before: group\n                for (let key in this.yAxisSelect) {\n                    if (this.yAxisSelect.hasOwnProperty(key)) {\n                        let el = this.yAxisSelect[key];\n                        if (el.ids.length > 0) {\n                            el.ids.forEach((id) => {\n                                let dataEl = this.preparedData.find((entry) => entry.internalId === id);\n                                let newSelector: YAxisSelection = {\n                                    id: id,\n                                    ids: [id],\n                                    clicked: true,\n                                    uom: dataEl.axisOptions.uom\n                                };\n                                groupList[id] = newSelector;\n                            });\n                        } else if (el.clicked && el.uom !== el.id) {\n                            let dataEl = this.preparedData.find((entry) => entry.internalId === el.id);\n                            let newSelector: YAxisSelection = {\n                                id: el.id,\n                                ids: [el.id],\n                                clicked: true,\n                                uom: dataEl.axisOptions.uom\n                            };\n                            groupList[el.id] = newSelector;\n                        }\n                    }\n                }\n            } else {\n                // before: no group\n                for (let key in this.yAxisSelect) {\n                    if (this.yAxisSelect.hasOwnProperty(key)) {\n                        let el = this.yAxisSelect[key];\n                        let dataEl = this.preparedData.find((entry) => entry.internalId === el.id);\n                        let selectionID;\n                        if (dataEl && dataEl.axisOptions.separateYAxis) {\n                            // selection is dataset with internalId\n                            selectionID = dataEl.internalId;\n                        } else {\n                            // selection is uom\n                            selectionID = el.uom;\n                        }\n                        if (!groupList[selectionID]) {\n                            let currentUom: YAxisSelection = {\n                                id: selectionID,\n                                ids: [],\n                                clicked: false,\n                                uom: el.uom\n                            };\n                            groupList[selectionID] = currentUom;\n                        }\n\n                        if (el.clicked) {\n                            groupList[selectionID].ids.push(el.id);\n                        }\n\n                        if (el.uom === selectionID) {\n                            // execute for grouped uom\n                            let groupedDatasets = this.countGroupedDatasets(selectionID, el.uom);\n                            if (groupList[selectionID].ids.length === groupedDatasets) {\n                                groupList[selectionID].clicked = true;\n                            }\n                        } else if (el.clicked) {\n                            // execute for ungrouped dataset\n                            groupList[selectionID].clicked = true;\n                        }\n                    }\n                }\n            }\n            this.yAxisSelect = {}; // unselect all - y axis\n            this.yAxisSelect = groupList;\n        }\n        this.oldGroupYaxis = this.plotOptions.groupYaxis;\n    }\n\n    /**\n     * Function that returns the amount of datasets that are grouped with the same uom\n     * @param uom {String} uom\n     * @param id {String} internalId of the dataset that can be skipped\n     * returns {Number} amount of datasets with the given uom\n     */\n    private countGroupedDatasets(uom: string, id: string): number {\n        let arrayUomCount = 0;\n        this.dataYranges.forEach(el => {\n            if (el !== null && el.uom === uom && el.id !== id) {\n                let idx = this.preparedData.findIndex(ds => ds.internalId === el.id && ds.axisOptions.separateYAxis === false);\n                if (idx >= 0) { arrayUomCount++; }\n            }\n        });\n        return arrayUomCount;\n    }\n\n    /**\n     * Function to set selected Ids that should be highlighted.\n     * @param ids {Array} Array of Strings containing the Ids.\n     * @param uom {String} String with the uom for the selected Ids\n     */\n    private highlightLine(ids: string[]): void {\n        let changeFalse: HighlightDataset[] = [];\n        let changeTrue: HighlightDataset[] = [];\n        ids.forEach((ID) => {\n            if (this.selectedDatasetIds.indexOf(ID) >= 0) {\n                changeFalse.push({ id: ID, change: false });\n            }\n            changeTrue.push({ id: ID, change: true });\n        });\n\n        if (ids.length === changeFalse.length) {\n            this.changeSelectedIds(changeFalse, true);\n        } else {\n            this.changeSelectedIds(changeTrue, false);\n        }\n    }\n\n    /**\n     * Function that changes state of selected Ids.\n     */\n    private changeSelectedIds(toHighlightDataset: HighlightDataset[], change: boolean): void {\n        if (change) {\n            toHighlightDataset.forEach((obj) => {\n                this.removeSelectedId(obj.id);\n                this.selectedDatasetIds.splice(this.selectedDatasetIds.findIndex((entry) => entry === obj.id), 1);\n            });\n        } else {\n            toHighlightDataset.forEach((obj) => {\n                if (this.selectedDatasetIds.indexOf(obj.id) < 0) {\n                    this.setSelectedId(obj.id);\n                    this.selectedDatasetIds.push(obj.id);\n                }\n            });\n        }\n\n        this.onDatasetSelected.emit(this.selectedDatasetIds);\n        this.plotGraph();\n    }\n\n    /**\n     * Function to draw the graph line for each dataset.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    protected drawGraphLine(entry: InternalDataEntry): void {\n        // const getYaxisRange = this.yRangesEachUom.find((obj) => obj.ids.indexOf(entry.internalId) > -1);\n        // check for y axis grouping\n        let getYaxisRange = this.getYaxisRange(entry);\n\n        if (entry.data.length > 0) {\n            if (getYaxisRange !== undefined) {\n                let yScaleBase = getYaxisRange.yScale;\n\n                // #####################################################\n                // create body to clip graph\n                // unique ID generated through the current time (current time when initialized)\n                let querySelectorClip = 'clip' + this.currentTimeId;\n\n                this.graph\n                    .append('svg:clipPath')\n                    .attr('id', querySelectorClip)\n                    .append('svg:rect')\n                    .attr('x', this.bufferSum)\n                    .attr('y', 0)\n                    .attr('width', this.width - this.bufferSum)\n                    .attr('height', this.height);\n\n                // draw grah line\n                this.graphBody = this.graph\n                    .append('g')\n                    .attr('clip-path', 'url(#' + querySelectorClip + ')');\n\n                // create graph line\n                let line = this.createLine(this.xScaleBase, yScaleBase);\n\n                this.graphBody\n                    .append('svg:path')\n                    .datum(entry.data)\n                    .attr('class', 'line')\n                    .attr('fill', 'none')\n                    .attr('stroke', entry.color)\n                    .attr('stroke-width', entry.lines.lineWidth)\n                    .attr('d', line);\n\n                this.graphBody.selectAll('.graphDots')\n                    .data(entry.data.filter((d) => !isNaN(d.value)))\n                    .enter().append('circle')\n                    .attr('class', 'graphDots')\n                    .attr('id', (d: DataEntry) => 'dot-' + d.timestamp + '-' + entry.id)\n                    .attr('stroke', entry.color)\n                    .attr('fill', entry.color)\n                    .attr('cx', line.x())\n                    .attr('cy', line.y())\n                    .attr('r', entry.lines.pointRadius);\n\n                if (this.plotOptions.hoverStyle === HoveringStyle.point) {\n                    this.createPointHovering(entry, line);\n                }\n            }\n        }\n    }\n\n    /**\n     * Function that shows labeling via mousmove.\n     */\n    private mousemoveHandler = (): void => {\n        const coords = d3.mouse(this.background.node());\n        this.labelTimestamp = [];\n        this.labelXCoord = [];\n        this.distLabelXCoord = [];\n        this.preparedData.forEach((entry, entryIdx) => {\n            const idx = this.getItemForX(coords[0] + this.bufferSum, entry.data);\n            this.showDiagramIndicator(entry, idx, coords[0], entryIdx);\n        });\n\n        let outputIds: string[] = [];\n        for (const key in this.highlightOutput.ids) {\n            if (this.highlightOutput.ids.hasOwnProperty(key)) {\n                outputIds.push(key);\n            }\n        }\n\n        if (outputIds.length <= 0) {\n            // do not show line in graph when no data available for timestamp\n            this.focusG.style('visibility', 'hidden');\n        } else {\n            let last = 0,\n                visible = false,\n                first = true,\n                labelArray: [d3.BaseType, d3.BaseType][] = [],\n                textRectArray: d3.BaseType[] = d3.selectAll('.focus-visibility').nodes();\n\n            // get and sort all text labels and rectangle of the text labels and combine related\n            for (let i = 0; i < textRectArray.length; i += 2) {\n                labelArray.push([textRectArray[i], textRectArray[i + 1]]);\n            }\n            // sory by y coordinate\n            labelArray.sort((a, b) => parseFloat(d3.select(a[0]).attr('y')) - parseFloat(d3.select(b[0]).attr('y')));\n\n            // translate if overlapping\n            labelArray.forEach((el) => {\n                // pairs of 2 objects (rectangle (equal) and label (odd))\n                d3.select(el[0])\n                    .attr('transform', (d, i, f) => {\n                        if (d3.select(el[0]).attr('visibility') !== 'hidden') {\n                            visible = true;\n                            let ycoord: number = parseFloat(d3.select(el[0]).attr('y'));\n                            let offset = 0;\n                            if (!first) {\n                                offset = Math.max(0, (last + 30) - ycoord);\n                                if (offset < 10) { offset = 10; }\n                            }\n                            if (offset > 0) {\n                                return 'translate(0, ' + offset + ')';\n                            }\n                        }\n                        return 'translate(0, 0)';\n                    });\n\n                d3.select(el[1])\n                    .attr('transform', (d, i, f) => {\n                        if (d3.select(el[1]).attr('visibility') !== 'hidden') {\n                            visible = true;\n                            let ycoord: number = parseFloat(d3.select(el[0]).attr('y'));\n                            let offset = 0;\n                            if (!first) {\n                                offset = Math.max(0, (last + 30) - ycoord);\n                                if (offset < 10) { offset = 10; }\n                            }\n                            last = offset + ycoord;\n                            if (offset > 0) {\n                                return 'translate(0, ' + offset + ')';\n                            }\n                        }\n                        return 'translate(0, 0)';\n                    });\n\n                if (visible) {\n                    first = false;\n                }\n\n            });\n        }\n        this.onHighlightChanged.emit(this.highlightOutput);\n    }\n\n    /**\n     * Function that hides the labeling inside the graph.\n     */\n    private mouseoutHandler = (): void => {\n        this.hideDiagramIndicator();\n    }\n\n    /**\n     * Function starting the drag handling for the diagram.\n     */\n    private panStartHandler = (): void => {\n        this.draggingMove = false;\n        this.dragMoveStart = d3.event.x;\n        this.dragMoveRange = [this.xAxisRange.from, this.xAxisRange.to];\n    }\n\n    /**\n     * Function that controlls the panning (dragging) of the graph.\n     */\n    private panMoveHandler = (): void => {\n        this.draggingMove = true;\n        if (this.dragMoveStart && this.draggingMove) {\n            let diff = -(d3.event.x - this.dragMoveStart); // d3.event.subject.x);\n            let amountTimestamp = this.dragMoveRange[1] - this.dragMoveRange[0];\n            let ratioTimestampDiagCoord = amountTimestamp / this.width;\n            let newTimeMin = this.dragMoveRange[0] + (ratioTimestampDiagCoord * diff);\n            let newTimeMax = this.dragMoveRange[1] + (ratioTimestampDiagCoord * diff);\n\n            this.xAxisRangePan = [newTimeMin, newTimeMax];\n            this.timespan = { from: this.xAxisRangePan[0], to: this.xAxisRangePan[1] };\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function that ends the dragging control.\n     */\n    private panEndHandler = (): void => {\n        if (this.xAxisRangePan) {\n            this.changeTime(this.xAxisRangePan[0], this.xAxisRangePan[1]);\n            this.plotGraph();\n            this.dragMoveStart = null;\n            this.draggingMove = false;\n            this.xAxisRangePan = null;\n        }\n    }\n\n    /**\n     * Function that starts the zoom handling.\n     */\n    private zoomStartHandler = (): void => {\n        this.dragging = false;\n        // dependent on point or line hovering\n        this.dragStart = d3.mouse(this.background.node());\n        this.xAxisRangeOrigin.push([this.xAxisRange.from, this.xAxisRange.to]);\n    }\n\n    /**\n     * Function that draws a rectangle when zoom is started and the mouse is moving.\n     */\n    private zoomHandler = (): void => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    /**\n     * Function that ends the zoom handling and calculates the via zoom selected time interval.\n     */\n    private zoomEndHandler = (): void => {\n        if (!this.dragStart || !this.dragging) {\n            if (this.xAxisRangeOrigin[0]) {\n                // back to origin range (from - to)\n                this.changeTime(this.xAxisRangeOrigin[0][0], this.xAxisRangeOrigin[0][1]);\n                this.xAxisRangeOrigin = [];\n                this.plotGraph();\n            }\n        } else {\n            let xDomainRange;\n            if (this.dragStart[0] <= this.dragCurrent[0]) {\n                xDomainRange = this.getxDomain(this.dragStart[0], this.dragCurrent[0]);\n            } else {\n                xDomainRange = this.getxDomain(this.dragCurrent[0], this.dragStart[0]);\n            }\n            this.xAxisRange = { from: xDomainRange[0], to: xDomainRange[1] };\n            this.changeTime(this.xAxisRange.from, this.xAxisRange.to);\n            this.plotGraph();\n        }\n        this.dragStart = null;\n        this.dragging = false;\n        this.resetDrag();\n    }\n\n    private createLine(xScaleBase: d3.ScaleTime<number, number>, yScaleBase: d3.ScaleLinear<number, number>) {\n        return d3.line<DataEntry>()\n            .defined((d) => !isNaN(d.value))\n            .x((d) => {\n                const xDiagCoord = xScaleBase(d.timestamp);\n                if (!isNaN(xDiagCoord)) {\n                    d.xDiagCoord = xDiagCoord;\n                    return xDiagCoord;\n                }\n            })\n            .y((d) => {\n                const yDiagCoord = yScaleBase(d.value);\n                if (!isNaN(yDiagCoord)) {\n                    d.yDiagCoord = yDiagCoord;\n                    return yDiagCoord;\n                }\n            })\n            .curve(d3.curveLinear);\n    }\n\n    private mouseOverPointHovering(d: DataEntry, entry: InternalDataEntry) {\n        if (d !== undefined) {\n            let coords = d3.mouse(this.background.node());\n            let dataset = this.datasetMap.get(entry.internalId);\n            let rectBack = this.background.node().getBBox();\n            if (coords[0] >= 0 && coords[0] <= rectBack.width && coords[1] >= 0 && coords[1] <= rectBack.height) {\n                // highlight hovered dot\n                d3.select('#dot-' + d.timestamp + '-' + entry.id).attr('opacity', 0.8).attr('r', '8px');\n\n                this.highlightRect.style('visibility', 'visible');\n                this.highlightText.style('visibility', 'visible');\n\n                // create text for hovering label\n                let dotLabel = this.highlightText\n                    .text(`${d.value} ${entry.axisOptions.uom} ${moment(d.timestamp).format('DD.MM.YY HH:mm')}`)\n                    .attr('class', 'mouseHoverDotLabel')\n                    .style('pointer-events', 'none')\n                    .style('fill', 'black');\n                let onLeftSide = false;\n                if ((this.background.node().getBBox().width + this.bufferSum) / 2 > coords[0]) {\n                    onLeftSide = true;\n                }\n                let rectX: number = d.xDiagCoord + 15;\n                let rectY: number = d.yDiagCoord;\n                let rectW: number = this.getDimensions(dotLabel.node()).w + 8;\n                let rectH: number = this.getDimensions(dotLabel.node()).h; // + 4;\n                if (!onLeftSide) {\n                    rectX = d.xDiagCoord - 15 - rectW;\n                    rectY = d.yDiagCoord;\n                }\n                if ((coords[1] + rectH + 4) > this.background.node().getBBox().height) {\n                    // when label below x axis\n                    console.log('Translate label to a higher place. - not yet implemented');\n                }\n                // create hovering label\n                let dotRectangle = this.highlightRect\n                    .attr('class', 'mouseHoverDotRect')\n                    .style('fill', 'white')\n                    .style('fill-opacity', 1)\n                    .style('stroke', entry.color)\n                    .style('stroke-width', '1px')\n                    .style('pointer-events', 'none')\n                    .attr('width', rectW)\n                    .attr('height', rectH)\n                    .attr('transform', 'translate(' + rectX + ', ' + rectY + ')');\n                let labelX: number = d.xDiagCoord + 4 + 15;\n                let labelY: number = d.yDiagCoord + this.getDimensions(dotRectangle.node()).h - 4;\n                if (!onLeftSide) {\n                    labelX = d.xDiagCoord - rectW + 4 - 15;\n                    labelY = d.yDiagCoord + this.getDimensions(dotRectangle.node()).h - 4;\n                }\n                this.highlightText\n                    .attr('transform', 'translate(' + labelX + ', ' + labelY + ')');\n                // generate output of highlighted data\n                this.highlightOutput = {\n                    timestamp: d.timestamp,\n                    ids: new Map().set(entry.internalId, { timestamp: d.timestamp, value: d.value })\n                };\n                this.onHighlightChanged.emit(this.highlightOutput);\n            }\n        }\n    }\n\n    private mouseOutPointHovering(d: DataEntry, entry: InternalDataEntry) {\n        if (d !== undefined) {\n            // unhighlight hovered dot\n            d3.select('#dot-' + d.timestamp + '-' + entry.id)\n                .attr('opacity', 1)\n                .attr('r', entry.lines.pointRadius);\n            // make label invisible\n            this.highlightRect\n                .style('visibility', 'hidden');\n            this.highlightText\n                .style('visibility', 'hidden');\n        }\n    }\n\n    protected getYaxisRange(entry: InternalDataEntry): YRanges {\n        // check if entry dataset should be separated or entry datasets should be grouped\n        if (!entry.axisOptions.separateYAxis && (this.plotOptions.groupYaxis || this.plotOptions.groupYaxis === undefined)) {\n            return this.yRangesEachUom.find((obj) => {\n                if (obj !== null && obj.uom === entry.axisOptions.uom) {\n                    return true;\n                } // uom does exist in this.yRangesEachUom\n            });\n        } else {\n            return this.dataYranges.find((obj) => {\n                if (obj !== null && obj.id === entry.internalId) {\n                    return true;\n                } // id does exist in this.dataYranges\n            });\n        }\n    }\n\n    /**\n     * Function that returns the timestamp of provided x diagram coordinates.\n     * @param start {Number} Number with the minimum diagram coordinate.\n     * @param end {Number} Number with the maximum diagram coordinate.\n     */\n    private getxDomain(start: number, end: number): [number, number] {\n        let domMinArr = [];\n        let domMaxArr = [];\n        let domMin: number;\n        let domMax: number;\n        let tmp;\n        let lowestMin = Number.POSITIVE_INFINITY;\n        let lowestMax = Number.POSITIVE_INFINITY;\n\n        start += this.bufferSum;\n        end += this.bufferSum;\n\n        this.preparedData.forEach((entry) => {\n            domMinArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord) {\n                    if (elem.xDiagCoord >= start) {\n                        return array[index] !== undefined;\n                    }\n                }\n            }));\n            domMaxArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord >= end) {\n                    return array[index] !== undefined;\n                }\n            }));\n        });\n\n        for (let i = 0; i <= domMinArr.length - 1; i++) {\n            if (domMinArr[i] != null) {\n                tmp = domMinArr[i].xDiagCoord;\n                if (tmp < lowestMin) {\n                    lowestMin = tmp;\n                    domMin = domMinArr[i].timestamp;\n                }\n            }\n        }\n        for (let j = 0; j <= domMaxArr.length - 1; j++) {\n            if (domMaxArr[j] != null) {\n                tmp = domMaxArr[j].xDiagCoord;\n                if (tmp < lowestMax) {\n                    lowestMax = tmp;\n                    domMax = domMaxArr[j].timestamp;\n                }\n            }\n        }\n        return [domMin, domMax];\n    }\n\n    /**\n     * Function that configurates and draws the rectangle.\n     */\n    private drawDragRectangle(): void {\n        if (!this.dragStart) { return; }\n        this.dragCurrent = d3.mouse(this.background.node());\n\n        const x1 = Math.min(this.dragStart[0], this.dragCurrent[0]);\n        const x2 = Math.max(this.dragStart[0], this.dragCurrent[0]);\n\n        if (!this.dragRect && !this.dragRectG) {\n\n            this.dragRectG = this.graph.append('g')\n                .style('fill-opacity', .2)\n                .style('fill', 'blue');\n\n            this.dragRect = this.dragRectG.append('rect')\n                .attr('width', x2 - x1)\n                .attr('height', this.height)\n                .attr('x', x1 + this.bufferSum)\n                .attr('class', 'mouse-drag')\n                .style('pointer-events', 'none');\n        } else {\n            this.dragRect.attr('width', x2 - x1)\n                .attr('x', x1 + this.bufferSum);\n        }\n    }\n\n    /**\n     * Function that disables the drawing rectangle control.\n     */\n    private resetDrag(): void {\n        if (this.dragRectG) {\n            this.dragRectG.remove();\n            this.dragRectG = null;\n            this.dragRect = null;\n        }\n    }\n\n    /**\n     * Function that returns the metadata of a specific entry in the dataset.\n     * @param x {Number} Coordinates of the mouse inside the diagram.\n     * @param data {DataEntry} Array with the data of each dataset entry.\n     */\n    private getItemForX(x: number, data: DataEntry[]): number {\n        const index = this.xScaleBase.invert(x);\n        const bisectDate = d3.bisector((d: DataEntry) => {\n            return d[0];\n        }).left;\n        return bisectDate(data, index);\n    }\n\n    /**\n     * Function that disables the labeling.\n     */\n    private hideDiagramIndicator(): void {\n        this.focusG.style('visibility', 'hidden');\n        d3.selectAll('.focus-visibility')\n            .attr('visibility', 'hidden');\n    }\n\n    /**\n     * Function that enables the lableing of each dataset entry.\n     * @param entry {InternalDataEntry} Object containing the dataset.\n     * @param idx {Number} Number with the position of the dataset entry in the data array.\n     * @param xCoordMouse {Number} Number of the x coordinate of the mouse.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showDiagramIndicator = (entry: InternalDataEntry, idx: number, xCoordMouse: number, entryIdx: number): void => {\n        const item: DataEntry = entry.data[idx];\n        this.labelXCoord[entryIdx] = null;\n        this.distLabelXCoord[entryIdx] = null;\n\n        if (item !== undefined && item.yDiagCoord && item[1] !== undefined) {\n            // create line where mouse is\n            this.focusG.style('visibility', 'visible');\n            // show label if data available for time\n            this.chVisLabel(entry, true, entryIdx);\n\n            let xMouseAndBuffer = xCoordMouse + this.bufferSum;\n            let labelBuffer = ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001)\n                * ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001);\n\n            labelBuffer = Math.max(10, labelBuffer);\n\n            this.showLabelValues(entry, item);\n            this.showTimeIndicatorLabel(item, entryIdx, xMouseAndBuffer);\n\n            if (item.xDiagCoord >= this.background.node().getBBox().width + this.bufferSum || xMouseAndBuffer < item.xDiagCoord - labelBuffer) {\n                this.chVisLabel(entry, false, entryIdx);\n            }\n\n            if (xMouseAndBuffer < item.xDiagCoord) {\n                if (entry.data[idx - 1] && (Math.abs(entry.data[idx - 1].xDiagCoord - xMouseAndBuffer) < Math.abs(item.xDiagCoord - xMouseAndBuffer))) {\n                    this.chVisLabel(entry, false, entryIdx);\n                    // show closest element to mouse\n                    this.showLabelValues(entry, entry.data[idx - 1]);\n                    this.showTimeIndicatorLabel(entry.data[idx - 1], entryIdx, xMouseAndBuffer);\n                    this.chVisLabel(entry, true, entryIdx);\n\n                    // check for graph width and range between data point and mouse\n                    if (entry.data[idx - 1].xDiagCoord >= this.background.node().getBBox().width + this.bufferSum\n                        || entry.data[idx - 1].xDiagCoord <= this.bufferSum\n                        || entry.data[idx - 1].xDiagCoord + labelBuffer < xMouseAndBuffer) {\n                        this.chVisLabel(entry, false, entryIdx);\n                    }\n                }\n            }\n        } else {\n            // TODO: set hovering for labelbuffer after last and before first value of the graph\n            // hide label if no data available for time\n            this.chVisLabel(entry, false, entryIdx);\n        }\n    }\n\n    /**\n     * Function to change visibility of label and white rectangle inside graph (next to mouse-cursor line).\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param visible {Boolean} Boolean giving information about visibility of a label.\n     */\n    private chVisLabel(entry: InternalDataEntry, visible: boolean, entryIdx: number): void {\n        if (visible) {\n            entry.focusLabel\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n            entry.focusLabelRect\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n        } else {\n            entry.focusLabel\n                .attr('visibility', 'hidden');\n            entry.focusLabelRect\n                .attr('visibility', 'hidden');\n\n            this.labelTimestamp[entryIdx] = null;\n            delete this.highlightOutput.ids[entry.internalId];\n        }\n    }\n\n    /**\n     * Function to show the labeling inside the graph.\n     * @param entry {DataEntry} Object containg the dataset.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     */\n    private showLabelValues(entry: InternalDataEntry, item: DataEntry): void {\n        let id = 1;\n        let onLeftSide: boolean = this.checkLeftSide(item.xDiagCoord);\n        if (entry.focusLabel) {\n            entry.focusLabel.text(item[id] + (entry.axisOptions.uom ? entry.axisOptions.uom : ''));\n            const entryX: number = onLeftSide ?\n                item.xDiagCoord + 4 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w + 4;\n            entry.focusLabel\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord);\n            entry.focusLabelRect\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord - this.getDimensions(entry.focusLabel.node()).h + 3)\n                .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n\n            this.highlightOutput.ids[entry.internalId] = {\n                'timestamp': item[0],\n                'value': item[1]\n            };\n        } else {\n            delete this.highlightOutput.ids[entry.internalId];\n        }\n    }\n\n    /**\n     * Function to show the time labeling inside the graph.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showTimeIndicatorLabel(item: DataEntry, entryIdx: number, mouseCoord: number): void {\n        // timestamp is the time where the mouse-cursor is\n        this.labelTimestamp[entryIdx] = item[0];\n        this.labelXCoord[entryIdx] = item.xDiagCoord;\n        this.distLabelXCoord[entryIdx] = Math.abs(mouseCoord - item.xDiagCoord);\n        let min = d3.min(this.distLabelXCoord);\n        let idxOfMin = this.distLabelXCoord.findIndex((elem) => elem === min);\n        let onLeftSide = this.checkLeftSide(item.xDiagCoord);\n        let right = this.labelXCoord[idxOfMin] + 2;\n        let left = this.labelXCoord[idxOfMin] - this.getDimensions(this.focuslabelTime.node()).w - 2;\n        this.focuslabelTime.text(moment(this.labelTimestamp[idxOfMin]).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? right : left)\n            .attr('y', 13);\n        this.highlightFocus\n            .attr('x1', this.labelXCoord[idxOfMin])\n            .attr('y1', 0)\n            .attr('x2', this.labelXCoord[idxOfMin])\n            .attr('y2', this.height)\n            .classed('hidden', false);\n        this.highlightOutput.timestamp = this.labelTimestamp[idxOfMin];\n    }\n\n    /**\n     * Function giving information if the mouse is on left side of the diagram.\n     * @param itemCoord {number} x coordinate of the value (e.g. mouse) to be checked\n     */\n    private checkLeftSide(itemCoord: number): boolean {\n        return ((this.background.node().getBBox().width + this.bufferSum) / 2 > itemCoord) ? true : false;\n    }\n\n    /**\n     * Function to wrap the text for the y axis label.\n     * @param text {any} y axis label\n     * @param width {Number} width of the axis which must not be crossed\n     * @param xposition {Number} position to center the label in the middle\n     */\n    private wrapText(textObj: any, width: number, xposition: number): void {\n        textObj.each(function (u: any, i: number, d: NodeList) {\n            let text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                // lineNumber = 0,\n                lineHeight = (i === d.length - 1 ? 0.3 : 1.1), // ems\n                y = text.attr('y'),\n                dy = parseFloat(text.attr('dy')),\n                tspan = text.text(null).append('tspan').attr('x', 0 - xposition).attr('y', y).attr('dy', dy + 'em');\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(' '));\n                let node: SVGTSpanElement = <SVGTSpanElement>tspan.node();\n                let hasGreaterWidth: boolean = node.getComputedTextLength() > width;\n                if (hasGreaterWidth) {\n                    line.pop();\n                    tspan.text(line.join(' '));\n                    line = [word];\n                    tspan = text.append('tspan').attr('x', 0 - xposition).attr('y', y).attr('dy', lineHeight + dy + 'em').text(word);\n                }\n            }\n        });\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    /**\n     * Function to generate uuid for a diagram\n     */\n    private uuidv4(): string {\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    /**\n     * Function to generate components of the uuid for a diagram\n     */\n    private s4(): string {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    /**\n     * Function that logs the error in the console.\n     * @param error {Object} Object with the error.\n     */\n    private onError(error: any): void {\n        console.error(error);\n    }\n\n}\n","export enum D3AxisType {\n    Distance,\n    Time,\n    Ticks\n}\n","export class D3SelectionRange {\n    public from: number;\n    public to: number;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    LocatedTimeValueEntry,\n    Time,\n} from '@helgoland/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport {\n    area,\n    axisBottom,\n    axisLeft,\n    axisRight,\n    axisTop,\n    bisector,\n    curveLinear,\n    extent,\n    line,\n    mouse,\n    ScaleLinear,\n    scaleLinear,\n    select,\n    timeFormat,\n} from 'd3';\nimport moment from 'moment';\n\nimport { D3AxisType } from '../model/d3-axis-type';\nimport { D3GraphOptions } from '../model/d3-graph-options';\nimport { D3SelectionRange } from '../model/d3-selection-range';\n\ninterface DataEntry extends LocatedTimeValueEntry {\n    dist: number;\n    tick: number;\n    x: number;\n    y: number;\n    xDiagCoord?: number;\n    [id: string]: any;\n}\n\ninterface DatasetConstellation {\n    dataset?: IDataset;\n    data?: LocatedTimeValueEntry[];\n    yScale?: ScaleLinear<number, number>;\n    drawOptions?: DrawOptions;\n    focusLabelRect?: any;\n    focusLabel?: any;\n}\n\ninterface DrawOptions {\n    uom: string;\n    id: string;\n    color: string;\n    first: boolean;\n    offset: number;\n}\n\n@Component({\n    selector: 'n52-d3-trajectory-graph',\n    template: `<div class=\"d3\" #dthree></div>`,\n    styles: [`.d3{height:100%}.d3 .axis line,.d3 .axis path{fill:none;stroke:#000}.d3 text{font-size:14px}.d3 .graphArea{fill:#b0c4de;fill-opacity:.7}.d3 .grid .tick line{stroke:#d3d3d3;stroke-opacity:.7;shape-rendering:crispEdges}.d3 .map-highlight-label{fill:#fff;fill-opacity:.7}.d3 .mouse-focus-line{pointer-events:none;stroke-width:1px;stroke:#000}.d3 .mouse-drag{fill:rgba(0,0,255,.4);pointer-events:all;cursor:move}`],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TrajectoryGraphComponent\n    extends DatasetPresenterComponent<DatasetOptions, D3GraphOptions>\n    implements AfterViewInit, OnChanges {\n\n    @Input()\n    public selection: D3SelectionRange;\n\n    @Output()\n    public onSelectionChangedFinished: EventEmitter<D3SelectionRange> = new EventEmitter();\n\n    @Output()\n    public onSelectionChanged: EventEmitter<D3SelectionRange> = new EventEmitter();\n\n    @Output()\n    public onHoverHighlight: EventEmitter<number> = new EventEmitter();\n\n    @ViewChild('dthree')\n    public d3Elem: ElementRef;\n\n    private datasetMap: Map<string, DatasetConstellation> = new Map();\n    private rawSvg: any;\n    private graph: any;\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private lineFun: d3.Line<DataEntry>;\n    private area: d3.Area<DataEntry>;\n    private xScaleBase: d3.ScaleLinear<number, number>;\n    private yScaleBase: d3.ScaleLinear<number, number>;\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private focuslabelY: any;\n    private yAxisGen: d3.Axis<number | { valueOf(): number; }>;\n    private baseValues: DataEntry[] = [];\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n    private dragRect: any;\n    private dragRectG: any;\n    private bufferSum: number;\n    private dataLength: number;\n\n    private defaultGraphOptions: D3GraphOptions = {\n        axisType: D3AxisType.Distance,\n        dotted: false\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        protected translateService: TranslateService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc, translateService);\n        this.presenterOptions = this.defaultGraphOptions;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selection && this.selection) {\n            this.processAllData();\n            this.drawLineGraph();\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rawSvg = select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.lineFun = line<DataEntry>()\n            .x(this.calcXValue)\n            .y(this.calcYValue)\n            .curve(curveLinear);\n\n        this.area = area<DataEntry>()\n            .x(this.calcXValue)\n            .y0(this.height)\n            .y1(this.calcYValue)\n            .curve(curveLinear);\n\n        this.drawLineGraph();\n    }\n\n    public reloadDataForDatasets(datasetIds: string[]): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    protected onLanguageChanged(langChangeEvent: LangChangeEvent): void { }\n\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((entry) => {\n            if (entry.dataset) {\n                this.loadData(entry.dataset);\n            }\n        });\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            this.datasetMap.set(dataset.internalId, { dataset });\n            this.loadData(dataset);\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.datasetMap.delete(internalId);\n        this.processAllData();\n        this.drawLineGraph();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected presenterOptionsChanged(options: D3GraphOptions): void {\n        this.timeIntervalChanges();\n    }\n\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean): void {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadData(this.datasetMap.get(internalId).dataset);\n        }\n    }\n\n    protected onResize(): void {\n        this.drawLineGraph();\n    }\n\n    private loadData(dataset: IDataset) {\n        if (this.timespan &&\n            this.datasetOptions.has(dataset.internalId) &&\n            this.datasetOptions.get(dataset.internalId).visible) {\n            const buffer = this.timeSrvc.getBufferedTimespan(this.timespan, 0.2);\n            const option = this.datasetOptions.get(dataset.internalId);\n            this.api.getData<LocatedTimeValueEntry>(dataset.id, dataset.url, buffer,\n                {\n                    generalize: option.generalize\n                })\n                .subscribe((result) => {\n                    this.dataLength = result.values.length;\n                    this.datasetMap.get(dataset.internalId).data = result.values;\n                    this.processDataForId(dataset.internalId);\n                    this.drawLineGraph();\n                });\n        } else {\n            this.drawLineGraph();\n        }\n    }\n\n    private processAllData() {\n        this.baseValues = [];\n        this.datasetIds.forEach((id) => this.processDataForId(id));\n    }\n\n    private processDataForId(internalId: string) {\n        if (this.datasetOptions.get(internalId).visible) {\n            const datasetEntry = this.datasetMap.get(internalId);\n            const firstEntry = this.baseValues.length === 0;\n            let previous: DataEntry = null;\n            datasetEntry.data.forEach((elem, idx) => {\n                if (firstEntry) {\n                    const entry = this.createDataEntry(internalId, elem, previous, idx);\n                    if (this.selection) {\n                        if (idx >= this.selection.from && idx <= this.selection.to) {\n                            this.baseValues.push(entry);\n                        }\n                    } else {\n                        this.baseValues.push(entry);\n                    }\n                    previous = entry;\n                } else {\n                    if (this.selection) {\n                        if (idx >= this.selection.from && idx <= this.selection.to) {\n                            if (this.baseValues[idx - this.selection.from]) {\n                                this.baseValues[idx - this.selection.from][internalId] = elem.value;\n                            }\n                        }\n                    } else {\n                        if (this.baseValues[idx]) {\n                            this.baseValues[idx][internalId] = elem.value;\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    private createDataEntry(\n        internalId: string,\n        entry: LocatedTimeValueEntry,\n        previous: DataEntry,\n        index: number\n    ): DataEntry {\n        let dist: number;\n        if (previous) {\n            const newdist = this.distanceBetween(\n                entry.geometry.coordinates[1],\n                entry.geometry.coordinates[0],\n                previous.geometry.coordinates[1],\n                previous.geometry.coordinates[0]\n            );\n            dist = previous.dist + Math.round(newdist / 1000 * 100000) / 100000;\n        } else {\n            dist = 0;\n        }\n        return {\n            tick: index,\n            dist: Math.round(dist * 10) / 10,\n            timestamp: entry.timestamp,\n            value: entry.value,\n            [internalId]: entry.value,\n            x: entry.geometry.coordinates[0],\n            y: entry.geometry.coordinates[1],\n            geometry: entry.geometry\n        };\n    }\n\n    private distanceBetween(latitude1, longitude1, latitude2, longitude2): number {\n        const R = 6371000;\n        const rad = Math.PI / 180;\n        const lat1 = latitude1 * rad;\n        const lat2 = latitude2 * rad;\n        const sinDLat = Math.sin((latitude2 - latitude1) * rad / 2);\n        const sinDLon = Math.sin((longitude2 - longitude1) * rad / 2);\n        const a = sinDLat * sinDLat + Math.cos(lat1) * Math.cos(lat2) * sinDLon * sinDLon;\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return R * c;\n    }\n\n    private calcYValue = (d: DataEntry) => {\n        return this.yScaleBase(d.value);\n    }\n\n    private calcXValue = (d: DataEntry, i: number) => {\n        const xDiagCoord = this.xScaleBase(this.getXValue(d));\n        d.xDiagCoord = xDiagCoord;\n        return xDiagCoord;\n    }\n\n    private calculateHeight(): number {\n        return this.rawSvg.node().height.baseVal.value - this.margin.top - this.margin.bottom;\n    }\n\n    private calculateWidth(): number {\n        return this.rawSvg.node().width.baseVal.value - this.margin.left - this.margin.right - this.maxLabelwidth;\n    }\n\n    private getXValue(data: DataEntry) {\n        switch (this.presenterOptions.axisType) {\n            case D3AxisType.Distance:\n                return data.dist;\n            case D3AxisType.Time:\n                return data.timestamp;\n            case D3AxisType.Ticks:\n                return data.tick;\n            default:\n                return data.tick;\n        }\n    }\n\n    private drawDots(values: DataEntry[], yScale: d3.ScaleLinear<number, number>, options: DrawOptions) {\n        this.graph.selectAll('dot')\n            .data(values)\n            .enter().append('circle')\n            .attr('stroke', options.color)\n            .attr('r', 1.5)\n            .attr('fill', options.color)\n            .attr('cx', this.calcXValue)\n            .attr('cy', (d: DataEntry) => yScale(d[options.id]));\n    }\n\n    private drawValueLine(values: DataEntry[], yScale: d3.ScaleLinear<number, number>, options: DrawOptions) {\n        this.graph.append('svg:path')\n            .datum(values)\n            .attr('class', 'line')\n            .attr('fill', 'none')\n            .attr('stroke', options.color)\n            .attr('stroke-width', 1)\n            .attr('d', line<DataEntry>()\n                .x(this.calcXValue)\n                .y((d: DataEntry) => yScale(d[options.id]))\n                .curve(curveLinear));\n    }\n\n    private drawGraph(yScale: d3.ScaleLinear<number, number>, options: DrawOptions) {\n        if (this.presenterOptions.dotted) {\n            this.drawDots(this.baseValues, yScale, options);\n        } else {\n            this.drawValueLine(this.baseValues, yScale, options);\n        }\n    }\n\n    private drawLineGraph() {\n        if (!this.baseValues || this.baseValues.length === 0 || !this.graph) {\n            return;\n        }\n\n        this.height = this.calculateHeight();\n        this.width = this.calculateWidth();\n\n        this.graph.selectAll('*').remove();\n\n        this.bufferSum = 0;\n\n        this.yScaleBase = null;\n\n        this.datasetMap.forEach((datasetEntry, id) => {\n            if (this.datasetOptions.has(id) && datasetEntry.data && this.datasetOptions.get(id).visible) {\n                datasetEntry.drawOptions = {\n                    uom: datasetEntry.dataset.uom,\n                    id: datasetEntry.dataset.internalId,\n                    color: this.datasetOptions.get(id).color,\n                    first: this.yScaleBase === null,\n                    offset: this.bufferSum\n                };\n                const axisResult = this.drawYAxis(datasetEntry.drawOptions);\n                if (this.yScaleBase === null) {\n                    this.yScaleBase = axisResult.yScale;\n                } else {\n                    this.bufferSum = axisResult.buffer;\n                }\n                datasetEntry.yScale = axisResult.yScale;\n            }\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw right axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .attr('transform', 'translate(' + this.width + ', 0)')\n            .call(axisRight(this.yScaleBase).tickSize(0).ticks(0));\n\n        this.drawXAxis(this.bufferSum);\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                this.drawGraph(entry.yScale, entry.drawOptions);\n            }\n        });\n\n        this.background = this.graph.append('svg:rect')\n            .attr('width', this.width - this.bufferSum)\n            .attr('height', this.height)\n            .attr('fill', 'none')\n            .attr('stroke', 'none')\n            .attr('pointer-events', 'all')\n            .attr('transform', 'translate(' + this.bufferSum + ', 0)')\n            .on('mousemove.focus', this.mousemoveHandler)\n            .on('mouseout.focus', this.mouseoutHandler)\n            .on('mousedown.drag', this.dragStartHandler)\n            .on('mousemove.drag', this.dragHandler)\n            .on('mouseup.drag', this.dragEndHandler);\n\n        this.focusG = this.graph.append('g');\n        this.highlightFocus = this.focusG.append('svg:line')\n            .attr('class', 'mouse-focus-line')\n            .attr('x2', '0')\n            .attr('y2', '0')\n            .attr('x1', '0')\n            .attr('y1', '0')\n            .style('stroke', 'black')\n            .style('stroke-width', '1px');\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                entry.focusLabelRect = this.focusG.append('svg:rect')\n                    .style('fill', 'white')\n                    .style('stroke', 'none')\n                    .style('pointer-events', 'none');\n                entry.focusLabel = this.focusG.append('svg:text').attr('class', 'mouse-focus-label-x')\n                    .style('pointer-events', 'none')\n                    .style('fill', this.datasetOptions.get(id).color)\n                    .style('font-weight', 'lighter');\n            }\n        });\n\n        this.focuslabelTime = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-x');\n        this.focuslabelY = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-y');\n    }\n\n    private mousemoveHandler = () => {\n        if (!this.baseValues || this.baseValues.length === 0) {\n            return;\n        }\n        const coords = mouse(this.background.node());\n        const idx = this.getItemForX(coords[0] + this.bufferSum, this.baseValues);\n        this.showDiagramIndicator(idx);\n        this.onHoverHighlight.emit(this.baseValues[idx].tick);\n    }\n\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    private dragStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = mouse(this.background.node());\n    }\n\n    private dragHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    private dragEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            this.onSelectionChangedFinished.emit({ from: 0, to: this.dataLength });\n        } else {\n            const from = this.getItemForX(this.dragStart[0] + this.bufferSum, this.baseValues);\n            const to = this.getItemForX(this.dragCurrent[0] + this.bufferSum, this.baseValues);\n            this.onSelectionChangedFinished.emit(this.prepareRange(this.baseValues[from].tick, this.baseValues[to].tick));\n        }\n        this.dragStart = null;\n        this.dragging = false;\n        this.resetDrag();\n    }\n\n    private prepareRange(from: number, to: number): D3SelectionRange {\n        if (from <= to) {\n            return { from, to };\n        }\n        return { from: to, to: from };\n    }\n\n    private drawDragRectangle() {\n        if (!this.dragStart) { return; }\n\n        this.dragCurrent = mouse(this.background.node());\n\n        const from = this.getItemForX(this.dragStart[0] + this.bufferSum, this.baseValues);\n        const to = this.getItemForX(this.dragCurrent[0] + this.bufferSum, this.baseValues);\n        this.onSelectionChanged.emit(this.prepareRange(this.baseValues[from].tick, this.baseValues[to].tick));\n\n        const x1 = Math.min(this.dragStart[0], this.dragCurrent[0]);\n        const x2 = Math.max(this.dragStart[0], this.dragCurrent[0]);\n\n        if (!this.dragRect && !this.dragRectG) {\n\n            this.dragRectG = this.graph.append('g');\n\n            this.dragRect = this.dragRectG.append('rect')\n                .attr('width', x2 - x1)\n                .attr('height', this.height)\n                .attr('x', x1 + this.bufferSum)\n                .attr('class', 'mouse-drag')\n                .style('pointer-events', 'none');\n        } else {\n            this.dragRect.attr('width', x2 - x1)\n                .attr('x', x1 + this.bufferSum);\n        }\n    }\n\n    private resetDrag() {\n        if (this.dragRectG) {\n            this.dragRectG.remove();\n            this.dragRectG = null;\n            this.dragRect = null;\n        }\n    }\n\n    private hideDiagramIndicator() {\n        this.focusG.style('visibility', 'hidden');\n    }\n\n    private showDiagramIndicator = (idx: number) => {\n        const item = this.baseValues[idx];\n        this.focusG.style('visibility', 'visible');\n        this.highlightFocus.attr('x1', item.xDiagCoord)\n            .attr('y1', 0)\n            .attr('x2', item.xDiagCoord)\n            .attr('y2', this.height)\n            .classed('hidden', false);\n\n        let onLeftSide = false;\n        if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n        this.showLabelValues(item, onLeftSide);\n        this.showTimeIndicatorLabel(item, onLeftSide);\n        this.showBottomIndicatorLabel(item, onLeftSide);\n    }\n\n    private showLabelValues(item: DataEntry, onLeftSide: boolean) {\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.get(id).visible) {\n                if (entry.focusLabel) {\n                    entry.focusLabel.text(item[id] + (entry.dataset.uom ? entry.dataset.uom : ''));\n                    const entryX = onLeftSide ?\n                        item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w;\n                    entry.focusLabel\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]) + this.getDimensions(entry.focusLabel.node()).h - 3);\n                    entry.focusLabelRect\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]))\n                        .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                        .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n                }\n            }\n        });\n    }\n\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        this.focuslabelTime.text(moment(item.timestamp).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w)\n            .attr('y', 13);\n    }\n\n    private showBottomIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        if (this.presenterOptions.axisType === D3AxisType.Distance) {\n            this.focuslabelY.text(item.dist + ' km');\n        }\n        if (this.presenterOptions.axisType === D3AxisType.Ticks) {\n            this.focuslabelY.text('Measurement: ' + item.tick);\n        }\n        this.focuslabelY\n            .attr('y', this.calculateHeight() - 5)\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelY.node()).w);\n    }\n\n    private getDimensions(el: any) {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    private getItemForX(x: number, data: DataEntry[]) {\n        const index = this.xScaleBase.invert(x);\n        const bisectDate = bisector((d: DataEntry) => {\n            switch (this.presenterOptions.axisType) {\n                case D3AxisType.Distance:\n                    return d.dist;\n                case D3AxisType.Time:\n                    return d.timestamp;\n                case D3AxisType.Ticks:\n                default:\n                    return d.tick;\n            }\n        }).left;\n        return bisectDate(this.baseValues, index);\n    }\n\n    private drawYAxis(options: DrawOptions): any {\n        const range = extent<DataEntry, number>(this.baseValues, (datum, index, array) => {\n            return datum[options.id]; // here with ID\n        });\n        const rangeOffset = (range[1] - range[0]) * 0.10;\n        const yScale = scaleLinear()\n            .domain([range[0] - rangeOffset, range[1] + rangeOffset])\n            .range([this.height, 0]);\n\n        this.yAxisGen = axisLeft(yScale).ticks(5);\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(this.yAxisGen);\n\n        // draw y axis label\n        const text = this.graph.append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .style('fill', options.color)\n            .text(options.uom);\n\n        const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n        const buffer = options.offset + (axisWidth < 30 ? 30 : axisWidth);\n        if (!options.first) {\n            axis.attr('transform', 'translate(' + buffer + ', 0)');\n        }\n\n        const textOffset = !options.first ? buffer : options.offset;\n        text.attr('y', 0 - this.margin.left - this.maxLabelwidth + textOffset)\n            .attr('x', 0 - (this.height / 2));\n\n        // draw the y grid lines when there is only one dataset\n        if (this.datasetIds.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .call(axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    private drawXAxis(buffer: number) {\n        this.xScaleBase = scaleLinear()\n            .domain(this.getXDomain(this.baseValues))\n            .range([buffer, this.width]);\n\n        const xAxisGen = axisBottom(this.xScaleBase).ticks(5);\n\n        if (this.presenterOptions.axisType === D3AxisType.Time) {\n            xAxisGen.tickFormat((d) => {\n                return timeFormat('%d.%m.%Y %H:%M:%S')(new Date(d.valueOf()));\n            });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen);\n\n        // draw the x grid lines\n        this.graph.append('svg:g')\n            .attr('class', 'grid')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(axisBottom(this.xScaleBase)\n                .ticks(10)\n                .tickSize(-this.height)\n                .tickFormat(() => '')\n            );\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + buffer) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text(this.getXAxisLabel());\n    }\n\n    private getXDomain(values: DataEntry[]) {\n        switch (this.presenterOptions.axisType) {\n            case D3AxisType.Distance:\n                return [values[0].dist, values[values.length - 1].dist];\n            case D3AxisType.Time:\n                return [values[0].timestamp, values[values.length - 1].timestamp];\n            default:\n                return [values[0].tick, values[values.length - 1].tick];\n        }\n    }\n\n    private getXAxisLabel() {\n        switch (this.presenterOptions.axisType) {\n            case D3AxisType.Distance:\n                return 'Distance';\n            case D3AxisType.Time:\n                return 'Time';\n            default:\n                return 'Ticks';\n        }\n    }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  IterableDiffers,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ColorService, DatasetApiInterface, DatasetOptions, InternalIdHandler, MinMaxRange, Time } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { extent } from 'd3';\n\nimport {\n  D3TimeseriesGraphComponent,\n  DataEntry,\n  InternalDataEntry,\n} from '../d3-timeseries-graph/d3-timeseries-graph.component';\nimport { D3TimeFormatLocaleService } from '../helper/d3-time-format-locale.service';\n\n/**\n * Additional Data which can be add to the component {@link ExtendedDataD3TimeseriesGraphComponent} as Input.\n * One of the optional properties 'linkedDatasetId' and 'yaxisLabel' is mandatory.\n */\nexport interface AdditionalData {\n  /**\n   * Linked to an existing dataset in the graph component and uses it dataset options if no other datasetoptions are presented.\n   */\n  linkedDatasetId?: string;\n  /**\n   * Y-Axis label if no link to an existing dataset is given.\n   */\n  yaxisLabel?: string;\n  /**\n   * The dataset options, which describes the styling of the additional data.\n   */\n  datasetOptions?: DatasetOptions;\n  /**\n   * The additional data arrey with tupels of timestamp and value.\n   */\n  data: AdditionalDataEntry[];\n}\n\n/**\n * Additional data entry tuple\n */\nexport interface AdditionalDataEntry {\n  timestamp: number;\n  value: number;\n}\n\n/**\n * Extends the common d3 component, with the ability to add additional data to the graph. To set or change  additional data, allways sets the complete array of data new. The componet just redraws if\n * the array is reset.\n */\n@Component({\n  selector: 'n52-extended-data-d3-timeseries-graph',\n  template: `<div class=\"d3\" #d3timeseries></div>\n`,\n  styles: [`.d3{height:100%;width:100%;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.d3 .grid .tick line{stroke:#d3d3d3;stroke-opacity:.7;shape-rendering:crispEdges}.d3 .graphDots{stroke-width:0;stroke-opacity:1}.d3 .graphDots .hover{stroke-width:20px;stroke-opacity:.5}.d3 .formerButton,.d3 .laterButton{fill:grey;opacity:.3}.d3 .formerButton:hover,.d3 .laterButton:hover{opacity:.6}.d3 .arrow{stroke:grey;stroke-width:3px}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ExtendedDataD3TimeseriesGraphComponent extends D3TimeseriesGraphComponent implements OnChanges, AfterViewInit {\n\n  @Input()\n  public additionalData: AdditionalData[] = [];\n\n  private additionalPreparedData: InternalDataEntry[] = [];\n\n  constructor(\n    protected iterableDiffers: IterableDiffers,\n    protected api: DatasetApiInterface,\n    protected datasetIdResolver: InternalIdHandler,\n    protected timeSrvc: Time,\n    protected timeFormatLocaleService: D3TimeFormatLocaleService,\n    protected colorService: ColorService,\n    protected translateService: TranslateService\n  ) {\n    super(iterableDiffers, api, datasetIdResolver, timeSrvc, timeFormatLocaleService, colorService, translateService);\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (changes.additionalData && this.additionalData && this.graph) {\n      this.clearAdditionalData();\n      this.plotGraph();\n    }\n  }\n\n  protected plotGraph() {\n    this.prepareAdditionalData();\n    super.plotGraph();\n  }\n\n  public ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    if (this.additionalData) {\n      setTimeout(() => this.plotGraph(), 0);\n    }\n  }\n\n  private clearAdditionalData() {\n    this.additionalPreparedData.forEach(data => {\n      this.yRangesEachUom.forEach(e => {\n        const idx = e.ids.indexOf(data.internalId);\n        if (idx > -1) { e.ids.splice(idx, 1); }\n      });\n    });\n\n    if (this.yRangesEachUom) {\n      for (let i = this.yRangesEachUom.length - 1; i >= 0; i--) {\n        const element = this.yRangesEachUom[i];\n        if (element.ids.length === 0) {\n          this.yRangesEachUom.splice(i, 1);\n        }\n      }\n    }\n\n    this.additionalPreparedData = [];\n  }\n\n  private prepareAdditionalData() {\n    if (this.additionalData) {\n      this.additionalData.forEach(entry => {\n        if ((entry.linkedDatasetId || entry.yaxisLabel) && entry.data) {\n\n          if (entry.data.length > 0) {\n            let options = entry.datasetOptions || this.datasetOptions.get(entry.linkedDatasetId);\n            let dataset = this.datasetMap.get(entry.linkedDatasetId);\n            const prepDataIdx = this.additionalPreparedData.findIndex(e => e.internalId.startsWith(entry.linkedDatasetId) || e.internalId === entry.yaxisLabel);\n            let dataEntry: InternalDataEntry;\n            if (prepDataIdx === -1) {\n              dataEntry = {\n                internalId: entry.linkedDatasetId ? entry.linkedDatasetId + 'add' : entry.yaxisLabel,\n                id: -1,\n                color: options.color,\n                data: options.visible ? entry.data.map(e => {\n                  return {\n                    timestamp: e.timestamp,\n                    value: e.value\n                  };\n                }) : [],\n                points: {\n                  fillColor: options.color\n                },\n                lines: {\n                  lineWidth: options.lineWidth,\n                  pointRadius: options.pointRadius\n                },\n                bars: {\n                  lineWidth: options.lineWidth\n                },\n                axisOptions: {\n                  uom: dataset ? dataset.uom : entry.yaxisLabel,\n                  label: dataset ? dataset.label : entry.yaxisLabel,\n                  zeroBased: options.zeroBasedYAxis,\n                  yAxisRange: options.yAxisRange,\n                  autoRangeSelection: options.autoRangeSelection,\n                  separateYAxis: options.separateYAxis\n                },\n                visible: options.visible\n              };\n              if (dataset) {\n                dataEntry.axisOptions.parameters = {\n                  feature: dataset.parameters.feature,\n                  phenomenon: dataset.parameters.phenomenon,\n                  offering: dataset.parameters.offering\n                };\n              }\n              this.additionalPreparedData.push(dataEntry);\n            } else {\n              dataEntry = this.additionalPreparedData[prepDataIdx];\n              dataEntry.axisOptions.uom = dataset ? dataset.uom : entry.yaxisLabel;\n              dataEntry.axisOptions.label = dataset ? dataset.label : entry.yaxisLabel;\n            }\n\n            const newDatasetIdx = this.yRangesEachUom.findIndex((e) => e.ids.indexOf(entry.linkedDatasetId) > -1);\n            const dataExtent = extent<DataEntry, number>(dataEntry.data, (d) => {\n              if (this.timespan.from <= d.timestamp && this.timespan.to >= d.timestamp) { return d.value; }\n            });\n            if (isFinite(dataExtent[0]) && isFinite(dataExtent[1])) {\n              const range: MinMaxRange = { min: dataExtent[0], max: dataExtent[1] };\n              this.extendRange(range);\n              if (newDatasetIdx === -1) {\n                const existingAxisIndex = this.yRangesEachUom.findIndex(e => e.ids.indexOf(entry.yaxisLabel) !== -1);\n                const axisRange = {\n                  uom: entry.yaxisLabel,\n                  range: range,\n                  autoRange: options.autoRangeSelection,\n                  preRange: range,\n                  originRange: range,\n                  zeroBased: options.zeroBasedYAxis,\n                  outOfrange: false,\n                  ids: [entry.yaxisLabel],\n                  parameters: dataEntry.axisOptions.parameters\n                };\n                if (existingAxisIndex > -1) {\n                  this.yRangesEachUom[existingAxisIndex] = axisRange;\n                } else {\n                  this.yRangesEachUom.push(axisRange);\n                }\n              } else {\n                if (this.yRangesEachUom[newDatasetIdx].range) {\n                  this.yRangesEachUom[newDatasetIdx].range.min = Math.min(range.min, this.yRangesEachUom[newDatasetIdx].range.min);\n                  this.yRangesEachUom[newDatasetIdx].range.max = Math.max(range.max, this.yRangesEachUom[newDatasetIdx].range.max);\n                } else {\n                  this.yRangesEachUom[newDatasetIdx].range = range;\n                }\n                this.yRangesEachUom[newDatasetIdx].ids.push(entry.linkedDatasetId ? entry.linkedDatasetId + 'add' : entry.yaxisLabel);\n              }\n              if (entry.yaxisLabel && !entry.linkedDatasetId) {\n                let idx = this.listOfUoms.indexOf(entry.yaxisLabel);\n                if (idx < 0) { this.listOfUoms.push(entry.yaxisLabel); }\n              }\n            }\n          }\n        } else {\n          console.warn('Please check the additional entry, it needs at least a \\'linkedDatasetId\\' or a \\'yaxisLabel\\' property and a \\'data\\' property: ', entry);\n        }\n      });\n    }\n  }\n\n  protected drawAllGraphLines() {\n    super.drawAllGraphLines();\n    this.additionalPreparedData.forEach(e => this.drawGraphLine(e));\n  }\n\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    ViewChild\n} from '@angular/core';\nimport * as d3 from 'd3';\nimport {\n    D3GeneralDataPoint,\n    D3GeneralDataset,\n    D3GeneralInput,\n    D3GeneralPlotOptions,\n    D3GeneralAxisOptions,\n    Range,\n    D3GeneralGraphOptions\n} from '../model/d3-general';\nimport { D3TimeFormatLocaleService } from '../helper/d3-time-format-locale.service';\nimport moment from 'moment';\n\n@Component({\n    selector: 'n52-d3-general-graph',\n    template: `<div class=\"d3\" #d3general></div>\n`,\n    styles: [`.d3{height:100%;width:100%;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.d3 .grid .tick line{stroke:#d3d3d3;stroke-opacity:.7;shape-rendering:crispEdges}.d3 .x{fill:orange;fill-opacity:.4}.d3 .x .tick{stroke:#00f;stroke-width:10px}.d3 .x .tick line{stroke:red;stroke-width:15px}.d3 .axis{fill:orange;fill-opacity:.4}.d3 .axis .tick{stroke:#00f;stroke-width:10px}.d3 .axis .tick line{stroke:#ffa07a;stroke-width:15px}.d3 .graphDots{stroke-width:0;stroke-opacity:1}.d3 .graphDots .hover{stroke-width:20px;stroke-opacity:.5}`]\n})\nexport class D3GeneralGraphComponent implements AfterViewInit, OnChanges {\n\n    @ViewChild('d3general')\n    public d3Elem: ElementRef;\n\n    @Input()\n    public generalD3Input: D3GeneralInput;\n\n    // componennt data variables\n    private generalData: D3GeneralDataset[] = [];\n    private axisOptions: D3GeneralAxisOptions = {};\n    private plotOptions: D3GeneralPlotOptions = {\n        xlabel: 'x',\n        ylabel: 'y',\n        date: false\n    };\n\n    private defaultGraphOptions: D3GeneralGraphOptions = {\n        color: 'red',\n        lines: {\n            lineWidth: 2,\n            pointRadius: 2\n        }\n    };\n\n    // graph components\n    private rawSvg: any;\n    private graph: any;\n    private graphBody: any;\n    private background: any;\n    private graphFocus: any;\n    private focusG: any;\n    private highlightRect: any;\n    private highlightText: any;\n\n    // component settings\n    private height: number;\n    private width: number;\n    private buffer = 0;\n    private maxLabelwidth = 0;\n\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 10\n    };\n\n    constructor(\n        protected timeFormatLocaleService: D3TimeFormatLocaleService\n    ) { }\n\n    ngAfterViewInit() {\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n        this.graphFocus = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n\n        this.prepareData();\n    }\n\n    ngOnChanges(changes) {\n        if (changes.generalD3Input && this.rawSvg) {\n            this.generalD3Input = changes.generalD3Input.currentValue;\n            this.prepareData();\n        }\n    }\n\n    private prepareData() {\n        if (this.generalD3Input) {\n            // add all input dataset into one array (public generalData)\n            let data = [];\n\n            this.generalD3Input.datasets.forEach((ds, index) => {\n                let dataset: D3GeneralDataset = {\n                    data: ds.data,\n                    id: index\n                };\n                data = data.concat(ds.data);\n                this.generalData.push(dataset);\n            });\n\n            this.plotOptions = this.generalD3Input.plotOptions;\n            this.axisOptions.date = true;\n            this.axisOptions.xRange = this.getRange(data, 'x');\n            this.axisOptions.yRange = this.getRange(data, 'y');\n\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function to call functions related to plotting a dataset in a graph.\n     */\n    private plotGraph() {\n        this.height = this.calculateHeight();\n        this.width = this.calculateWidth();\n\n        this.axisOptions.yScale = this.drawYaxis(this.plotOptions);\n        this.axisOptions.xScale = this.drawXaxis(this.plotOptions);\n\n        // create background as rectangle providing panning\n        this.background = this.graph.append('svg:rect')\n            .attr('width', this.width - this.buffer)\n            .attr('height', this.height)\n            .attr('id', 'backgroundRect')\n            .attr('fill', 'none')\n            .attr('stroke', 'none')\n            .attr('pointer-events', 'all')\n            .attr('transform', 'translate(' + this.buffer + ', 0)');\n\n\n        this.focusG = this.graphFocus.append('g');\n        this.highlightRect = this.focusG.append('svg:rect');\n        this.highlightText = this.focusG.append('svg:text');\n\n        this.generalData.forEach(dataset => {\n            this.drawGraphLine(dataset);\n        });\n\n        this.createHoveringNet(this.generalData);\n        this.createHoveringNet(this.generalData);\n    }\n\n    /**\n     * Function to draw y axis.\n     * @param dataset {D3GeneralDataset} Object with information about the dataset.\n     */\n    private drawYaxis(options: D3GeneralPlotOptions) {\n\n        // set range offset for y axis scale\n        let yRangeOffset = 10;\n        const yRange = this.axisOptions.yRange;\n        // check for multiple datapoints\n        if (yRange.max !== yRange.min) {\n            yRangeOffset = (yRange.max - yRange.min) * 0.10;\n        } else {\n            yRangeOffset = yRange.min * 0.10;\n        }\n\n        const yScale = d3.scaleLinear()\n            .domain([yRange.min - yRangeOffset, yRange.max + yRangeOffset])\n            .range([this.height, 0]);\n\n        const yAxisGen = d3.axisLeft(yScale).ticks(5);\n\n        // draw y axis\n        const yAxis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // draw y axis label\n        const yAxisLabel = this.graph.append('text')\n            // .attr('transform', 'rotate(-90)')\n            .attr('transform', 'translate(0, ' + this.height / 2 + ')rotate(-90)')\n            .attr('dy', '1em')\n            .attr('class', 'yAxisTextLabel')\n            .style('font', '18px times')\n            .style('text-anchor', 'middle')\n            .style('fill', 'black')\n            .text(options.ylabel);\n\n        // this.graph.selectAll('.yAxisTextLabel')\n        this.buffer = yAxis.node().getBBox().width + 10 + this.getDimensions(yAxisLabel.node()).h;\n\n        yAxis.attr('transform', 'translate(' + this.buffer + ', 0)');\n\n        // draw y grid lines\n        this.graph.append('svg:g')\n            .attr('class', 'grid')\n            .attr('transform', 'translate(' + this.buffer + ', 0)')\n            .call(d3.axisLeft(yScale)\n                .ticks(5)\n                .tickSize(-this.width + this.buffer)\n                .tickFormat(() => '')\n            );\n\n        return yScale;\n    }\n\n    /**\n     * Function to draw x axis.\n     * @param dataset {D3GeneralDataset} Object with information about the dataset.\n     */\n    private drawXaxis(options: D3GeneralPlotOptions) {\n        // set range offset for x axis scale\n        const xRange = this.axisOptions.xRange;\n        // check for multiple datapoints\n        let ticks = 10;\n        let xRangeOffset = (xRange.max - xRange.min) * 0.10;\n        if (xRange.max === xRange.min) {\n            ticks = 5;\n            xRangeOffset = xRange.min * 0.10;\n        }\n\n        const xScale = d3.scaleLinear()\n            .domain([xRange.min - xRangeOffset, xRange.max + xRangeOffset])\n            .range([this.buffer, this.width]);\n\n        const xAxis = d3.axisBottom(xScale)\n            .ticks(ticks)\n            .tickFormat(d => {\n                if (options.date) {\n                    const date = new Date(d.valueOf());\n\n                    const formatMillisecond = '.%L',\n                        formatSecond = ':%S',\n                        formatMinute = '%H:%M',\n                        formatHour = '%H:%M',\n                        formatDay = '%b %d',\n                        formatWeek = '%b %d',\n                        formatMonth = '%B',\n                        formatYear = '%Y';\n\n                    const format = d3.timeSecond(date) < date ? formatMillisecond\n                        : d3.timeMinute(date) < date ? formatSecond\n                            : d3.timeHour(date) < date ? formatMinute\n                                : d3.timeDay(date) < date ? formatHour\n                                    : d3.timeMonth(date) < date ? (d3.timeWeek(date) < date ? formatDay : formatWeek)\n                                        : d3.timeYear(date) < date ? formatMonth\n                                            : formatYear;\n                    return this.timeFormatLocaleService.getTimeLocale(format)(new Date(d.valueOf()));\n                } else {\n                    return '' + d.valueOf();\n                }\n            });\n\n        this.graph.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxis)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        // draw x grid lines\n        this.graph.append('svg:g')\n            .attr('class', 'grid')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxis\n                .tickSize(-this.height)\n                .tickFormat(() => '')\n            );\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(xScale)\n                .ticks(0)\n                .tickSize(0));\n\n        // draw x axis label\n        this.graph.append('text')\n            .attr('x', (this.width + this.buffer) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text(options.xlabel);\n\n        return xScale;\n    }\n\n    /**\n     * Function to draw the line of the graph.\n     * @param dataset {D3GeneralDataset} Object with information about the datset.\n     */\n    private drawGraphLine(dataset: D3GeneralDataset) {\n        // create grah line component\n        this.graphBody = this.graph\n            .append('g')\n            .attr('clip-path', 'url(#' + dataset.id + ')');\n\n        // create line with dataset\n        let graphLine = d3.line<D3GeneralDataPoint>()\n            .defined(d => (!isNaN(d.x) && !isNaN(d.y)))\n            .x((d) => {\n                const xCoord = this.axisOptions.xScale(d.x);\n                if (!isNaN(xCoord)) {\n                    d.xCoord = xCoord;\n                    return xCoord;\n                }\n            })\n            .y((d) => {\n                const yCoord = this.axisOptions.yScale(d.y);\n                if (!isNaN(yCoord)) {\n                    d.yCoord = yCoord;\n                    return yCoord;\n                }\n            })\n            .curve(d3.curveLinear);\n\n        this.graphBody\n            .append('svg:path')\n            .datum(dataset.data)\n            .attr('class', 'line')\n            .attr('fill', 'none')\n            .attr('stroke', this.plotOptions.graph ? this.plotOptions.graph.color : this.defaultGraphOptions.color)\n            .attr('stroke-width', this.plotOptions.graph ? this.plotOptions.graph.lines.lineWidth : this.defaultGraphOptions.lines.lineWidth)\n            .attr('d', graphLine);\n\n        // draw circles around datapoints\n        this.graphBody.selectAll('.graphDots')\n            .data(dataset.data.filter((d) => !isNaN(d.y)))\n            .enter().append('circle')\n            .attr('class', 'graphDots')\n            .attr('id', function (d) {\n                let datasetxCoordSplit = d.xCoord.toString().split('.')[0] + '-' + d.xCoord.toString().split('.')[1];\n                return 'dot-' + datasetxCoordSplit + '-' + dataset.id + '';\n            })\n            .attr('stroke', this.plotOptions.graph ? this.plotOptions.graph.color : this.defaultGraphOptions.color)\n            .attr('fill', this.plotOptions.graph ? this.plotOptions.graph.color : this.defaultGraphOptions.color)\n            .attr('cx', graphLine.x())\n            .attr('cy', graphLine.y())\n            .attr('r', this.plotOptions.graph ? this.plotOptions.graph.lines.pointRadius : this.defaultGraphOptions.lines.pointRadius);\n\n    }\n\n    /**\n     * Function to create a net of polygons overlaying the graphs to divide sections for hovering.\n     * @param inputData {D3GeneralDataset[]} data containing an array with all datapoints and an id for each dataset\n     */\n    private createHoveringNet(inputData): void {\n        let data = inputData.map(function (series, i) {\n            series.data = series.data.map(function (point) {\n                point.series = i;\n                point[0] = point.x;\n                point[1] = point.y;\n                return point;\n            });\n            return series;\n        });\n\n        let x = d3.scaleLinear(),\n            y = d3.scaleLinear();\n\n        let vertices: [number, number][] = d3.merge(data.map(function (cl, lineIndex) {\n            /**\n             * cl = { data: [{0: number, 1: number, series: number, x: number, y: number}, {}, ...], id: number }\n             * point = each point in a dataset\n            */\n            let outputLine = cl.data.map(function (point, pointIndex) {\n                let outputPoint = [x(point.xCoord), y(point.yCoord), lineIndex, pointIndex, point, cl];\n                return outputPoint; // adding series index to point because data is being flattened\n            });\n            return outputLine;\n        }));\n\n        let left = this.buffer, // + this.margin.left,\n            top = this.margin.top,\n            right = this.background.node().getBBox().width + this.buffer, // + this.margin.left,\n            bottom = this.margin.top + this.background.node().getBBox().height;\n\n        // filter dataset - delete all entries that are NaN\n        let verticesFiltered = vertices.filter(d => !isNaN(d[0]) || !isNaN(d[1]));\n        const Diffvoronoi = d3.voronoi()\n            .extent([[left, top], [right, bottom]]);\n        let diffVoronoi2 = Diffvoronoi.polygons(verticesFiltered);\n\n        let wrap = this.rawSvg.selectAll('g.d3line').data([verticesFiltered]);\n        let gEnter = wrap.enter().append('g').attr('class', 'd3line').append('g');\n        gEnter.append('g').attr('class', 'point-paths');\n\n        // to avoid no hovering for only one dataset without interaction the following lines are doubled\n        // this will create the paths, which can be updated later on (by the 'exit().remove()' function calls)\n        let pointPaths = wrap.select('.point-paths').selectAll('path')\n            .data(diffVoronoi2);\n        pointPaths\n            .enter().append('path')\n            .attr('class', function (d, i) {\n                return 'path-' + i;\n            });\n\n        pointPaths = wrap.select('.point-paths').selectAll('path')\n            .data(diffVoronoi2);\n        pointPaths\n            .enter().append('path')\n            .attr('class', function (d, i) {\n                return 'path-' + i;\n            });\n        pointPaths.exit().remove();\n        pointPaths\n            .attr('clip-path', function (d) {\n                if (d !== undefined) {\n                    let datasetxCoordSplit = d.data[4].xCoord.toString().split('.')[0] + '-' + d.data[4].xCoord.toString().split('.')[1];\n                    return 'url(#clip-' + d.data[5].id + '-' + datasetxCoordSplit + ')';\n                }\n            })\n            .attr('d', function (d) {\n                if (d !== undefined) {\n                    return 'M' + d.join(' ') + 'Z';\n                }\n            })\n            .attr('transform', 'translate(' + this.margin.left + ', ' + this.margin.top + ')')\n            .on('mousemove', (d) => {\n                if (d !== undefined) {\n                    let coords = d3.mouse(this.background.node());\n                    let dataset = d.data[4];\n                    let dist = this.calcDistanceHovering(dataset, coords);\n                    let radius = this.plotOptions.graph ? this.plotOptions.graph.lines.pointRadius : this.defaultGraphOptions.lines.pointRadius;\n                    let color = this.plotOptions.graph ? this.plotOptions.graph.color : this.defaultGraphOptions.color;\n                    if (dist <= 8) {\n                        let rectBack = this.background.node().getBBox();\n                        if (coords[0] >= 0 && coords[0] <= rectBack.width && coords[1] >= 0 && coords[1] <= rectBack.height) {\n                            // highlight hovered dot\n                            let datasetxCoordSplit = dataset.xCoord.toString().split('.')[0] + '-' + dataset.xCoord.toString().split('.')[1];\n                            d3.select('#dot-' + datasetxCoordSplit + '-' + d.data[5].id + '')\n                                .attr('opacity', 0.8)\n                                .attr('r', (radius * 2));\n\n                            this.highlightRect\n                                .style('visibility', 'visible');\n                            this.highlightText\n                                .style('visibility', 'visible');\n\n                            // create text for hovering label\n                            let text = this.plotOptions.date ? 'x: ' + moment(dataset.x).format('DD.MM.YY HH:mm') + ' y: ' + dataset.y : 'x: ' + dataset.x + ' y: ' + dataset.y;\n                            let dotLabel = this.highlightText\n                                .text(text)\n                                .attr('class', 'mouseHoverDotLabel')\n                                .style('pointer-events', 'none')\n                                .style('fill', color);\n\n                            let onLeftSide = false;\n                            if ((this.background.node().getBBox().width + this.buffer) / 2 > coords[0]) { onLeftSide = true; }\n\n                            let rectX: number = dataset.xCoord + 15;\n                            let rectY: number = dataset.yCoord;\n                            let rectW: number = this.getDimensions(dotLabel.node()).w + 8;\n                            let rectH: number = this.getDimensions(dotLabel.node()).h; // + 4;\n\n                            if (!onLeftSide) {\n                                rectX = dataset.xCoord - 15 - rectW;\n                                rectY = dataset.yCoord;\n                            }\n\n                            if ((coords[1] + rectH + 4) > this.background.node().getBBox().height) {\n                                // when label below x axis\n                                console.log('Translate label to a higher place. - not yet implemented');\n                            }\n\n                            // create hovering label\n                            let dotRectangle = this.highlightRect\n                                .attr('class', 'mouseHoverDotRect')\n                                .style('fill', 'white')\n                                .style('fill-opacity', 1)\n                                .style('stroke', color)\n                                .style('stroke-width', '1px')\n                                .style('pointer-events', 'none')\n                                .attr('width', rectW)\n                                .attr('height', rectH)\n                                .attr('transform', 'translate(' + rectX + ', ' + rectY + ')');\n\n                            let labelX: number = dataset.xCoord + 4 + 15;\n                            let labelY: number = dataset.yCoord + this.getDimensions(dotRectangle.node()).h - 4;\n\n                            if (!onLeftSide) {\n                                labelX = dataset.xCoord - rectW + 4 - 15;\n                                labelY = dataset.yCoord + this.getDimensions(dotRectangle.node()).h - 4;\n                            }\n\n                            this.highlightText\n                                .attr('transform', 'translate(' + labelX + ', ' + labelY + ')');\n                        }\n                    } else {\n                        // unhighlight hovered dot\n                        let datasetxCoordSplit = dataset.xCoord.toString().split('.')[0] + '-' + dataset.xCoord.toString().split('.')[1];\n                        d3.select('#dot-' + datasetxCoordSplit + '-' + d.data[5].id + '')\n                            .attr('opacity', 1)\n                            .attr('r', radius);\n\n                        // make label invisible\n                        this.highlightRect\n                            .style('visibility', 'hidden');\n                        this.highlightText\n                            .style('visibility', 'hidden');\n                    }\n                }\n            })\n            .on('mouseout', (d) => {\n                if (d !== undefined) {\n                    let dataset = d.data[4];\n                    let radius = this.plotOptions.graph ? this.plotOptions.graph.lines.pointRadius : this.defaultGraphOptions.lines.pointRadius;\n                    // unhighlight hovered dot\n                    let datasetxCoordSplit = dataset.xCoord.toString().split('.')[0] + '-' + dataset.xCoord.toString().split('.')[1];\n                    d3.select('#dot-' + datasetxCoordSplit + '-' + d.data[5].id + '')\n                        .attr('opacity', 1)\n                        .attr('r', radius);\n\n                    // make label invisible\n                    this.highlightRect\n                        .style('visibility', 'hidden');\n                    this.highlightText\n                        .style('visibility', 'hidden');\n                }\n            });\n    }\n\n    /**\n     * Function to calculate distance between mouse and a hovered point.\n     * @param dataset {} Coordinates of the hovered point.\n     * @param coords {} Coordinates of the mouse.\n     */\n    private calcDistanceHovering(dataset: D3GeneralDataPoint, coords: [number, number]): number {\n        let mX = coords[0] + this.buffer,\n            mY = coords[1], // + this.margin.top,\n            pX = dataset.xCoord,\n            pY = dataset.yCoord;\n        // calculate distance between point and mouse when hovering\n        return Math.sqrt(Math.pow((pX - mX), 2) + Math.pow((pY - mY), 2));\n    }\n\n    private getRange(data: D3GeneralDataPoint[], selector: string): Range {\n        // range for axis scale\n        let range: [number, number] = d3.extent(d3.values(data.map((d) => {\n            if ((!isNaN(d.x) && !isNaN(d.y))) {\n                return d[selector];\n            }\n        })));\n        return { min: range[0], max: range[1] };\n    }\n\n    /**\n     * Function that returns the height of the graph diagram.\n     */\n    private calculateHeight(): number {\n        return (this.d3Elem.nativeElement as HTMLElement).clientHeight - this.margin.top - this.margin.bottom;\n    }\n\n    /**\n     * Function that returns the width of the graph diagram.\n     */\n    private calculateWidth(): number {\n        return this.rawSvg.node().width.baseVal.value - this.margin.left - this.margin.right;\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { D3OverviewTimeseriesGraphComponent } from './d3-overview-timeseries-graph/d3-overview-timeseries-graph.component';\nimport { D3TimeseriesGraphComponent } from './d3-timeseries-graph/d3-timeseries-graph.component';\nimport { D3TrajectoryGraphComponent } from './d3-trajectory-graph/d3-trajectory-graph.component';\nimport {\n  ExtendedDataD3TimeseriesGraphComponent,\n} from './extended-data-d3-timeseries-graph/extended-data-d3-timeseries-graph.component';\nimport { D3TimeFormatLocaleService } from './helper/d3-time-format-locale.service';\nimport { D3GeneralGraphComponent } from './d3-general-graph/d3-general-graph.component';\n\n@NgModule({\n  declarations: [\n    D3TrajectoryGraphComponent,\n    D3TimeseriesGraphComponent,\n    D3OverviewTimeseriesGraphComponent,\n    ExtendedDataD3TimeseriesGraphComponent,\n    D3GeneralGraphComponent\n  ],\n  imports: [\n    HelgolandCoreModule\n  ],\n  exports: [\n    D3TrajectoryGraphComponent,\n    D3TimeseriesGraphComponent,\n    D3OverviewTimeseriesGraphComponent,\n    ExtendedDataD3TimeseriesGraphComponent,\n    D3GeneralGraphComponent\n  ],\n  providers: [\n    D3TimeFormatLocaleService\n  ]\n})\nexport class HelgolandD3Module { }\n"],"names":["d3.mouse","d3.selectAll","d3.select","d3.event","d3.extent","d3.zoom","d3.drag","d3.brushX","line","d3.scaleTime","d3.axisBottom","d3.timeSecond","d3.timeMinute","d3.timeHour","d3.timeDay","d3.timeMonth","d3.timeWeek","d3.timeYear","d3.axisTop","d3.scaleLinear","d3.axisLeft","d3.line","d3.curveLinear","d3.bisector","min","d3.min","values","d3.merge","d3.voronoi","d3.values"],"mappings":"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"}
