{"version":3,"file":"helgoland-map.umd.js.map","sources":["ng://@helgoland/map/lib/base/map-cache.service.ts","ng://@helgoland/map/lib/base/map.module.ts","ng://@helgoland/map/lib/base/cached-map-component.ts","ng://@helgoland/map/lib/base/geosearch/geosearch.ts","ng://@helgoland/map/lib/base/geosearch/nominatim.service.ts",null,"ng://@helgoland/map/lib/base/geocure/geocure-layer.ts","ng://@helgoland/map/lib/view/geometry-map-viewer/geometry-map-viewer.component.ts","ng://@helgoland/map/lib/view/module.ts","ng://@helgoland/map/lib/control/extent/extent.component.ts","ng://@helgoland/map/lib/control/geosearch/geosearch.component.ts","ng://@helgoland/map/lib/control/locate/locate.service.ts","ng://@helgoland/map/lib/control/locate/locate.component.ts","ng://@helgoland/map/lib/control/zoom/zoom.component.ts","ng://@helgoland/map/lib/control/module.ts","ng://@helgoland/map/lib/selector/map-selector.component.ts","ng://@helgoland/map/lib/selector/services/last-value-label-generator.interface.ts","ng://@helgoland/map/lib/selector/last-value-map-selector/last-value-map-selector.component.ts","ng://@helgoland/map/lib/selector/platform-map-selector/platform-map-selector.component.ts","ng://@helgoland/map/lib/selector/services/last-value-label-generator.service.ts","ng://@helgoland/map/lib/selector/station-map-selector/station-map-selector.component.ts","ng://@helgoland/map/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts","ng://@helgoland/map/lib/selector/module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Injectable()\nexport class MapCache {\n\n    private mapCache: Map<string, any> = new Map<string, any>();\n\n    public getMap(id: string): L.Map {\n        return this.mapCache.get(id);\n    }\n\n    public setMap(id: string, map: L.Map) {\n        this.mapCache.set(id, map);\n    }\n\n    public hasMap(id: string): boolean {\n        return this.mapCache.has(id);\n    }\n\n    public deleteMap(id: string): boolean {\n        return this.mapCache.delete(id);\n    }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { MapCache } from './map-cache.service';\n\nconst COMPONENTS = [\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    MapCache\n  ]\n})\nexport class HelgolandMapModule { }\n","import {\n    DoCheck,\n    EventEmitter,\n    Input,\n    KeyValueDiffer,\n    KeyValueDiffers,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from './map-cache.service';\nimport { LayerOptions } from './map-options';\n\nconst DEFAULT_BASE_LAYER_NAME = 'BaseLayer';\nconst DEFAULT_BASE_LAYER_URL = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\nconst DEFAULT_BASE_LAYER_ATTRIBUTION = '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors';\n\nexport abstract class CachedMapComponent implements OnChanges, DoCheck, OnDestroy, OnInit {\n\n    /**\n     * A map with the given ID is created inside this component. This ID can be used the get the map instance over the map cache service.\n     */\n    @Input()\n    public mapId: string;\n\n    /**\n     * The corresponding leaflet map options (see: https://leafletjs.com/reference-1.3.4.html#map-option)\n     */\n    @Input()\n    public mapOptions: L.MapOptions;\n\n    /**\n     * Bounds for the map\n     */\n    @Input()\n    public fitBounds: L.LatLngBoundsExpression;\n\n    /**\n     * Map, which holds all overlay map layer (see: https://leafletjs.com/reference-1.3.4.html#layer)\n     */\n    @Input()\n    public overlayMaps: Map<string, LayerOptions>;\n\n    /**\n     * Map, which holds all base map layer (see: https://leafletjs.com/reference-1.3.4.html#layer)\n     */\n    @Input()\n    public baseMaps: Map<string, LayerOptions>;\n\n    /**\n     * Describes the the zoom options (see: https://leafletjs.com/reference-1.3.4.html#control-layers)\n     */\n    @Input()\n    public layerControlOptions: L.Control.LayersOptions;\n\n    /**\n     * Describes the the zoom control options (see: https://leafletjs.com/reference-1.3.4.html#control-zoom)\n     */\n    @Input()\n    public zoomControlOptions: L.Control.ZoomOptions;\n\n    /**\n     * Informs when initialization is done with map id.\n     */\n    @Output()\n    public mapInitialized: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * The map object.\n     */\n    protected map: L.Map;\n\n    protected oldOverlayLayer: L.Control.LayersObject = {};\n    protected oldBaseLayer: L.Control.LayersObject = {};\n    protected layerControl: L.Control.Layers;\n    protected zoomControl: L.Control.Zoom;\n\n    private _overlayMaps: Map<string, LayerOptions>;\n    private _differOverlayMaps: KeyValueDiffer<string, LayerOptions>;\n    private _baseMaps: Map<string, LayerOptions>;\n    private _differBaseMaps: KeyValueDiffer<string, LayerOptions>;\n\n    constructor(\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers\n    ) {\n        this._differOverlayMaps = this.differs.find({}).create();\n        this._differBaseMaps = this.differs.find({}).create();\n    }\n\n    public ngOnInit(): void {\n        if (this.mapId === undefined || this.mapId === null) {\n            this.mapId = this.generateUUID();\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.map) {\n            if (changes.fitBounds) {\n                this.map.fitBounds(this.fitBounds);\n            }\n            if (changes.zoomControlOptions) {\n                this.updateZoomControl();\n            }\n        }\n    }\n\n    public ngDoCheck(): void {\n        if (this._differOverlayMaps) {\n            const changes = this._differOverlayMaps.diff(this.overlayMaps);\n            if (changes) {\n                changes.forEachRemovedItem((e) => this.removeOverlayMap(e.previousValue));\n                changes.forEachAddedItem((e) => this.addOverlayMap(e.currentValue));\n                this.updateLayerControl();\n            }\n        }\n        if (this._differBaseMaps) {\n            const changes = this._differBaseMaps.diff(this.baseMaps);\n            if (changes) {\n                changes.forEachRemovedItem((e) => this.removeBaseMap(e.previousValue));\n                changes.forEachAddedItem((e) => this.addBaseMap(e.currentValue));\n                this.updateLayerControl();\n            }\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.map.remove();\n        this.map = null;\n        this.mapCache.deleteMap(this.mapId);\n    }\n\n    protected createMap(): void {\n        if (!this.mapOptions || this.zoomControlOptions) { this.mapOptions = { zoomControl: false }; }\n        this.map = L.map(this.mapId, this.mapOptions);\n        this.mapCache.setMap(this.mapId, this.map);\n        this.mapInitialized.emit(this.mapId);\n        if (this.baseMaps && this.baseMaps.size > 0) {\n            this.baseMaps.forEach((entry, key) => this.addBaseMap(entry));\n        } else {\n            this.addBaseMap();\n        }\n        if (this.overlayMaps) { this.overlayMaps.forEach((entry, key) => this.addOverlayMap(entry)); }\n        this.updateZoomControl();\n        this.updateLayerControl();\n        if (this.fitBounds) {\n            this.map.fitBounds(this.fitBounds);\n        }\n    }\n\n    private generateUUID(): string {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n\n    private addOverlayMap(layerOptions: LayerOptions) {\n        if (this.map) {\n            if (!this.oldOverlayLayer.hasOwnProperty[layerOptions.label]) {\n                this.oldOverlayLayer[layerOptions.label] = layerOptions.layer;\n                if (layerOptions.visible) { layerOptions.layer.addTo(this.map); }\n            }\n        }\n    }\n\n    private removeOverlayMap(layerOptions: LayerOptions) {\n        if (this.map && this.oldOverlayLayer.hasOwnProperty(layerOptions.label)) {\n            this.map.removeLayer(this.oldOverlayLayer[layerOptions.label]);\n            delete this.oldOverlayLayer[layerOptions.label];\n        }\n    }\n\n    private addBaseMap(layerOptions?: LayerOptions) {\n        if (this.map) {\n            if (!this.baseMaps || this.baseMaps.size === 0) {\n                layerOptions = {\n                    label: DEFAULT_BASE_LAYER_NAME,\n                    visible: true,\n                    layer: L.tileLayer(DEFAULT_BASE_LAYER_URL, {\n                        attribution: DEFAULT_BASE_LAYER_ATTRIBUTION\n                    })\n                };\n            }\n            if (!this.oldBaseLayer.hasOwnProperty[layerOptions.label]) {\n                this.oldBaseLayer[layerOptions.label] = layerOptions.layer;\n                if (layerOptions.visible) { layerOptions.layer.addTo(this.map); }\n            }\n        }\n    }\n\n    private removeBaseMap(layerOptions: LayerOptions) {\n        if (this.map && this.oldBaseLayer.hasOwnProperty(layerOptions.label)) {\n            this.map.removeLayer(this.oldBaseLayer[layerOptions.label]);\n            delete this.oldBaseLayer[layerOptions.label];\n        }\n    }\n\n    private updateLayerControl() {\n        if (this.map) {\n            if (this.layerControl) {\n                this.map.removeControl(this.layerControl);\n            }\n            if (this.layerControlOptions\n                && (Object.keys(this.oldBaseLayer).length > 1 || Object.keys(this.oldOverlayLayer).length > 0)) {\n                this.layerControl =\n                    L.control.layers(this.oldBaseLayer, this.oldOverlayLayer, this.layerControlOptions).addTo(this.map);\n            }\n        }\n    }\n\n    private updateZoomControl() {\n        if (this.zoomControl) { this.map.removeControl(this.zoomControl); }\n        if (this.zoomControlOptions) {\n            this.zoomControl = L.control.zoom(this.zoomControlOptions).addTo(this.map);\n        }\n    }\n}\n","import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n    address?: {\n        city?: string;\n        city_district?: string;\n        construction?: string;\n        continent?: string;\n        country?: string;\n        country_code?: string;\n        house_number?: string;\n        neighbourhood?: string;\n        postcode?: string;\n        public_building?: string;\n        road?: string;\n        state?: string;\n        suburb?: string;\n        town?: string;\n        [key: string]: string;\n    };\n}\n\nexport interface GeoSearchOptions {\n    acceptLanguage?: string;\n    addressdetails?: boolean;\n    asPointGeometry?: boolean;\n    countrycodes?: string[];\n}\n\nexport interface GeoReverseOptions {\n    acceptLanguage?: string;\n    addressdetails?: boolean;\n    zoom?: number;\n}\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        city: string;\n        cityDistrict: string;\n        country: string;\n        countryCode: string;\n        county: string;\n        houseNumber: string;\n        neighbourhood: string;\n        postcode: string;\n        road: string;\n        state: string;\n        stateDistrict: string;\n        suburb: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable<GeoSearchResult>;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable<GeoReverseResult>;\n\n}\n","import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n    address?: {\n        city?: string;\n        city_district?: string;\n        construction?: string;\n        continent?: string;\n        country?: string;\n        country_code?: string;\n        house_number?: string;\n        neighbourhood?: string;\n        postcode?: string;\n        public_building?: string;\n        state?: string;\n        suburb?: string;\n    };\n}\n\ninterface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\ninterface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options: GeoSearchOptions = {}): Observable<GeoSearchResult> {\n        let params = new HttpParams();\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        params = params.set('limit', '1');\n        if (options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        if (options.addressdetails !== null) { params = params.set('addressdetails', options.addressdetails ? '1' : '0'); }\n        if (options.asPointGeometry !== null) { params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1'); }\n        if (options.acceptLanguage) { params = params.set('accept-language', options.acceptLanguage); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                const returnResult: GeoSearchResult = { name, geometry };\n                if (result.boundingbox) {\n                    returnResult.bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                }\n                if (result.address) { returnResult.address = result.address; }\n                return returnResult;\n            }\n        });\n    }\n\n    public reverse(point: Point, options: GeoReverseOptions = {}): Observable<GeoReverseResult> {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        if (options && options.addressdetails !== undefined) { params = params.set('addressdetails', options.addressdetails ? '1' : '0'); }\n        if (options.acceptLanguage !== null) { params = params.set('accept-language', options.acceptLanguage); }\n        if (options && options.zoom !== undefined) { params = params.set('zoom', `${options.zoom}`); }\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            const result = {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n            if (res.address) {\n                result.address = {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                };\n            }\n            return result;\n        });\n    }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { GeoJSON, GeoJSONOptions, LatLngBounds, LeafletEvent } from 'leaflet';\n\nexport interface GeoCureGeoJSONOptions extends GeoJSONOptions {\n    url: string;\n    httpClient: HttpClient;\n    showOnMinZoom?: number;\n    showOnMaxZoom?: number;\n}\n\nexport class GeoCureGeoJSON extends GeoJSON {\n\n    public options: GeoCureGeoJSONOptions;\n\n    constructor(\n        options?: GeoCureGeoJSONOptions\n    ) {\n        super();\n        if (options) {\n            this.options = options;\n        }\n    }\n\n    public getEvents() {\n        const events = {\n            moveend: (event: LeafletEvent) => this.fetchData(event.target)\n        };\n        return events;\n    }\n\n    public onAdd(map: L.Map): this  {\n        super.onAdd(map);\n        this.fetchData(map);\n        return this;\n    }\n\n    private fetchData(map: L.Map) {\n        const matchMaxZoom = this.options.showOnMaxZoom ? map.getZoom() <= this.options.showOnMaxZoom : true;\n        const matchMinZoom = this.options.showOnMinZoom ? map.getZoom() >= this.options.showOnMinZoom : true;\n        if (matchMinZoom && matchMaxZoom) {\n            this.loadData(map.getBounds());\n        } else {\n            this.clearLayers();\n        }\n    }\n\n    private loadData(bounds: LatLngBounds) {\n        const bboxparam = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()].join(',');\n        this.options.httpClient\n            .get<GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>(this.options.url, {\n                params: {\n                    bbox: bboxparam\n                }\n            })\n            .subscribe((geojson) => {\n                this.clearLayers();\n                this.addData(geojson);\n            });\n    }\n}\n","import { AfterViewInit, Component, Input, KeyValueDiffers, OnChanges, SimpleChanges } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { CachedMapComponent } from '../../base/cached-map-component';\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n    selector: 'n52-geometry-map-viewer',\n    template: `<div [attr.id]=\"mapId\" class=\"map-viewer\"></div>\n`,\n    styles: [`:host{height:100%;width:100%}:host .map-viewer{height:100%;width:100%}`]\n})\nexport class GeometryMapViewerComponent extends CachedMapComponent implements AfterViewInit, OnChanges {\n\n    @Input()\n    public highlight: GeoJSON.GeoJsonObject;\n\n    @Input()\n    public geometry: GeoJSON.GeoJsonObject;\n\n    @Input()\n    public zoomTo: GeoJSON.GeoJsonObject;\n\n    @Input()\n    public avoidZoomToGeometry: boolean;\n\n    private highlightGeometry: L.GeoJSON;\n\n    private defaultStyle: L.PathOptions = {\n        color: 'red',\n        weight: 5,\n        opacity: 0.65\n    };\n\n    private highlightStyle: L.PathOptions = {\n        color: 'blue',\n        weight: 10,\n        opacity: 1\n    };\n\n    constructor(\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers\n    ) {\n        super(mapCache, differs);\n    }\n\n    public ngAfterViewInit() {\n        this.createMap();\n        this.drawGeometry();\n        this.showHighlight();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (this.map) {\n            if (changes.highlight && changes.highlight.currentValue) {\n                this.showHighlight();\n            }\n            if (changes.geometry) {\n                this.drawGeometry();\n            }\n            if (changes.zoomTo) {\n                this.zoomToGeometry();\n            }\n        }\n    }\n\n    private zoomToGeometry() {\n        const geometry = L.geoJSON(this.zoomTo);\n        this.map.fitBounds(geometry.getBounds());\n    }\n\n    private showHighlight() {\n        if (this.highlightGeometry) {\n            this.map.removeLayer(this.highlightGeometry);\n        }\n        this.highlightGeometry = L.geoJSON(this.highlight, {\n            pointToLayer: (feature, latlng) => {\n                return L.circleMarker(latlng, this.highlightStyle);\n            }\n        });\n        this.highlightGeometry.setStyle(this.highlightStyle);\n        this.highlightGeometry.addTo(this.map);\n    }\n\n    private drawGeometry() {\n        if (this.geometry) {\n            const geojson = L.geoJSON(this.geometry, {\n                pointToLayer: (feature, latlng) => {\n                    return L.circleMarker(latlng, this.defaultStyle);\n                }\n            });\n\n            geojson.setStyle(this.defaultStyle);\n            geojson.addTo(this.map);\n\n            if (!this.avoidZoomToGeometry) {\n                this.map.fitBounds(geojson.getBounds());\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { GeometryMapViewerComponent } from './geometry-map-viewer/geometry-map-viewer.component';\n\n@NgModule({\n    declarations: [\n        GeometryMapViewerComponent\n    ],\n    imports: [\n        HelgolandMapModule\n    ],\n    exports: [\n        GeometryMapViewerComponent\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandMapViewModule { }\n","import { Component, Input } from '@angular/core';\n\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n  selector: 'n52-extent-control',\n  template: `<div>\n  <button type=\"button\" (click)=\"zoomToExtent()\">zoom to extent</button>\n</div>\n`\n})\nexport class ExtentControlComponent {\n\n  @Input()\n  public mapId: string;\n\n  @Input()\n  public extent: L.LatLngBoundsExpression;\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public zoomToExtent() {\n    this.mapCache.getMap(this.mapId).fitBounds(this.extent);\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { GeoSearch, GeoSearchOptions, GeoSearchResult } from '../../base/geosearch/geosearch';\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n    selector: 'n52-geosearch-control',\n    template: `<div>\n  <input [(ngModel)]=\"searchTerm\" (keyup.enter)=\"triggerSearch()\">\n  <span *ngIf=\"loading\">loading...</span>\n  <button type=\"button\" class=\"btn btn-light btn-sm\" (click)=\"clearSearch()\">X</button>\n</div>\n`\n})\nexport class GeosearchControlComponent {\n\n    /**\n     * Connect map id.\n     */\n    @Input()\n    public mapId: string;\n\n    /**\n     * Additional search options.\n     */\n    @Input()\n    public options: GeoSearchOptions;\n\n    /**\n     * Returns the search result.\n     */\n    @Output()\n    public onResultChanged: EventEmitter<GeoSearchResult> = new EventEmitter();\n\n    /**\n     * Informs, when the search is triggered.\n     */\n    @Output()\n    public onSearchTriggered: EventEmitter<void> = new EventEmitter();\n\n    public result: GeoSearchResult;\n\n    public resultGeometry: L.GeoJSON;\n\n    public searchTerm: string;\n\n    public loading: boolean;\n\n    constructor(\n        protected mapCache: MapCache,\n        protected geosearch: GeoSearch\n    ) { }\n\n    public triggerSearch() {\n        this.onSearchTriggered.emit();\n        this.removeOldGeometry();\n        if (this.searchTerm) {\n            this.loading = true;\n            this.geosearch.searchTerm(this.searchTerm, this.options).subscribe(\n                (result) => {\n                    if (!result) {\n                        this.searchTerm = '';\n                        return;\n                    }\n                    this.onResultChanged.emit(result);\n                    this.result = result;\n                    if (this.mapId) {\n                        this.resultGeometry = L.geoJSON(result.geometry).addTo(this.mapCache.getMap(this.mapId));\n                        if (result.bounds) {\n                            this.mapCache.getMap(this.mapId).fitBounds(result.bounds);\n                        } else {\n                            this.mapCache.getMap(this.mapId).fitBounds(this.resultGeometry.getBounds());\n                        }\n                    }\n                },\n                (error) => this.searchTerm = 'error occurred',\n                () => { this.loading = false; }\n            );\n        }\n    }\n\n    public clearSearch() {\n        this.searchTerm = '';\n        this.onResultChanged.emit(null);\n        this.removeOldGeometry();\n    }\n\n    private removeOldGeometry() {\n        if (this.resultGeometry) {\n            this.resultGeometry.remove();\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\n\nconst LOCATION_FOUND_EVENT = 'locationfound';\nconst LOCATION_ERROR = 'locationerror';\nconst LOCATED_MARKER_ID = 'located';\n\n@Injectable()\nexport class LocateService {\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public startLocate(id: string) {\n    const map = this.mapCache.getMap(id);\n    map.on(LOCATION_FOUND_EVENT, (evt: L.LocationEvent) => {\n      this.removeMarker(map);\n      const marker = L.marker(evt.latlng).addTo(map);\n      marker.options.title = LOCATED_MARKER_ID;\n    });\n    map.on(LOCATION_ERROR, (error) => {\n      console.error(error);\n    });\n    map.locate({\n      watch: true,\n      setView: true,\n      timeout: 30000\n    });\n  }\n\n  public stopLocate(id: string) {\n    const map = this.mapCache.getMap(id);\n    map.stopLocate();\n    map.off(LOCATION_FOUND_EVENT);\n    this.removeMarker(map);\n  }\n\n  private removeMarker(map: L.Map) {\n    map.eachLayer((entry) => {\n      if (entry instanceof L.Marker && entry.options.title === LOCATED_MARKER_ID) {\n        map.removeLayer(entry);\n      }\n    });\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { LocateService } from './locate.service';\n\n@Component({\n    selector: 'n52-locate-control',\n    template: `<div class=\"btn-group-vertical btn-group-sm map-control\">\n  <button type=\"button\" class=\"btn btn-sm\" (click)=\"locateUser()\" [ngClass]=\"isToggled ? 'btn-primary': 'btn-light'\">\n    locate\n  </button>\n</div>\n`,\n    styles: [`:host i{width:11px}`]\n})\nexport class LocateControlComponent {\n\n    @Input()\n    public mapId: string;\n\n    public isToggled = false;\n\n    constructor(\n        protected locateService: LocateService\n    ) { }\n\n    public locateUser() {\n        this.isToggled = !this.isToggled;\n        if (this.isToggled) {\n            this.locateService.startLocate(this.mapId);\n        } else {\n            this.locateService.stopLocate(this.mapId);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n  selector: 'n52-zoom-control',\n  template: `<div class=\"btn-group-vertical map-control\">\n  <button type=\"button\" class=\"btn btn-light btn-sm\" (click)=\"zoomIn()\">\n    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n  </button>\n  <button type=\"button\" class=\"btn btn-light btn-sm\" (click)=\"zoomOut()\">\n    <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\n  </button>\n</div>\n`\n})\nexport class ZoomControlComponent {\n\n  @Input()\n  public mapId: string;\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public zoomIn() {\n    this.mapCache.getMap(this.mapId).zoomIn();\n  }\n\n  public zoomOut() {\n    this.mapCache.getMap(this.mapId).zoomOut();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { ExtentControlComponent } from './extent/extent.component';\nimport { GeosearchControlComponent } from './geosearch/geosearch.component';\nimport { LocateControlComponent } from './locate/locate.component';\nimport { LocateService } from './locate/locate.service';\nimport { ZoomControlComponent } from './zoom/zoom.component';\n\nconst COMPONENTS = [\n  LocateControlComponent,\n  ZoomControlComponent,\n  GeosearchControlComponent,\n  ExtentControlComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HelgolandCoreModule,\n    HelgolandMapModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    LocateService\n  ]\n})\nexport class HelgolandMapControlModule { }\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    EventEmitter,\n    Input,\n    KeyValueDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { HasLoadableContent, ParameterFilter } from '@helgoland/core';\nimport * as L from 'leaflet';\n\nimport { CachedMapComponent } from '../base/cached-map-component';\nimport { MapCache } from '../base/map-cache.service';\nimport { MarkerSelectorGenerator } from './model/marker-selector-generator';\n\nexport abstract class MapSelectorComponent<T>\n    extends CachedMapComponent\n    implements OnChanges, AfterViewInit, HasLoadableContent {\n\n    /**\n     * @input The serviceUrl, where the selection should be loaded.\n     */\n    @Input()\n    public serviceUrl: string;\n\n    /**\n     * @input The filter which should be used, while fetching the selection.\n     */\n    @Input()\n    public filter: ParameterFilter;\n\n    @Input()\n    public avoidZoomToSelection: boolean;\n\n    @Input()\n    public markerSelectorGenerator: MarkerSelectorGenerator;\n\n    @Output()\n    public onSelected: EventEmitter<T> = new EventEmitter<T>();\n\n    @Output()\n    public onContentLoading: EventEmitter<boolean> = new EventEmitter();\n\n    /**\n     * @input Additional configuration for the marker zooming (https://leafletjs.com/reference-1.3.4.html#fitbounds-options)\n     */\n    @Input()\n    public fitBoundsMarkerOptions: L.FitBoundsOptions;\n\n    public isContentLoading: (loading: boolean) => void;\n\n    @Output()\n    public onNoResultsFound: EventEmitter<boolean> = new EventEmitter();\n\n    constructor(\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers,\n        protected cd: ChangeDetectorRef\n    ) {\n        super(mapCache, differs);\n    }\n\n    public ngAfterViewInit() {\n        this.createMap();\n        setTimeout(() => {\n            this.drawGeometries();\n            this.cd.detectChanges();\n        }, 10);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (this.map) {\n            if (changes.serviceUrl || changes.filter || changes.cluster) {\n                this.drawGeometries();\n            }\n        }\n    }\n\n    /**\n     * Draws the geometries\n     *\n     * @protected\n     * @abstract\n     * @memberof MapSelectorComponent\n     */\n    protected abstract drawGeometries(): void;\n\n    /**\n     * Zooms to the given bounds\n     *\n     * @protected\n     * @param bounds where to zoom\n     * @memberof MapSelectorComponent\n     */\n    protected zoomToMarkerBounds(bounds: L.LatLngBoundsExpression) {\n        if (!this.avoidZoomToSelection) {\n            this.map.fitBounds(bounds, this.fitBoundsMarkerOptions || {});\n        }\n    }\n\n}\n","import { Timeseries } from '@helgoland/core';\n\nexport const enum LastValuePresentation {\n  /**\n   * colorized circle depending on status intervals\n   */\n  Colorized,\n  /**\n   * textual presentation of the last value, done with LastValueLabelGenerator\n   */\n  Textual\n}\n\nexport abstract class LastValueLabelGenerator {\n\n  /**\n   * Creates an icon label based on a given timeseries.\n   */\n  public abstract createIconLabel(ts: Timeseries);\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, Input, KeyValueDiffers } from '@angular/core';\nimport {\n  DatasetApiInterface,\n  HasLoadableContent,\n  Mixin,\n  StatusIntervalResolverService,\n  Timeseries,\n  TimeseriesExtras,\n} from '@helgoland/core';\nimport { circleMarker, featureGroup, geoJSON, Layer, marker } from 'leaflet';\nimport { forkJoin, Observable, Observer } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\nimport { LastValueLabelGenerator, LastValuePresentation } from '../services/last-value-label-generator.interface';\n\n/**\n * Displays selectable series with their last values on an map.\n */\n@Component({\n  selector: 'n52-last-value-map-selector',\n  template: `<div class=\"map-wrapper\" style=\"height: 100%;\">\n  <div [attr.id]=\"mapId\" class=\"map-viewer\"></div>\n</div>\n`,\n  styles: [`:host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}`]\n})\n@Mixin([HasLoadableContent])\nexport class LastValueMapSelectorComponent extends MapSelectorComponent<Timeseries> implements AfterViewInit {\n\n  /**\n   * The list of internal series IDs, which should be presented with their last values on the map.\n   */\n  @Input()\n  public lastValueSeriesIDs: string[];\n\n  /**\n   * Presentation type how to display the series.\n   */\n  @Input()\n  public lastValuePresentation: LastValuePresentation = LastValuePresentation.Colorized;\n\n  /**\n   * Ignores all Statusintervals where the timestamp is before a given duration in milliseconds and draws instead the default marker.\n   */\n  @Input()\n  public ignoreStatusIntervalIfBeforeDuration = Infinity;\n\n  private markerFeatureGroup: L.FeatureGroup;\n\n  constructor(\n    protected mapCache: MapCache,\n    protected differs: KeyValueDiffers,\n    protected cd: ChangeDetectorRef,\n    protected apiInterface: DatasetApiInterface,\n    protected lastValueLabelGenerator: LastValueLabelGenerator,\n    protected statusIntervalResolver: StatusIntervalResolverService\n  ) {\n    super(mapCache, differs, cd);\n  }\n\n  protected drawGeometries(): void {\n    this.isContentLoading(true);\n    if (this.lastValueSeriesIDs && this.lastValueSeriesIDs.length) {\n      this.createMarkersBySeriesIDs();\n    }\n  }\n\n  private createMarkersBySeriesIDs() {\n    this.markerFeatureGroup = featureGroup();\n    const obsList: Array<Observable<any>> = [];\n    this.lastValueSeriesIDs.forEach(entry => {\n      const tsObs = this.apiInterface.getSingleTimeseriesByInternalId(entry);\n      obsList.push(tsObs.pipe(switchMap(val => this.createMarker(val).pipe(tap(res => {\n        this.markerFeatureGroup.addLayer(res);\n        res.on('click', () => this.onSelected.emit(val));\n      })))));\n    });\n    this.finalizeMarkerObservables(obsList);\n  }\n\n  private createMarker(ts: Timeseries) {\n    switch (this.lastValuePresentation) {\n      case LastValuePresentation.Colorized:\n        return this.createColorizedMarker(ts);\n      case LastValuePresentation.Textual:\n        return this.createLabeledMarker(ts);\n    }\n    return this.createColorizedMarker(ts);\n  }\n\n  private finalizeMarkerObservables(obsList: Observable<any>[]) {\n    forkJoin(obsList).subscribe(() => {\n      console.log('do zoom to bounds');\n      if (this.map) {\n        const bounds = this.markerFeatureGroup.getBounds();\n        this.zoomToMarkerBounds(bounds);\n        this.map.invalidateSize();\n      }\n      this.isContentLoading(false);\n    });\n    if (this.map) {\n      this.markerFeatureGroup.addTo(this.map);\n    }\n  }\n\n  private createColorizedMarker(ts: Timeseries): Observable<Layer> {\n    return new Observable<Layer>((observer: Observer<Layer>) => {\n      this.apiInterface.getTimeseriesExtras(ts.id, ts.url).subscribe((extras: TimeseriesExtras) => {\n        let coloredMarker;\n        if (extras.statusIntervals) {\n          if ((ts.lastValue.timestamp) > new Date().getTime() - this.ignoreStatusIntervalIfBeforeDuration) {\n            const interval = this.statusIntervalResolver.getMatchingInterval(ts.lastValue.value, extras.statusIntervals);\n            if (interval) {\n              coloredMarker = this.createColoredMarker(ts, interval.color);\n            }\n          }\n        }\n        if (!coloredMarker) {\n          coloredMarker = this.createDefaultColoredMarker(ts);\n        }\n        observer.next(coloredMarker);\n        observer.complete();\n      });\n    });\n  }\n\n  private createColoredMarker(ts: Timeseries, color: string): Layer {\n    return this.createFilledMarker(ts, color, 10);\n  }\n\n  private createDefaultColoredMarker(ts: Timeseries): Layer {\n    return this.createFilledMarker(ts, '#000', 10);\n  }\n\n  private createFilledMarker(ts: Timeseries, color: string, radius: number): Layer {\n    let geometry: Layer;\n    if (ts.station.geometry.type === 'Point') {\n      const point = ts.station.geometry as GeoJSON.Point;\n      geometry = circleMarker([point.coordinates[1], point.coordinates[0]], {\n        color: '#000',\n        fillColor: color,\n        fillOpacity: 0.8,\n        radius: 10,\n        weight: 2\n      });\n    } else {\n      geometry = geoJSON(ts.station.geometry, {\n        style: (feature) => {\n          return {\n            color: '#000',\n            fillColor: color,\n            fillOpacity: 0.8,\n            weight: 2\n          };\n        }\n      });\n    }\n    if (geometry) {\n      geometry.on('click', () => this.onSelected.emit(ts));\n      return geometry;\n    }\n  }\n\n  private createLabeledMarker(ts: Timeseries): Observable<Layer> {\n    return new Observable<Layer>(observer => {\n      const icon = this.lastValueLabelGenerator.createIconLabel(ts);\n      if (ts.station.geometry.type === 'Point') {\n        const point = ts.station.geometry as GeoJSON.Point;\n        observer.next(marker([point.coordinates[1], point.coordinates[0]], { icon }));\n        observer.complete();\n      }\n    });\n  }\n\n}\n","import 'leaflet.markercluster';\n\nimport { AfterViewInit, ChangeDetectorRef, Component, Input, KeyValueDiffers, OnChanges } from '@angular/core';\nimport { DatasetApiInterface, HasLoadableContent, Mixin, Platform } from '@helgoland/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\n\n@Component({\n    selector: 'n52-platform-map-selector',\n    template: `<div class=\"map-wrapper\" style=\"height: 100%;\">\n  <div [attr.id]=\"mapId\" class=\"map-viewer\"></div>\n</div>\n`,\n    styles: [`:host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}`]\n})\n@Mixin([HasLoadableContent])\nexport class PlatformMapSelectorComponent extends MapSelectorComponent<Platform> implements OnChanges, AfterViewInit {\n\n    @Input()\n    public cluster: boolean;\n\n    private markerFeatureGroup: L.FeatureGroup;\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected mapCache: MapCache,\n        protected cd: ChangeDetectorRef,\n        protected differs: KeyValueDiffers\n    ) {\n        super(mapCache, differs, cd);\n    }\n\n    protected drawGeometries() {\n        this.isContentLoading(true);\n        if (this.map && this.markerFeatureGroup) { this.map.removeLayer(this.markerFeatureGroup); }\n        this.apiInterface.getPlatforms(this.serviceUrl, this.filter)\n            .subscribe((res) => {\n                if (this.map) {\n                    if (this.cluster) {\n                        this.markerFeatureGroup = L.markerClusterGroup({ animate: true });\n                    } else {\n                        this.markerFeatureGroup = L.featureGroup();\n                    }\n                    if (res instanceof Array && res.length > 0) {\n                        res.forEach((entry) => {\n                            const marker = L.marker([entry.geometry.coordinates[1], entry.geometry.coordinates[0]]);\n                            marker.on('click', () => {\n                                this.onSelected.emit(entry);\n                            });\n                            this.markerFeatureGroup.addLayer(marker);\n                        });\n                        this.markerFeatureGroup.addTo(this.map);\n                        this.zoomToMarkerBounds(this.markerFeatureGroup.getBounds());\n                    } else {\n                        this.onNoResultsFound.emit(true);\n                    }\n                    this.map.invalidateSize();\n                    this.isContentLoading(false);\n                }\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Timeseries } from '@helgoland/core';\nimport * as L from 'leaflet';\nimport moment from 'moment';\n\nimport { LastValueLabelGenerator } from './last-value-label-generator.interface';\n\n@Injectable()\nexport class LastValueLabelGeneratorService extends LastValueLabelGenerator {\n\n  constructor() {\n    super();\n  }\n\n  public createIconLabel(ts: Timeseries) {\n    const date = moment(ts.lastValue.timestamp).fromNow();\n    return L.divIcon({\n      className: 'last-value-container',\n      html: `<span class=\"last-value-label\">${ts.lastValue.value}&nbsp;${ts.uom}</span><br><span class=\"last-value-date\">${date}</span>`\n    });\n  }\n\n}\n","import 'leaflet.markercluster';\nimport 'rxjs/add/observable/forkJoin';\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    KeyValueDiffers,\n    OnChanges,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    HasLoadableContent,\n    Mixin,\n    ParameterFilter,\n    Station,\n    StatusIntervalResolverService,\n    Timeseries,\n    TimeseriesExtras,\n} from '@helgoland/core';\nimport GeoJSON from 'geojson';\nimport * as L from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\nimport { Layer } from 'leaflet';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n    selector: 'n52-station-map-selector',\n    template: `<div class=\"map-wrapper\" style=\"height: 100%;\">\n  <div [attr.id]=\"mapId\" class=\"map-viewer\"></div>\n</div>\n`,\n    styles: [`:host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}`]\n})\n@Mixin([HasLoadableContent])\nexport class StationMapSelectorComponent extends MapSelectorComponent<Station> implements OnChanges, AfterViewInit {\n\n    @Input()\n    public cluster: boolean;\n\n    @Input()\n    public statusIntervals: boolean;\n\n    /**\n     * Ignores all Statusintervals where the timestamp is before a given duration in milliseconds and draws instead the default marker.\n     */\n    @Input()\n    public ignoreStatusIntervalIfBeforeDuration = Infinity;\n\n    private markerFeatureGroup: L.FeatureGroup;\n\n    constructor(\n        protected statusIntervalResolver: StatusIntervalResolverService,\n        protected apiInterface: DatasetApiInterface,\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers,\n        protected cd: ChangeDetectorRef\n    ) {\n        super(mapCache, differs, cd);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (this.map && changes.statusIntervals) { this.drawGeometries(); }\n    }\n\n    protected drawGeometries() {\n        this.isContentLoading(true);\n        if (this.map && this.markerFeatureGroup) { this.map.removeLayer(this.markerFeatureGroup); }\n        if (this.statusIntervals && this.filter && this.filter.phenomenon) {\n            this.createValuedMarkers();\n        } else {\n            this.createStationGeometries();\n        }\n    }\n\n    private createValuedMarkers() {\n        const tempFilter: ParameterFilter = {\n            phenomenon: this.filter.phenomenon,\n            expanded: true\n        };\n        this.apiInterface.getTimeseries(this.serviceUrl, tempFilter).subscribe((timeseries: Timeseries[]) => {\n            this.markerFeatureGroup = L.featureGroup();\n            const obsList: Array<Observable<TimeseriesExtras>> = [];\n            timeseries.forEach((ts: Timeseries) => {\n                const obs = this.apiInterface.getTimeseriesExtras(ts.id, this.serviceUrl);\n                obsList.push(obs);\n                obs.subscribe((extras: TimeseriesExtras) => {\n                    let marker;\n                    if (extras.statusIntervals) {\n                        if ((ts.lastValue.timestamp) > new Date().getTime() - this.ignoreStatusIntervalIfBeforeDuration) {\n                            const interval = this.statusIntervalResolver.getMatchingInterval(ts.lastValue.value, extras.statusIntervals);\n                            if (interval) { marker = this.createColoredMarker(ts.station, interval.color); }\n                        }\n                    }\n                    if (!marker) { marker = this.createDefaultColoredMarker(ts.station); }\n                    marker.on('click', () => {\n                        this.onSelected.emit(ts.station);\n                    });\n                    this.markerFeatureGroup.addLayer(marker);\n                });\n            });\n\n            forkJoin(obsList).subscribe(() => {\n                this.zoomToMarkerBounds(this.markerFeatureGroup.getBounds());\n                if (this.map) { this.map.invalidateSize(); }\n                this.isContentLoading(false);\n            });\n\n            if (this.map) { this.markerFeatureGroup.addTo(this.map); }\n        });\n    }\n\n    private createColoredMarker(station: Station, color: string): Layer {\n        if (this.markerSelectorGenerator.createFilledMarker) {\n            return this.markerSelectorGenerator.createFilledMarker(station, color);\n        }\n        return this.createFilledMarker(station, color, 10);\n    }\n\n    private createDefaultColoredMarker(station: Station): Layer {\n        if (this.markerSelectorGenerator.createDefaultFilledMarker) {\n            return this.markerSelectorGenerator.createDefaultFilledMarker(station);\n        }\n        return this.createFilledMarker(station, '#000', 10);\n    }\n\n    private createFilledMarker(station: Station, color: string, radius: number): Layer {\n        let geometry: Layer;\n        if (station.geometry.type === 'Point') {\n            const point = station.geometry as GeoJSON.Point;\n            geometry = L.circleMarker([point.coordinates[1], point.coordinates[0]], {\n                color: '#000',\n                fillColor: color,\n                fillOpacity: 0.8,\n                radius: 10,\n                weight: 2\n            });\n        } else {\n            geometry = L.geoJSON(station.geometry, {\n                style: (feature) => {\n                    return {\n                        color: '#000',\n                        fillColor: color,\n                        fillOpacity: 0.8,\n                        weight: 2\n                    };\n                }\n            });\n        }\n        if (geometry) {\n            geometry.on('click', () => {\n                this.onSelected.emit(station);\n            });\n            return geometry;\n        }\n    }\n\n    private createStationGeometries() {\n        this.apiInterface.getStations(this.serviceUrl, this.filter)\n            .subscribe((res) => {\n                if (this.cluster) {\n                    this.markerFeatureGroup = L.markerClusterGroup({ animate: true });\n                } else {\n                    this.markerFeatureGroup = L.featureGroup();\n                }\n                if (res instanceof Array && res.length > 0) {\n                    res.forEach((entry) => {\n                        const marker = this.createDefaultGeometry(entry);\n                        if (marker) { this.markerFeatureGroup.addLayer(marker); }\n                    });\n                    this.markerFeatureGroup.addTo(this.map);\n                    this.zoomToMarkerBounds(this.markerFeatureGroup.getBounds());\n                } else {\n                    this.onNoResultsFound.emit(true);\n                }\n                this.map.invalidateSize();\n                this.isContentLoading(false);\n            });\n    }\n\n    private createDefaultGeometry(station: Station): Layer {\n        if (this.markerSelectorGenerator && this.markerSelectorGenerator.createDefaultGeometry) {\n            return this.markerSelectorGenerator.createDefaultGeometry(station);\n        }\n        if (station.geometry) {\n            const geometry = L.geoJSON(station.geometry);\n            geometry.on('click', () => this.onSelected.emit(station));\n            return geometry;\n        } else {\n            console.error(station.id + ' has no geometry');\n        }\n    }\n}\n","import 'leaflet.markercluster';\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    KeyValueDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    HasLoadableContent,\n    IDataset,\n    LocatedProfileDataEntry,\n    Mixin,\n    Timespan,\n} from '@helgoland/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\nimport { TrajectoryResult } from '../model/trajectory-result';\n\n@Component({\n    selector: 'n52-profile-trajectory-map-selector',\n    template: `<div class=\"map-wrapper\" style=\"height: 100%;\">\n  <div [attr.id]=\"mapId\" class=\"map-viewer\"></div>\n</div>\n`,\n    styles: [`:host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}`]\n})\n@Mixin([HasLoadableContent])\nexport class ProfileTrajectoryMapSelectorComponent\n    extends MapSelectorComponent<TrajectoryResult>\n    implements OnChanges, AfterViewInit {\n\n    @Input()\n    public selectedTimespan: Timespan;\n\n    @Output()\n    public onTimeListDetermined: EventEmitter<number[]> = new EventEmitter();\n\n    private layer: L.FeatureGroup;\n    private data: LocatedProfileDataEntry[];\n    private dataset: IDataset;\n\n    private defaultStyle: L.PathOptions = {\n        color: 'red',\n        weight: 5,\n        opacity: 0.65\n    };\n\n    private highlightStyle: L.PathOptions = {\n        color: 'blue',\n        weight: 7,\n        opacity: 1\n    };\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers,\n        protected cd: ChangeDetectorRef\n    ) {\n        super(mapCache, differs, cd);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selectedTimespan && this.selectedTimespan && this.map) {\n            this.clearMap();\n            this.initLayer();\n            this.data.forEach((entry) => {\n                if (this.selectedTimespan.from <= entry.timestamp && entry.timestamp <= this.selectedTimespan.to) {\n                    this.layer.addLayer(this.createGeoJson(entry, this.dataset));\n                }\n            });\n            this.layer.addTo(this.map);\n        }\n    }\n\n    protected drawGeometries() {\n        this.isContentLoading(true);\n        this.apiInterface.getDatasets(this.serviceUrl, this.filter).subscribe((datasets) => {\n            datasets.forEach((dataset) => {\n                this.dataset = dataset;\n                const timespan = new Timespan(dataset.firstValue.timestamp, dataset.lastValue.timestamp);\n                this.apiInterface.getData<LocatedProfileDataEntry>(dataset.id, this.serviceUrl, timespan)\n                    .subscribe((data) => {\n                        if (this.map && data.values instanceof Array) {\n                            this.initLayer();\n                            this.data = [];\n                            const timelist: number[] = [];\n                            data.values.forEach((entry) => {\n                                this.data.push(entry);\n                                const geojson = this.createGeoJson(entry, dataset);\n                                timelist.push(entry.timestamp);\n                                this.layer.addLayer(geojson);\n                            });\n                            this.onTimeListDetermined.emit(timelist);\n                            this.layer.addTo(this.map);\n                            this.zoomToMarkerBounds(this.layer.getBounds());\n                        }\n                        this.isContentLoading(false);\n                    });\n            });\n        });\n    }\n\n    private initLayer() {\n        this.layer = L.markerClusterGroup({ animate: false });\n    }\n\n    private clearMap() {\n        if (this.map && this.layer) {\n            this.map.removeLayer(this.layer);\n        }\n    }\n\n    private createGeoJson(profileDataEntry: LocatedProfileDataEntry, dataset: IDataset): L.GeoJSON {\n        const geojson = new L.GeoJSON(profileDataEntry.geometry);\n        geojson.setStyle(this.defaultStyle);\n        geojson.on('click', () => {\n            this.onSelected.emit({\n                dataset,\n                data: profileDataEntry\n            });\n        });\n        geojson.on('mouseover', () => {\n            geojson.setStyle(this.highlightStyle);\n            geojson.bringToFront();\n        });\n        geojson.on('mouseout', () => {\n            geojson.setStyle(this.defaultStyle);\n        });\n        return geojson;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { LastValueMapSelectorComponent } from './last-value-map-selector/last-value-map-selector.component';\nimport { PlatformMapSelectorComponent } from './platform-map-selector/platform-map-selector.component';\nimport { LastValueLabelGenerator } from './services/last-value-label-generator.interface';\nimport { LastValueLabelGeneratorService } from './services/last-value-label-generator.service';\nimport { StationMapSelectorComponent } from './station-map-selector/station-map-selector.component';\nimport { ProfileTrajectoryMapSelectorComponent } from './trajectory-map-selector/trajectory-map-selector.component';\n\nconst COMPONENTS = [\n    PlatformMapSelectorComponent,\n    StationMapSelectorComponent,\n    ProfileTrajectoryMapSelectorComponent,\n    LastValueMapSelectorComponent\n];\n\nexport interface HelgolandMapSelectorModuleConfig {\n    lastValueLabelGeneratorService: Type<LastValueLabelGenerator>;\n}\n\n@NgModule({\n    declarations: [\n        COMPONENTS\n    ],\n    imports: [\n        CommonModule,\n        HelgolandCoreModule,\n        HelgolandMapModule\n    ],\n    exports: [\n        COMPONENTS\n    ],\n    providers: [\n        { provide: LastValueLabelGenerator, useClass: LastValueLabelGeneratorService }\n    ]\n})\nexport class HelgolandMapSelectorModule {\n    static forRoot(config?: HelgolandMapSelectorModuleConfig): ModuleWithProviders {\n        return {\n            ngModule: HelgolandMapSelectorModule,\n            providers: [\n                { provide: LastValueLabelGenerator, useClass: config && config.lastValueLabelGeneratorService || LastValueLabelGeneratorService }\n            ]\n        };\n    }\n}\n"],"names":["map","Injectable","NgModule","EventEmitter","L.map","L.tileLayer","L.control","Input","Output","http","HttpParams","HttpService","tslib_1.__extends","GeoJSON","L.geoJSON","L.circleMarker","Component","KeyValueDiffers","L.marker","L.Marker","COMPONENTS","CommonModule","FormsModule","HelgolandCoreModule","featureGroup","switchMap","tap","forkJoin","Observable","circleMarker","geoJSON","marker","ChangeDetectorRef","DatasetApiInterface","StatusIntervalResolverService","Mixin","HasLoadableContent","L.markerClusterGroup","L.featureGroup","L.divIcon","Timespan","L.GeoJSON"],"mappings":"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"}
