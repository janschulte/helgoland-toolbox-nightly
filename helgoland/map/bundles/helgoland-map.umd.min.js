!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("leaflet"),require("rxjs/add/operator/map"),require("@angular/common/http"),require("@helgoland/core"),require("@angular/common"),require("@angular/forms"),require("rxjs"),require("rxjs/operators"),require("leaflet.markercluster"),require("moment"),require("rxjs/add/observable/forkJoin")):"function"==typeof define&&define.amd?define("@helgoland/map",["exports","@angular/core","leaflet","rxjs/add/operator/map","@angular/common/http","@helgoland/core","@angular/common","@angular/forms","rxjs","rxjs/operators","leaflet.markercluster","moment","rxjs/add/observable/forkJoin"],t):t((e.helgoland=e.helgoland||{},e.helgoland.map={}),e.ng.core,null,e.rxjs["add/operator/map"],e.ng.common.http,null,e.ng.common,e.ng.forms,e.rxjs,e.rxjs.operators,null,null)}(this,function(e,p,l,t,o,r,a,n,c,i,s,u){"use strict";u=u&&u.hasOwnProperty("default")?u["default"]:u;var h=function(){function e(){this.mapCache=new Map}return e.prototype.getMap=function(e){return this.mapCache.get(e)},e.prototype.setMap=function(e,t){this.mapCache.set(e,t)},e.prototype.hasMap=function(e){return this.mapCache.has(e)},e.prototype.deleteMap=function(e){return this.mapCache["delete"](e)},e.decorators=[{type:p.Injectable}],e}(),d=[],m=function(){function e(){}return e.decorators=[{type:p.NgModule,args:[{declarations:[d],imports:[],exports:[d],providers:[h]}]}],e}(),f=function(){function e(e,t){this.mapCache=e,this.differs=t,this.mapInitialized=new p.EventEmitter,this.oldOverlayLayer={},this.oldBaseLayer={},this._differOverlayMaps=this.differs.find({}).create(),this._differBaseMaps=this.differs.find({}).create()}return e.prototype.ngOnInit=function(){this.mapId!==undefined&&null!==this.mapId||(this.mapId=this.generateUUID())},e.prototype.ngOnChanges=function(e){this.map&&(e.fitBounds&&this.map.fitBounds(this.fitBounds),e.zoomControlOptions&&this.updateZoomControl())},e.prototype.ngDoCheck=function(){var e,t=this;this._differOverlayMaps&&((e=this._differOverlayMaps.diff(this.overlayMaps))&&(e.forEachRemovedItem(function(e){return t.removeOverlayMap(e.previousValue)}),e.forEachAddedItem(function(e){return t.addOverlayMap(e.currentValue)}),this.updateLayerControl()));this._differBaseMaps&&((e=this._differBaseMaps.diff(this.baseMaps))&&(e.forEachRemovedItem(function(e){return t.removeBaseMap(e.previousValue)}),e.forEachAddedItem(function(e){return t.addBaseMap(e.currentValue)}),this.updateLayerControl()))},e.prototype.ngOnDestroy=function(){this.map.remove(),this.map=null,this.mapCache.deleteMap(this.mapId)},e.prototype.createMap=function(){var r=this;this.mapOptions&&!this.zoomControlOptions||(this.mapOptions={zoomControl:!1}),this.map=l.map(this.mapId,this.mapOptions),this.mapCache.setMap(this.mapId,this.map),this.mapInitialized.emit(this.mapId),this.baseMaps&&0<this.baseMaps.size?this.baseMaps.forEach(function(e,t){return r.addBaseMap(e)}):this.addBaseMap(),this.overlayMaps&&this.overlayMaps.forEach(function(e,t){return r.addOverlayMap(e)}),this.updateZoomControl(),this.updateLayerControl(),this.fitBounds&&this.map.fitBounds(this.fitBounds)},e.prototype.generateUUID=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},e.prototype.addOverlayMap=function(e){this.map&&(this.oldOverlayLayer.hasOwnProperty[e.label]||(this.oldOverlayLayer[e.label]=e.layer,e.visible&&e.layer.addTo(this.map)))},e.prototype.removeOverlayMap=function(e){this.map&&this.oldOverlayLayer.hasOwnProperty(e.label)&&(this.map.removeLayer(this.oldOverlayLayer[e.label]),delete this.oldOverlayLayer[e.label])},e.prototype.addBaseMap=function(e){this.map&&(this.baseMaps&&0!==this.baseMaps.size||(e={label:"BaseLayer",visible:!0,layer:l.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'})}),this.oldBaseLayer.hasOwnProperty[e.label]||(this.oldBaseLayer[e.label]=e.layer,e.visible&&e.layer.addTo(this.map)))},e.prototype.removeBaseMap=function(e){this.map&&this.oldBaseLayer.hasOwnProperty(e.label)&&(this.map.removeLayer(this.oldBaseLayer[e.label]),delete this.oldBaseLayer[e.label])},e.prototype.updateLayerControl=function(){this.map&&(this.layerControl&&this.map.removeControl(this.layerControl),this.layerControlOptions&&(1<Object.keys(this.oldBaseLayer).length||0<Object.keys(this.oldOverlayLayer).length)&&(this.layerControl=l.control.layers(this.oldBaseLayer,this.oldOverlayLayer,this.layerControlOptions).addTo(this.map)))},e.prototype.updateZoomControl=function(){this.zoomControl&&this.map.removeControl(this.zoomControl),this.zoomControlOptions&&(this.zoomControl=l.control.zoom(this.zoomControlOptions).addTo(this.map))},e.propDecorators={mapId:[{type:p.Input}],mapOptions:[{type:p.Input}],fitBounds:[{type:p.Input}],overlayMaps:[{type:p.Input}],baseMaps:[{type:p.Input}],layerControlOptions:[{type:p.Input}],zoomControlOptions:[{type:p.Input}],mapInitialized:[{type:p.Output}]},e}(),y=function(){},g=function(){function e(e){this.http=e,this.serviceUrl="https://nominatim.openstreetmap.org/"}return e.prototype.searchTerm=function(e,t){void 0===t&&(t={});var r=new o.HttpParams;return r=(r=(r=r.set("q",e)).set("format","json")).set("limit","1"),t.countrycodes&&(r=r.set("countrycodes",t.countrycodes.join(","))),null!==t.addressdetails&&(r=r.set("addressdetails",t.addressdetails?"1":"0")),null!==t.asPointGeometry&&(r=r.set("polygon_geojson",t.asPointGeometry?"0":"1")),t.acceptLanguage&&(r=r.set("accept-language",t.acceptLanguage)),this.http.client().get(this.serviceUrl+"search",{params:r}).map(function(e){if(1===e.length){var t=e[0],r={name:t.display_name,geometry:t.geojson?t.geojson:{type:"Point",coordinates:[parseFloat(t.lon),parseFloat(t.lat)]}};return t.boundingbox&&(r.bounds=[[t.boundingbox[0],t.boundingbox[2]],[t.boundingbox[1],t.boundingbox[3]]]),t.address&&(r.address=t.address),r}})},e.prototype.reverse=function(e,t){void 0===t&&(t={});var r=new o.HttpParams;return r=(r=(r=r.set("lat",e.coordinates[0].toString())).set("lon",e.coordinates[1].toString())).set("format","json"),t&&t.addressdetails!==undefined&&(r=r.set("addressdetails",t.addressdetails?"1":"0")),null!==t.acceptLanguage&&(r=r.set("accept-language",t.acceptLanguage)),t&&t.zoom!==undefined&&(r=r.set("zoom",""+t.zoom)),this.http.client().get(this.serviceUrl+"reverse",{params:r}).map(function(e){var t={lat:e.lat,lon:e.lon,displayName:e.display_name,boundingbox:e.boundingbox};return e.address&&(t.address={city:e.address.city,cityDistrict:e.address.city_district,country:e.address.country,countryCode:e.address.country_code,county:e.address.county,houseNumber:e.address.house_number,neighbourhood:e.address.neighbourhood,postcode:e.address.postcode,road:e.address.road,state:e.address.state,stateDistrict:e.address.state_district,suburb:e.address.suburb}),t})},e.decorators=[{type:p.Injectable}],e.ctorParameters=function(){return[{type:r.HttpService}]},e}(),v=function(e,t){return(v=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function b(e,t){function r(){this.constructor=e}v(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function C(e,t,r,o){var a,n=arguments.length,i=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var s=e.length-1;0<=s;s--)(a=e[s])&&(i=(n<3?a(i):3<n?a(t,r,i):a(t,r))||i);return 3<n&&i&&Object.defineProperty(t,r,i),i}function I(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var M=function(r){function e(e){var t=r.call(this)||this;return e&&(t.options=e),t}return b(e,r),e.prototype.getEvents=function(){var t=this;return{moveend:function(e){return t.fetchData(e.target)}}},e.prototype.onAdd=function(e){return r.prototype.onAdd.call(this,e),this.fetchData(e),this},e.prototype.fetchData=function(e){var t=!this.options.showOnMaxZoom||e.getZoom()<=this.options.showOnMaxZoom;(!this.options.showOnMinZoom||e.getZoom()>=this.options.showOnMinZoom)&&t?this.loadData(e.getBounds()):this.clearLayers()},e.prototype.loadData=function(e){var t=this,r=[e.getWest(),e.getSouth(),e.getEast(),e.getNorth()].join(",");this.options.httpClient.get(this.options.url,{params:{bbox:r}}).subscribe(function(e){t.clearLayers(),t.addData(e)})},e}(l.GeoJSON),k=function(o){function e(e,t){var r=o.call(this,e,t)||this;return r.mapCache=e,r.differs=t,r.defaultStyle={color:"red",weight:5,opacity:.65},r.highlightStyle={color:"blue",weight:10,opacity:1},r}return b(e,o),e.prototype.ngAfterViewInit=function(){this.createMap(),this.drawGeometry(),this.showHighlight()},e.prototype.ngOnChanges=function(e){o.prototype.ngOnChanges.call(this,e),this.map&&(e.highlight&&e.highlight.currentValue&&this.showHighlight(),e.geometry&&this.drawGeometry(),e.zoomTo&&this.zoomToGeometry())},e.prototype.zoomToGeometry=function(){var e=l.geoJSON(this.zoomTo);this.map.fitBounds(e.getBounds())},e.prototype.showHighlight=function(){var r=this;this.highlightGeometry&&this.map.removeLayer(this.highlightGeometry),this.highlightGeometry=l.geoJSON(this.highlight,{pointToLayer:function(e,t){return l.circleMarker(t,r.highlightStyle)}}),this.highlightGeometry.setStyle(this.highlightStyle),this.highlightGeometry.addTo(this.map)},e.prototype.drawGeometry=function(){var r=this;if(this.geometry){var e=l.geoJSON(this.geometry,{pointToLayer:function(e,t){return l.circleMarker(t,r.defaultStyle)}});e.setStyle(this.defaultStyle),e.addTo(this.map),this.avoidZoomToGeometry||this.map.fitBounds(e.getBounds())}},e.decorators=[{type:p.Component,args:[{selector:"n52-geometry-map-viewer",template:'<div [attr.id]="mapId" class="map-viewer"></div>\n',styles:[":host{height:100%;width:100%}:host .map-viewer{height:100%;width:100%}"]}]}],e.ctorParameters=function(){return[{type:h},{type:p.KeyValueDiffers}]},e.propDecorators={highlight:[{type:p.Input}],geometry:[{type:p.Input}],zoomTo:[{type:p.Input}],avoidZoomToGeometry:[{type:p.Input}]},e}(f),S=function(){function e(){}return e.decorators=[{type:p.NgModule,args:[{declarations:[k],imports:[m],exports:[k],providers:[]}]}],e}(),O=function(){function e(e){this.mapCache=e}return e.prototype.zoomToExtent=function(){this.mapCache.getMap(this.mapId).fitBounds(this.extent)},e.decorators=[{type:p.Component,args:[{selector:"n52-extent-control",template:'<div>\n  <button type="button" (click)="zoomToExtent()">zoom to extent</button>\n</div>\n'}]}],e.ctorParameters=function(){return[{type:h}]},e.propDecorators={mapId:[{type:p.Input}],extent:[{type:p.Input}]},e}(),G=function(){function e(e,t){this.mapCache=e,this.geosearch=t,this.onResultChanged=new p.EventEmitter,this.onSearchTriggered=new p.EventEmitter}return e.prototype.triggerSearch=function(){var t=this;this.onSearchTriggered.emit(),this.removeOldGeometry(),this.searchTerm&&(this.loading=!0,this.geosearch.searchTerm(this.searchTerm,this.options).subscribe(function(e){e?(t.onResultChanged.emit(e),t.result=e,t.mapId&&(t.resultGeometry=l.geoJSON(e.geometry).addTo(t.mapCache.getMap(t.mapId)),e.bounds?t.mapCache.getMap(t.mapId).fitBounds(e.bounds):t.mapCache.getMap(t.mapId).fitBounds(t.resultGeometry.getBounds()))):t.searchTerm=""},function(e){return t.searchTerm="error occurred"},function(){t.loading=!1}))},e.prototype.clearSearch=function(){this.searchTerm="",this.onResultChanged.emit(null),this.removeOldGeometry()},e.prototype.removeOldGeometry=function(){this.resultGeometry&&this.resultGeometry.remove()},e.decorators=[{type:p.Component,args:[{selector:"n52-geosearch-control",template:'<div>\n  <input [(ngModel)]="searchTerm" (keyup.enter)="triggerSearch()">\n  <span *ngIf="loading">loading...</span>\n  <button type="button" class="btn btn-light btn-sm" (click)="clearSearch()">X</button>\n</div>\n'}]}],e.ctorParameters=function(){return[{type:h},{type:y}]},e.propDecorators={mapId:[{type:p.Input}],options:[{type:p.Input}],onResultChanged:[{type:p.Output}],onSearchTriggered:[{type:p.Output}]},e}(),w="locationfound",L="located",D=function(){function e(e){this.mapCache=e}return e.prototype.startLocate=function(e){var t=this,r=this.mapCache.getMap(e);r.on(w,function(e){t.removeMarker(r),l.marker(e.latlng).addTo(r).options.title=L}),r.on("locationerror",function(e){console.error(e)}),r.locate({watch:!0,setView:!0,timeout:3e4})},e.prototype.stopLocate=function(e){var t=this.mapCache.getMap(e);t.stopLocate(),t.off(w),this.removeMarker(t)},e.prototype.removeMarker=function(t){t.eachLayer(function(e){e instanceof l.Marker&&e.options.title===L&&t.removeLayer(e)})},e.decorators=[{type:p.Injectable}],e.ctorParameters=function(){return[{type:h}]},e}(),x=function(){function e(e){this.locateService=e,this.isToggled=!1}return e.prototype.locateUser=function(){this.isToggled=!this.isToggled,this.isToggled?this.locateService.startLocate(this.mapId):this.locateService.stopLocate(this.mapId)},e.decorators=[{type:p.Component,args:[{selector:"n52-locate-control",template:'<div class="btn-group-vertical btn-group-sm map-control">\n  <button type="button" class="btn btn-sm" (click)="locateUser()" [ngClass]="isToggled ? \'btn-primary\': \'btn-light\'">\n    locate\n  </button>\n</div>\n',styles:[":host i{width:11px}"]}]}],e.ctorParameters=function(){return[{type:D}]},e.propDecorators={mapId:[{type:p.Input}]},e}(),T=function(){function e(e){this.mapCache=e}return e.prototype.zoomIn=function(){this.mapCache.getMap(this.mapId).zoomIn()},e.prototype.zoomOut=function(){this.mapCache.getMap(this.mapId).zoomOut()},e.decorators=[{type:p.Component,args:[{selector:"n52-zoom-control",template:'<div class="btn-group-vertical map-control">\n  <button type="button" class="btn btn-light btn-sm" (click)="zoomIn()">\n    <i class="fa fa-plus" aria-hidden="true"></i>\n  </button>\n  <button type="button" class="btn btn-light btn-sm" (click)="zoomOut()">\n    <i class="fa fa-minus" aria-hidden="true"></i>\n  </button>\n</div>\n'}]}],e.ctorParameters=function(){return[{type:h}]},e.propDecorators={mapId:[{type:p.Input}]},e}(),B=[x,T,G,O],z=function(){function e(){}return e.decorators=[{type:p.NgModule,args:[{declarations:[B],imports:[a.CommonModule,n.FormsModule,r.HelgolandCoreModule,m],exports:[B],providers:[D]}]}],e}(),V=function(a){function e(e,t,r){var o=a.call(this,e,t)||this;return o.mapCache=e,o.differs=t,o.cd=r,o.onSelected=new p.EventEmitter,o.onContentLoading=new p.EventEmitter,o.onNoResultsFound=new p.EventEmitter,o}return b(e,a),e.prototype.ngAfterViewInit=function(){var e=this;this.createMap(),setTimeout(function(){e.drawGeometries(),e.cd.detectChanges()},10)},e.prototype.ngOnChanges=function(e){a.prototype.ngOnChanges.call(this,e),this.map&&(e.serviceUrl||e.filter||e.cluster)&&this.drawGeometries()},e.prototype.zoomToMarkerBounds=function(e){this.avoidZoomToSelection||this.map.fitBounds(e,this.fitBoundsMarkerOptions||{})},e.propDecorators={serviceUrl:[{type:p.Input}],filter:[{type:p.Input}],avoidZoomToSelection:[{type:p.Input}],markerSelectorGenerator:[{type:p.Input}],onSelected:[{type:p.Output}],onContentLoading:[{type:p.Output}],fitBoundsMarkerOptions:[{type:p.Input}],onNoResultsFound:[{type:p.Output}]},e}(f),F=function(){},P=function(s){function e(e,t,r,o,a,n){var i=s.call(this,e,t,r)||this;return i.mapCache=e,i.differs=t,i.cd=r,i.apiInterface=o,i.lastValueLabelGenerator=a,i.statusIntervalResolver=n,i.lastValuePresentation=0,i.ignoreStatusIntervalIfBeforeDuration=Infinity,i}return b(e,s),e.prototype.drawGeometries=function(){this.isContentLoading(!0),this.lastValueSeriesIDs&&this.lastValueSeriesIDs.length&&this.createMarkersBySeriesIDs()},e.prototype.createMarkersBySeriesIDs=function(){var r=this;this.markerFeatureGroup=l.featureGroup();var o=[];this.lastValueSeriesIDs.forEach(function(e){var t=r.apiInterface.getSingleTimeseriesByInternalId(e);o.push(t.pipe(i.switchMap(function(t){return r.createMarker(t).pipe(i.tap(function(e){r.markerFeatureGroup.addLayer(e),e.on("click",function(){return r.onSelected.emit(t)})}))})))}),this.finalizeMarkerObservables(o)},e.prototype.createMarker=function(e){switch(this.lastValuePresentation){case 0:return this.createColorizedMarker(e);case 1:return this.createLabeledMarker(e)}return this.createColorizedMarker(e)},e.prototype.finalizeMarkerObservables=function(e){var t=this;c.forkJoin(e).subscribe(function(){if(console.log("do zoom to bounds"),t.map){var e=t.markerFeatureGroup.getBounds();t.zoomToMarkerBounds(e),t.map.invalidateSize()}t.isContentLoading(!1)}),this.map&&this.markerFeatureGroup.addTo(this.map)},e.prototype.createColorizedMarker=function(a){var n=this;return new c.Observable(function(o){n.apiInterface.getTimeseriesExtras(a.id,a.url).subscribe(function(e){var t;if(e.statusIntervals&&a.lastValue.timestamp>(new Date).getTime()-n.ignoreStatusIntervalIfBeforeDuration){var r=n.statusIntervalResolver.getMatchingInterval(a.lastValue.value,e.statusIntervals);r&&(t=n.createColoredMarker(a,r.color))}t||(t=n.createDefaultColoredMarker(a)),o.next(t),o.complete()})})},e.prototype.createColoredMarker=function(e,t){return this.createFilledMarker(e,t,10)},e.prototype.createDefaultColoredMarker=function(e){return this.createFilledMarker(e,"#000",10)},e.prototype.createFilledMarker=function(e,t,r){var o,a=this;if("Point"===e.station.geometry.type){var n=e.station.geometry;o=l.circleMarker([n.coordinates[1],n.coordinates[0]],{color:"#000",fillColor:t,fillOpacity:.8,radius:10,weight:2})}else o=l.geoJSON(e.station.geometry,{style:function(e){return{color:"#000",fillColor:t,fillOpacity:.8,weight:2}}});if(o)return o.on("click",function(){return a.onSelected.emit(e)}),o},e.prototype.createLabeledMarker=function(o){var a=this;return new c.Observable(function(e){var t=a.lastValueLabelGenerator.createIconLabel(o);if("Point"===o.station.geometry.type){var r=o.station.geometry;e.next(l.marker([r.coordinates[1],r.coordinates[0]],{icon:t})),e.complete()}})},e.decorators=[{type:p.Component,args:[{selector:"n52-last-value-map-selector",template:'<div class="map-wrapper" style="height: 100%;">\n  <div [attr.id]="mapId" class="map-viewer"></div>\n</div>\n',styles:[":host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}"]}]}],e.ctorParameters=function(){return[{type:h},{type:p.KeyValueDiffers},{type:p.ChangeDetectorRef},{type:r.DatasetApiInterface},{type:F},{type:r.StatusIntervalResolverService}]},e.propDecorators={lastValueSeriesIDs:[{type:p.Input}],lastValuePresentation:[{type:p.Input}],ignoreStatusIntervalIfBeforeDuration:[{type:p.Input}]},e=C([r.Mixin([r.HasLoadableContent]),I("design:paramtypes",[h,p.KeyValueDiffers,p.ChangeDetectorRef,r.DatasetApiInterface,F,r.StatusIntervalResolverService])],e)}(V),j=function(n){function e(e,t,r,o){var a=n.call(this,t,o,r)||this;return a.apiInterface=e,a.mapCache=t,a.cd=r,a.differs=o,a}return b(e,n),e.prototype.drawGeometries=function(){var r=this;this.isContentLoading(!0),this.map&&this.markerFeatureGroup&&this.map.removeLayer(this.markerFeatureGroup),this.apiInterface.getPlatforms(this.serviceUrl,this.filter).subscribe(function(e){r.map&&(r.cluster?r.markerFeatureGroup=l.markerClusterGroup({animate:!0}):r.markerFeatureGroup=l.featureGroup(),e instanceof Array&&0<e.length?(e.forEach(function(e){var t=l.marker([e.geometry.coordinates[1],e.geometry.coordinates[0]]);t.on("click",function(){r.onSelected.emit(e)}),r.markerFeatureGroup.addLayer(t)}),r.markerFeatureGroup.addTo(r.map),r.zoomToMarkerBounds(r.markerFeatureGroup.getBounds())):r.onNoResultsFound.emit(!0),r.map.invalidateSize(),r.isContentLoading(!1))})},e.decorators=[{type:p.Component,args:[{selector:"n52-platform-map-selector",template:'<div class="map-wrapper" style="height: 100%;">\n  <div [attr.id]="mapId" class="map-viewer"></div>\n</div>\n',styles:[":host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}"]}]}],e.ctorParameters=function(){return[{type:r.DatasetApiInterface},{type:h},{type:p.ChangeDetectorRef},{type:p.KeyValueDiffers}]},e.propDecorators={cluster:[{type:p.Input}]},e=C([r.Mixin([r.HasLoadableContent]),I("design:paramtypes",[r.DatasetApiInterface,h,p.ChangeDetectorRef,p.KeyValueDiffers])],e)}(V),E=function(e){function t(){return e.call(this)||this}return b(t,e),t.prototype.createIconLabel=function(e){var t=u(e.lastValue.timestamp).fromNow();return l.divIcon({className:"last-value-container",html:'<span class="last-value-label">'+e.lastValue.value+"&nbsp;"+e.uom+'</span><br><span class="last-value-date">'+t+"</span>"})},t.decorators=[{type:p.Injectable}],t.ctorParameters=function(){return[]},t}(F),R=function(i){function e(e,t,r,o,a){var n=i.call(this,r,o,a)||this;return n.statusIntervalResolver=e,n.apiInterface=t,n.mapCache=r,n.differs=o,n.cd=a,n.ignoreStatusIntervalIfBeforeDuration=Infinity,n}return b(e,i),e.prototype.ngOnChanges=function(e){i.prototype.ngOnChanges.call(this,e),this.map&&e.statusIntervals&&this.drawGeometries()},e.prototype.drawGeometries=function(){this.isContentLoading(!0),this.map&&this.markerFeatureGroup&&this.map.removeLayer(this.markerFeatureGroup),this.statusIntervals&&this.filter&&this.filter.phenomenon?this.createValuedMarkers():this.createStationGeometries()},e.prototype.createValuedMarkers=function(){var a=this,e={phenomenon:this.filter.phenomenon,expanded:!0};this.apiInterface.getTimeseries(this.serviceUrl,e).subscribe(function(e){a.markerFeatureGroup=l.featureGroup();var t=[];e.forEach(function(o){var e=a.apiInterface.getTimeseriesExtras(o.id,a.serviceUrl);t.push(e),e.subscribe(function(e){var t;if(e.statusIntervals&&o.lastValue.timestamp>(new Date).getTime()-a.ignoreStatusIntervalIfBeforeDuration){var r=a.statusIntervalResolver.getMatchingInterval(o.lastValue.value,e.statusIntervals);r&&(t=a.createColoredMarker(o.station,r.color))}t||(t=a.createDefaultColoredMarker(o.station)),t.on("click",function(){a.onSelected.emit(o.station)}),a.markerFeatureGroup.addLayer(t)})}),c.forkJoin(t).subscribe(function(){a.zoomToMarkerBounds(a.markerFeatureGroup.getBounds()),a.map&&a.map.invalidateSize(),a.isContentLoading(!1)}),a.map&&a.markerFeatureGroup.addTo(a.map)})},e.prototype.createColoredMarker=function(e,t){return this.markerSelectorGenerator.createFilledMarker?this.markerSelectorGenerator.createFilledMarker(e,t):this.createFilledMarker(e,t,10)},e.prototype.createDefaultColoredMarker=function(e){return this.markerSelectorGenerator.createDefaultFilledMarker?this.markerSelectorGenerator.createDefaultFilledMarker(e):this.createFilledMarker(e,"#000",10)},e.prototype.createFilledMarker=function(e,t,r){var o,a=this;if("Point"===e.geometry.type){var n=e.geometry;o=l.circleMarker([n.coordinates[1],n.coordinates[0]],{color:"#000",fillColor:t,fillOpacity:.8,radius:10,weight:2})}else o=l.geoJSON(e.geometry,{style:function(e){return{color:"#000",fillColor:t,fillOpacity:.8,weight:2}}});if(o)return o.on("click",function(){a.onSelected.emit(e)}),o},e.prototype.createStationGeometries=function(){var r=this;this.apiInterface.getStations(this.serviceUrl,this.filter).subscribe(function(e){r.cluster?r.markerFeatureGroup=l.markerClusterGroup({animate:!0}):r.markerFeatureGroup=l.featureGroup(),e instanceof Array&&0<e.length?(e.forEach(function(e){var t=r.createDefaultGeometry(e);t&&r.markerFeatureGroup.addLayer(t)}),r.markerFeatureGroup.addTo(r.map),r.zoomToMarkerBounds(r.markerFeatureGroup.getBounds())):r.onNoResultsFound.emit(!0),r.map.invalidateSize(),r.isContentLoading(!1)})},e.prototype.createDefaultGeometry=function(e){var t=this;if(this.markerSelectorGenerator&&this.markerSelectorGenerator.createDefaultGeometry)return this.markerSelectorGenerator.createDefaultGeometry(e);if(e.geometry){var r=l.geoJSON(e.geometry);return r.on("click",function(){return t.onSelected.emit(e)}),r}console.error(e.id+" has no geometry")},e.decorators=[{type:p.Component,args:[{selector:"n52-station-map-selector",template:'<div class="map-wrapper" style="height: 100%;">\n  <div [attr.id]="mapId" class="map-viewer"></div>\n</div>\n',styles:[":host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}"]}]}],e.ctorParameters=function(){return[{type:r.StatusIntervalResolverService},{type:r.DatasetApiInterface},{type:h},{type:p.KeyValueDiffers},{type:p.ChangeDetectorRef}]},e.propDecorators={cluster:[{type:p.Input}],statusIntervals:[{type:p.Input}],ignoreStatusIntervalIfBeforeDuration:[{type:p.Input}]},e=C([r.Mixin([r.HasLoadableContent]),I("design:paramtypes",[r.StatusIntervalResolverService,r.DatasetApiInterface,h,p.KeyValueDiffers,p.ChangeDetectorRef])],e)}(V),N=function(n){function e(e,t,r,o){var a=n.call(this,t,r,o)||this;return a.apiInterface=e,a.mapCache=t,a.differs=r,a.cd=o,a.onTimeListDetermined=new p.EventEmitter,a.defaultStyle={color:"red",weight:5,opacity:.65},a.highlightStyle={color:"blue",weight:7,opacity:1},a}return b(e,n),e.prototype.ngOnChanges=function(e){var t=this;n.prototype.ngOnChanges.call(this,e),e.selectedTimespan&&this.selectedTimespan&&this.map&&(this.clearMap(),this.initLayer(),this.data.forEach(function(e){t.selectedTimespan.from<=e.timestamp&&e.timestamp<=t.selectedTimespan.to&&t.layer.addLayer(t.createGeoJson(e,t.dataset))}),this.layer.addTo(this.map))},e.prototype.drawGeometries=function(){var a=this;this.isContentLoading(!0),this.apiInterface.getDatasets(this.serviceUrl,this.filter).subscribe(function(e){e.forEach(function(o){a.dataset=o;var e=new r.Timespan(o.firstValue.timestamp,o.lastValue.timestamp);a.apiInterface.getData(o.id,a.serviceUrl,e).subscribe(function(e){if(a.map&&e.values instanceof Array){a.initLayer(),a.data=[];var r=[];e.values.forEach(function(e){a.data.push(e);var t=a.createGeoJson(e,o);r.push(e.timestamp),a.layer.addLayer(t)}),a.onTimeListDetermined.emit(r),a.layer.addTo(a.map),a.zoomToMarkerBounds(a.layer.getBounds())}a.isContentLoading(!1)})})})},e.prototype.initLayer=function(){this.layer=l.markerClusterGroup({animate:!1})},e.prototype.clearMap=function(){this.map&&this.layer&&this.map.removeLayer(this.layer)},e.prototype.createGeoJson=function(e,t){var r=this,o=new l.GeoJSON(e.geometry);return o.setStyle(this.defaultStyle),o.on("click",function(){r.onSelected.emit({dataset:t,data:e})}),o.on("mouseover",function(){o.setStyle(r.highlightStyle),o.bringToFront()}),o.on("mouseout",function(){o.setStyle(r.defaultStyle)}),o},e.decorators=[{type:p.Component,args:[{selector:"n52-profile-trajectory-map-selector",template:'<div class="map-wrapper" style="height: 100%;">\n  <div [attr.id]="mapId" class="map-viewer"></div>\n</div>\n',styles:[":host{position:relative}:host .map-viewer{width:100%;height:100%}:host .map-notifier{position:absolute;bottom:10px;left:10px;z-index:1001;width:120px;height:70px;padding:5px;opacity:.8;text-align:center}"]}]}],e.ctorParameters=function(){return[{type:r.DatasetApiInterface},{type:h},{type:p.KeyValueDiffers},{type:p.ChangeDetectorRef}]},e.propDecorators={selectedTimespan:[{type:p.Input}],onTimeListDetermined:[{type:p.Output}]},e=C([r.Mixin([r.HasLoadableContent]),I("design:paramtypes",[r.DatasetApiInterface,h,p.KeyValueDiffers,p.ChangeDetectorRef])],e)}(V),_=[j,R,N,P],A=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[{provide:F,useClass:e&&e.lastValueLabelGeneratorService||E}]}},t.decorators=[{type:p.NgModule,args:[{declarations:[_],imports:[a.CommonModule,r.HelgolandCoreModule,m],exports:[_],providers:[{provide:F,useClass:E}]}]}],t}();e.HelgolandMapModule=m,e.MapCache=h,e.CachedMapComponent=f,e.GeoSearch=y,e.NominatimGeoSearchService=g,e.GeoCureGeoJSON=M,e.HelgolandMapViewModule=S,e.GeometryMapViewerComponent=k,e.HelgolandMapControlModule=z,e.ExtentControlComponent=O,e.GeosearchControlComponent=G,e.LocateControlComponent=x,e.LocateService=D,e.ZoomControlComponent=T,e.HelgolandMapSelectorModule=A,e.MapSelectorComponent=V,e.PlatformMapSelectorComponent=j,e.StationMapSelectorComponent=R,e.LastValueMapSelectorComponent=P,e.ProfileTrajectoryMapSelectorComponent=N,e.LastValueLabelGeneratorService=E,e.LastValueLabelGenerator=F,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=helgoland-map.umd.min.js.map