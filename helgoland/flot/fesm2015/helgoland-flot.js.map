{"version":3,"file":"helgoland-flot.js.map","sources":["ng://@helgoland/flot/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts","ng://@helgoland/flot/lib/flot-timeseries-graph/flot-timeseries-graph.component.ts","ng://@helgoland/flot/lib/flot.module.ts"],"sourcesContent":["import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { DatasetOptions, HasLoadableContent, Mixin, Time, TimeInterval, Timespan } from '@helgoland/core';\n\n@Component({\n    selector: 'n52-flot-overview-timeseries-graph',\n    template: `<n52-flot-timeseries-graph [datasetIds]=\"datasetIds\" [timeInterval]=\"overviewTimespan\" [datasetOptions]=\"datasetOptions\"\n  [graphOptions]=\"graphOptions\" (onTimespanChanged)=\"timeChanged($event)\" (onContentLoading)=\"onContentLoading.emit($event)\"></n52-flot-timeseries-graph>\n`,\n    styles: [`:host .flot{height:100%}`]\n})\n@Mixin([HasLoadableContent])\nexport class FlotOverviewTimeseriesGraphComponent implements OnChanges, AfterViewInit, HasLoadableContent {\n\n    @Input()\n    public datasetIds: string[];\n\n    @Input()\n    public datasetOptions: Map<string, DatasetOptions>;\n\n    @Input()\n    public graphOptions: any;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public rangefactor: number;\n\n    @Output()\n    public onTimespanChanged: EventEmitter<Timespan> = new EventEmitter();\n\n    @Output()\n    public onLoading: EventEmitter<boolean> = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter<boolean> = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    public overviewTimespan: Timespan;\n\n    private init = false;\n\n    constructor(\n        protected timeSrvc: Time,\n        protected cd: ChangeDetectorRef\n    ) { }\n\n    public ngAfterViewInit(): void {\n        this.rangefactor = this.rangefactor || 1;\n        this.calculateOverviewRange();\n        this.init = true;\n        this.cd.detectChanges();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.timeInterval && this.init) {\n            this.calculateOverviewRange();\n        }\n    }\n\n    public timeChanged(timespan: Timespan) {\n        this.onTimespanChanged.emit(timespan);\n    }\n\n    private calculateOverviewRange() {\n        const timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n        this.overviewTimespan = this.timeSrvc.getBufferedTimespan(timespan, this.rangefactor);\n        this.graphOptions.selection.range = {\n            from: timespan.from,\n            to: timespan.to\n        };\n    }\n}\n","import 'Flot/jquery.flot.js';\nimport 'Flot/jquery.flot.time.js';\nimport '@helgoland/flot/jquery.flot.navigate.js';\nimport '@helgoland/flot/jquery.flot.selection.js';\nimport '@helgoland/flot/jquery.flot.touch.js';\n\nimport {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    Data,\n    Dataset,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    HasLoadableContent,\n    HttpRequestOptions,\n    IDataset,\n    InternalIdHandler,\n    Mixin,\n    Time,\n    Timeseries,\n    Timespan,\n} from '@helgoland/core';\nimport { LabelMapperService } from '@helgoland/depiction';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { DataSeries } from '../model/dataSeries.js';\nimport { Plot } from '../model/plot.js';\nimport { PlotOptions } from '../model/plotOptions.js';\n\ndeclare var $: any;\n\n@Component({\n    selector: 'n52-flot-timeseries-graph',\n    template: `<div class=\"flot\" #flot></div>\n`,\n    styles: [`n52-flot-timeseries-graph .flot{height:100%}n52-flot-timeseries-graph .axisTarget{cursor:pointer}n52-flot-timeseries-graph .axisLabel{position:absolute;font-size:90%;text-align:center}n52-flot-timeseries-graph .yaxisLabel{top:50%;transform:rotate(-90deg);-o-transform:rotate(-90deg);-ms-transform:rotate(-90deg);-moz-transform:rotate(-90deg);-webkit-transform:rotate(-90deg);z-index:-9999;padding-bottom:8px}n52-flot-timeseries-graph .labelColorMarker{font-size:150%}n52-flot-timeseries-graph .graph-annotation{position:absolute;bottom:40px;right:15px;color:red}`],\n    encapsulation: ViewEncapsulation.None\n})\n@Mixin([HasLoadableContent])\nexport class FlotTimeseriesGraphComponent\n    extends DatasetPresenterComponent<DatasetOptions, PlotOptions>\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter<string> = new EventEmitter();\n\n    @ViewChild('flot')\n    public flotElem: ElementRef;\n\n    private plotarea: any;\n\n    private preparedData: DataSeries[] = Array();\n\n    private plotOptions: PlotOptions = {\n        grid: {\n            autoHighlight: true,\n            hoverable: true\n        },\n        series: {\n            lines: {\n                fill: false,\n                show: true\n            },\n            points: {\n                fill: true,\n                radius: 2,\n                show: false\n            },\n            shadowSize: 1\n        },\n        selection: {\n            mode: null\n        },\n        xaxis: {\n            mode: 'time',\n            timezone: 'browser',\n        },\n        yaxes: [],\n        showReferenceValues: false\n    };\n\n    private datasetMap: Map<string, IDataset> = new Map();\n\n    private lastHightlight: string;\n\n    private loadingCounter = 0;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        protected labelMapper: LabelMapperService,\n        protected translateSrvc: TranslateService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc, translateSrvc);\n    }\n\n    public ngAfterViewInit() {\n        this.plotarea = this.flotElem.nativeElement;\n\n        $(this.plotarea).bind('plotzoom', (evt: any, plot: any) => {\n            const xaxis = plot.getXAxes()[0];\n            this.changeTime(xaxis.min, xaxis.max);\n        });\n\n        // plot pan ended event\n        $(this.plotarea).bind('plotpanEnd', (evt: any, plot: any) => {\n            const xaxis = plot.getXAxes()[0];\n            this.changeTime(xaxis.min, xaxis.max);\n        });\n\n        $(this.plotarea).bind('touchended', (evt: any, plot: any) => {\n            this.changeTime(plot.xaxis.from, plot.xaxis.to);\n        });\n\n        // plot selected event\n        $(this.plotarea).bind('plotselected', (evt: any, ranges: any) => {\n            this.changeTime(ranges.xaxis.from, ranges.xaxis.to);\n        });\n\n        $(this.plotarea).bind('plothover', (evt: any, pos: any, item: any) => {\n            if (item) {\n                this.onHighlight.emit(item.series.internalId);\n                this.showTooltip(evt, pos, item);\n            } else {\n                this.onHighlight.emit('');\n                this.hideTooltip();\n            }\n        });\n\n        this.createTooltip();\n\n        this.plotGraph();\n    }\n\n    protected onLanguageChanged(langChangeEvent: LangChangeEvent): void { }\n\n    public reloadDataForDatasets(datasetIds: string[]): void {\n        console.log('reload data at ' + new Date());\n        this.datasetIds.forEach(id => this.loadData(this.datasetMap.get(id), true));\n    }\n\n    protected graphOptionsChanged(options: PlotOptions) {\n        Object.assign(this.plotOptions, options);\n        this.plotOptions.yaxes = [];\n        this.timeIntervalChanges();\n    }\n\n    protected setSelectedId(internalId: string) {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        tsData.selected = true;\n        tsData.points.radius *= 3;\n        tsData.lines.lineWidth *= 3;\n        tsData.bars.lineWidth *= 3;\n        this.plotGraph();\n    }\n\n    protected removeSelectedId(internalId: string) {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        tsData.selected = false;\n        tsData.points.radius /= 3;\n        tsData.lines.lineWidth /= 3;\n        tsData.bars.lineWidth /= 3;\n        this.plotGraph();\n    }\n\n    protected timeIntervalChanges() {\n        this.datasetMap.forEach((dataset) => {\n            this.loadData(dataset);\n        });\n    }\n\n    protected removeDataset(internalId: string) {\n        this.datasetMap.delete(internalId);\n        this.removePreparedData(internalId);\n        this.plotGraph();\n    }\n\n    protected addDataset(internalId: string, url: string): void {\n        this.api.getSingleTimeseries(internalId, url).subscribe(\n            (timeseries) => this.addLoadedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(internalId, url).subscribe(\n                    (dataset) => this.addLoadedDataset(dataset)\n                );\n            }\n        );\n    }\n\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions): void {\n        if (this.datasetMap.has(internalId)) {\n            this.loadData(this.datasetMap.get(internalId));\n        }\n    }\n\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    private changeTime(from: number, to: number) {\n        this.onTimespanChanged.emit(new Timespan(from, to));\n    }\n\n    private plotGraph() {\n        if (this.preparedData\n            && this.plotarea\n            && this.preparedData.length !== 0\n            && this.plotOptions\n            && this.plotarea.clientHeight > 0) {\n            this.prepareAxisPos();\n            this.plotOptions.xaxis.min = this.timespan.from;\n            this.plotOptions.xaxis.max = this.timespan.to;\n            const plotObj: Plot = $.plot(this.plotarea, this.preparedData, this.plotOptions);\n            this.createPlotAnnotation(this.plotarea, this.plotOptions);\n            this.createYAxis(plotObj);\n            this.setSelection(plotObj, this.plotOptions);\n        } else {\n            if (this.plotarea) {\n                $(this.plotarea).empty();\n            }\n        }\n    }\n\n    private removePreparedData(internalId: string) {\n        // remove from preparedData Array\n        const idx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (idx >= 0) { this.preparedData.splice(idx, 1); }\n        // remove from axis\n        const axisIdx = this.plotOptions.yaxes.findIndex((entry) => {\n            const internalIdIndex = entry.internalIds.indexOf(internalId);\n            if (internalIdIndex > -1) {\n                if (entry.internalIds.length === 1) {\n                    return true;\n                } else {\n                    entry.internalIds.splice(internalIdIndex, 1);\n                    entry.tsColors.splice(internalIdIndex, 1);\n                }\n            }\n            return false;\n        });\n        if (axisIdx > -1) {\n            this.plotOptions.yaxes.splice(axisIdx, 1);\n        }\n    }\n\n    private prepareData(dataset: IDataset, data: Data<[number, number]>): Observable<boolean> {\n        return Observable.create((observer: Observer<boolean>) => {\n            const dataIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n            const selectedIndex = this.selectedDatasetIds.indexOf(dataset.internalId);\n            const styles = this.datasetOptions.get(dataset.internalId);\n            this.createAxisLabel(dataset).subscribe((label) => {\n                let axePos;\n                const axe = this.plotOptions.yaxes.find((yaxisEntry, idx) => {\n                    axePos = idx + 1;\n                    return yaxisEntry.label === label;\n                });\n                if (axe) {\n                    if (axe.internalIds.indexOf(dataset.internalId) < 0) {\n                        axe.internalIds.push(dataset.internalId);\n                        axe.tsColors.push(styles.color);\n                    } else {\n                        axe.tsColors[axe.internalIds.indexOf(dataset.internalId)] = styles.color;\n                    }\n                    axe.min = styles.zeroBasedYAxis ? 0 : null;\n                } else {\n                    this.plotOptions.yaxes.push({\n                        uom: dataset.uom,\n                        label,\n                        tsColors: [styles.color],\n                        internalIds: [dataset.internalId],\n                        min: styles.zeroBasedYAxis ? 0 : null\n                    });\n                    axePos = this.plotOptions.yaxes.length;\n                }\n                const dataEntry: DataSeries = {\n                    internalId: dataset.internalId,\n                    color: styles.color,\n                    data: styles.visible ? data.values : [],\n                    points: {\n                        fillColor: styles.color,\n                        radius: styles.pointRadius,\n                        show: styles.pointRadius > 0 ? true : false\n                    },\n                    lines: {\n                        lineWidth: styles.lineWidth,\n                        show: styles.lineWidth > 0 ? true : false\n                    },\n                    bars: {\n                        lineWidth: 1\n                    }\n                };\n\n                if (selectedIndex >= 0) {\n                    dataEntry.points.radius *= 3;\n                    dataEntry.lines.lineWidth *= 3;\n                    dataEntry.bars.lineWidth *= 3;\n                }\n                if (dataIdx >= 0) {\n                    this.preparedData[dataIdx] = dataEntry;\n                } else {\n                    this.preparedData.push(dataEntry);\n                }\n                this.addReferenceValueData(dataset.internalId, styles, data);\n                observer.next(true);\n            });\n        });\n    }\n\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data<[number, number]>) {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    data: data.referenceValues[refValue.id],\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    private prepareAxisPos() {\n        // remove unused axes\n        this.plotOptions.yaxes = this.plotOptions.yaxes.filter((entry) => entry.internalIds.length !== 0);\n        this.plotOptions.yaxes.forEach((xaxis, idx) => {\n            xaxis.internalIds.forEach((id) => {\n                const temp = this.preparedData.find((dataEntry) => dataEntry.internalId === id);\n                temp.yaxis = idx + 1;\n            });\n        });\n    }\n\n    private createAxisLabel(dataset: IDataset): Observable<string> {\n        return this.labelMapper.getMappedLabel(dataset.parameters.phenomenon.label)\n            .map((label) => label + ' [' + dataset.uom + ']');\n    }\n\n    private setSelection(plot: Plot, options: PlotOptions) {\n        if (plot && options.selection.range) {\n            plot.setSelection({\n                xaxis: {\n                    from: options.selection.range.from,\n                    to: options.selection.range.to\n                }\n            }, true);\n        }\n    }\n\n    private createPlotAnnotation(plotArea: any, options: PlotOptions) {\n        if (options.annotation) {\n            // plotArea.append('<div class=\"graph-annotation\">Daten ohne GewÃ¤hr</div>');\n        }\n    }\n\n    private createYAxis(plot: Plot) {\n        if (plot.getOptions().yaxis.show) {\n            // remove old labels\n            $(plot.getPlaceholder()).find('.yaxisLabel').remove();\n\n            // createYAxis\n            $.each(plot.getAxes(), (i: number, axis: any) => {\n                if (!axis.show) { return; }\n                const box = axis.box;\n                if (axis.direction === 'y') {\n                    $('<div class=\"axisTargetStyle\" style=\"position:absolute; left:'\n                        + box.left + 'px; top:' + box.top + 'px; width:'\n                        + box.width + 'px; height:' + box.height + 'px\"></div>')\n                        .data('axis.n', axis.n)\n                        .appendTo(plot.getPlaceholder());\n                    $('<div class=\"axisTarget\" style=\"position:absolute; left:'\n                        + box.left + 'px; top:' + box.top + 'px; width:'\n                        + box.width + 'px; height:' + box.height + 'px\"></div>')\n                        .data('axis.n', axis.n)\n                        .appendTo(plot.getPlaceholder())\n                        .click((event: any) => {\n                            const target = $(event.currentTarget);\n                            let selected = false;\n                            $.each($('.axisTarget'), (index: number, elem: any) => {\n                                elem = $(elem);\n                                if (target.data('axis.n') === elem.data('axis.n')) {\n                                    selected = elem.hasClass('selected');\n                                    return false; // break loop\n                                }\n                            });\n                            const selections: string[] = [];\n                            $.each(plot.getData(), (index: number, elem: any) => {\n                                if (target.data('axis.n') === elem.yaxis.n) {\n                                    elem.selected = !selected;\n                                    if (elem.selected) {\n                                        selections.push(elem.internalId);\n                                    }\n                                }\n                            });\n                            this.onDatasetSelected.emit(selections);\n                            if (!selected) {\n                                target.addClass('selected');\n                            }\n                            this.plotGraph();\n                        });\n                    if (!axis.options.hideLabel) {\n                        const yaxisLabel = $('<div class=\"axisLabel yaxisLabel\" style=left:'\n                            + box.left + 'px;></div>').text(axis.options.label)\n                            .appendTo(plot.getPlaceholder())\n                            .data('axis.n', axis.n);\n                        if (axis.options.tsColors) {\n                            $.each(axis.options.tsColors, (idx: number, color: string) => {\n                                $('<span>').html('&nbsp;&#x25CF;').css('color', color)\n                                    .addClass('labelColorMarker').appendTo(yaxisLabel);\n                            });\n                        }\n                        yaxisLabel.css('margin-left', -4 + (yaxisLabel.height() - yaxisLabel.width()) / 2);\n                    }\n                }\n            });\n\n            // set selection to axis\n            plot.getData().forEach((elem: any) => {\n                if (elem.selected) {\n                    $('.flot-y' + elem.yaxis.n + '-axis').addClass('selected');\n                    $.each($('.axisTarget'), (i: number, entry: Element) => {\n                        if ($(entry).data('axis.n') === elem.yaxis.n) {\n                            if (!$(entry).hasClass('selected')) {\n                                $(entry).addClass('selected');\n                                return false;\n                            }\n                        }\n                    });\n                    $.each($('.axisTargetStyle'), (i: number, entry: Element) => {\n                        if ($(entry).data('axis.n') === elem.yaxis.n) {\n                            if (!$(entry).hasClass('selected')) {\n                                $(entry).addClass('selected');\n                                return false;\n                            }\n                        }\n                    });\n                    $.each($('.axisLabel.yaxisLabel'), (i: number, entry: Element) => {\n                        if ($(entry).data('axis.n') === elem.yaxis.n) {\n                            if (!$(entry).hasClass('selected')) {\n                                $(entry).addClass('selected');\n                                return false;\n                            }\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    private addLoadedDataset(dataset: IDataset) {\n        this.datasetMap.set(dataset.internalId, dataset);\n        this.loadData(dataset);\n    }\n\n    private loadData(dataset: IDataset, refresh?: boolean) {\n        const datasetOptions = this.datasetOptions.get(dataset.internalId);\n        if (datasetOptions) {\n            if (this.timespan && this.plotOptions && datasetOptions.visible) {\n                if (this.loadingCounter === 0) { this.isContentLoading(true); }\n                this.loadingCounter++;\n                const buffer = this.timeSrvc.getBufferedTimespan(this.timespan, 0.2);\n                const options: HttpRequestOptions = {};\n                if (refresh) { options.forceUpdate = refresh; }\n                if (dataset instanceof Timeseries) {\n                    this.api.getTsData<[number, number]>(dataset.id, dataset.url, buffer,\n                        {\n                            format: 'flot',\n                            expanded: this.plotOptions.showReferenceValues === true,\n                            generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                        }, options\n                    ).subscribe(\n                        (result) => this.prepareData(dataset, result).subscribe(() => {\n                            this.plotGraph();\n                        }),\n                        (error) => this.onError(error),\n                        () => this.onCompleteLoadingData(dataset)\n                    );\n                }\n                if (dataset instanceof Dataset) {\n                    this.api.getData<[number, number]>(dataset.id, dataset.url, buffer,\n                        {\n                            format: 'flot',\n                            expanded: this.plotOptions.showReferenceValues === true,\n                            generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                        }, options\n                    ).subscribe(\n                        (result) => this.prepareData(dataset, result).subscribe(() => this.plotGraph()),\n                        (error) => this.onError(error),\n                        () => this.onCompleteLoadingData(dataset)\n                    );\n                }\n            } else if (!datasetOptions.visible) {\n                this.removePreparedData(dataset.internalId);\n                this.plotGraph();\n            }\n        }\n    }\n\n    private onError(error: any) {\n        console.error(error);\n    }\n\n    private onCompleteLoadingData(dataset: IDataset) {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.isContentLoading(false); }\n    }\n\n    private createTooltip() {\n        if ($('#tooltip').length === 0) {\n            $('<div id=\"tooltip\"></div>').appendTo('body');\n        }\n    }\n\n    private showTooltip(event: any, pos: any, item: any) {\n        $('#tooltip').empty();\n        $('#tooltip').append('<div>' + item.datapoint[1].toFixed(2) + ' ' + item.series.yaxis.options.uom + '</div>');\n        $('#tooltip').append('<div>' + item.series.xaxis.tickFormatter(item.datapoint[0], item.series.xaxis) + '</div>');\n        const tooltip = $('#tooltip').show();\n        const halfwidth = (event.target.clientWidth) / 2;\n        if (halfwidth >= item.pageX - event.target.getBoundingClientRect().left) {\n            tooltip.css({\n                position: 'absolute',\n                top: item.pageY + 5,\n                left: item.pageX + 5,\n                right: 'auto'\n            });\n        } else {\n            tooltip.css({\n                position: 'absolute',\n                top: item.pageY + 5,\n                right: ($(window).width() - item.pageX),\n                left: 'auto'\n            });\n        }\n    }\n\n    private hideTooltip() {\n        $('#tooltip').hide();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { HelgolandLabelMapperModule } from '@helgoland/depiction';\n\nimport {\n  FlotOverviewTimeseriesGraphComponent,\n} from './flot-overview-timeseries-graph/flot-overview-timeseries-graph.component';\nimport { FlotTimeseriesGraphComponent } from './flot-timeseries-graph/flot-timeseries-graph.component';\n\n@NgModule({\n  declarations: [\n    FlotTimeseriesGraphComponent,\n    FlotOverviewTimeseriesGraphComponent\n  ],\n  imports: [\n    HelgolandLabelMapperModule\n  ],\n  exports: [\n    FlotTimeseriesGraphComponent,\n    FlotOverviewTimeseriesGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandFlotModule { }\n"],"names":[],"mappings":"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"}
