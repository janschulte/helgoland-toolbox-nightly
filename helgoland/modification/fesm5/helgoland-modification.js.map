{"version":3,"file":"helgoland-modification.js.map","sources":["ng://@helgoland/modification/lib/axes-options/axes-options.component.ts","ng://@helgoland/modification/lib/color-selector/color-selector.component.ts","ng://@helgoland/modification/lib/drag-options/drag-options.component.ts","ng://@helgoland/modification/lib/min-max-range/min-max-range.component.ts","ng://@helgoland/modification/lib/modification.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-axes-options',\n    template: `<div class=\"btn-group\">\n  <button type=\"button\" class=\"btn btn-light\" (click)=\"changeYAxesVisibility()\">\n    <span class=\"fa fa-bar-chart\"></span>\n  </button>\n</div>\n`\n})\nexport class AxesOptionsComponent {\n\n    @Output()\n    public onChangeYAxesVisibility: EventEmitter<void> = new EventEmitter();\n\n    public changeYAxesVisibility() {\n        this.onChangeYAxesVisibility.emit();\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-color-selector',\n    template: `<div class=\"colorpicker\">\n  <span [(colorPicker)]=\"color\" [cpDialogDisplay]=\"'inline'\" [cpCancelButton]=\"true\" [cpCancelButtonText]=\"'Reset'\" [cpPresetColors]=\"colorList\"\n    [cpToggle]=\"true\" [cpPresetLabel]=\"'Presets:'\" (colorPickerChange)=\"onColorChange.emit($event)\">\n  </span>\n</div>`\n})\nexport class ColorSelectorComponent {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public colorList: string[];\n\n    @Output()\n    public onColorChange: EventEmitter<string> = new EventEmitter<string>();\n\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-drag-options',\n    template: `<div class=\"btn-group\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"togglePanZoom()\">\n        <span class=\"fa fa-cog\"></span>\n    </button>\n</div>\n`\n})\nexport class DragOptionsComponent {\n\n    @Output()\n    public onTogglePanZoom: EventEmitter<void> = new EventEmitter();\n\n    public togglePanZoom() {\n        this.onTogglePanZoom.emit();\n    }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { MinMaxRange } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-min-max-range',\n  template: `<input type=\"number\" [(ngModel)]=\"rangeMin\" (ngModelChange)=\"setYaxisRange()\">\n<input type=\"number\" [(ngModel)]=\"rangeMax\" (ngModelChange)=\"setYaxisRange()\">\n<button (click)=\"resetYaxisRange()\">reset</button>`,\n  styles: [``]\n})\nexport class MinMaxRangeComponent implements OnChanges {\n\n  public rangeMin: number;\n  public rangeMax: number;\n\n  @Input()\n  public range: MinMaxRange;\n\n  @Output()\n  public onRangeChange: EventEmitter<MinMaxRange> = new EventEmitter();\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes.range && this.range) {\n      this.rangeMin = this.range.min;\n      this.rangeMax = this.range.max;\n    }\n  }\n\n  public setYaxisRange() {\n    const min = (this.rangeMin === null || this.rangeMin === undefined) ? 0 : this.rangeMin;\n    const max = (this.rangeMax === null || this.rangeMax === undefined) ? 0 : this.rangeMax;\n    this.onRangeChange.emit({ min, max });\n  }\n\n  public resetYaxisRange() {\n    this.rangeMin = null;\n    this.rangeMax = null;\n    this.onRangeChange.emit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { ColorPickerModule } from 'ngx-color-picker';\n\nimport { AxesOptionsComponent } from './axes-options/axes-options.component';\nimport { ColorSelectorComponent } from './color-selector/color-selector.component';\nimport { DragOptionsComponent } from './drag-options/drag-options.component';\nimport { MinMaxRangeComponent } from './min-max-range/min-max-range.component';\n\n@NgModule({\n  declarations: [\n    ColorSelectorComponent,\n    AxesOptionsComponent,\n    DragOptionsComponent,\n    MinMaxRangeComponent\n  ],\n  imports: [\n    HelgolandCoreModule,\n    FormsModule,\n    ColorPickerModule\n  ],\n  exports: [\n    ColorSelectorComponent,\n    AxesOptionsComponent,\n    DragOptionsComponent,\n    MinMaxRangeComponent\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandModificationModule { }\n"],"names":[],"mappings":";;;;;;;;;AAAA;;uCAcyD,IAAI,YAAY,EAAE;;;;;IAEhE,oDAAqB;;;;QACxB,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;;;gBAf3C,SAAS,SAAC;oBACP,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,uLAKb;iBACA;;;0CAGI,MAAM;;+BAbX;;;;;;;ACAA;;6BAmBiD,IAAI,YAAY,EAAU;;;gBAjB1E,SAAS,SAAC;oBACP,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,wTAIP;iBACN;;;wBAGI,KAAK;4BAGL,KAAK;gCAGL,MAAM;;iCAlBX;;;;;;;ACAA;;+BAciD,IAAI,YAAY,EAAE;;;;;IAExD,4CAAa;;;;QAChB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;;;gBAfnC,SAAS,SAAC;oBACP,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,iLAKb;iBACA;;;kCAGI,MAAM;;+BAbX;;;;;;;ACAA;;6BAmBoD,IAAI,YAAY,EAAE;;;;;;IAE7D,0CAAW;;;;cAAC,OAAsB;QACvC,IAAI,OAAO,aAAU,IAAI,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;SAChC;;;;;IAGI,4CAAa;;;;;QAClB,IAAM,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;;QACxF,IAAM,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,KAAA,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;;;;;IAGjC,8CAAe;;;;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;;;gBAlC7B,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,kOAEuC;oBACjD,MAAM,EAAE,CAAC,EAAE,CAAC;iBACb;;;wBAME,KAAK;gCAGL,MAAM;;+BAlBT;;;;;;;ACAA;;;;gBAUC,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,sBAAsB;wBACtB,oBAAoB;wBACpB,oBAAoB;wBACpB,oBAAoB;qBACrB;oBACD,OAAO,EAAE;wBACP,mBAAmB;wBACnB,WAAW;wBACX,iBAAiB;qBAClB;oBACD,OAAO,EAAE;wBACP,sBAAsB;wBACtB,oBAAoB;wBACpB,oBAAoB;wBACpB,oBAAoB;qBACrB;oBACD,SAAS,EAAE,EACV;iBACF;;sCA9BD;;;;;;;;;;;;;;;"}
