{"version":3,"file":"helgoland-depiction.umd.js.map","sources":["ng://@helgoland/depiction/lib/label-mapper/label-mapper.service.ts","ng://@helgoland/depiction/lib/label-mapper/label-mapper.component.ts","ng://@helgoland/depiction/lib/label-mapper/label-mapper.module.ts",null,"ng://@helgoland/depiction/lib/datasetlist/list-entry.component.ts","ng://@helgoland/depiction/lib/datasetlist/profile-entry/profile-entry.component.ts","ng://@helgoland/depiction/lib/datasetlist/timeseries/simple-timeseries-entry/simple-timeseries-entry.component.ts","ng://@helgoland/depiction/lib/datasetlist/timeseries/configurable-timeseries-entry/configurable-timeseries-entry.component.ts","ng://@helgoland/depiction/lib/datasetlist/timeseries/first-latest-timeseries-entry/first-latest-timeseries-entry.component.ts","ng://@helgoland/depiction/lib/datasetlist/timeseries/timeseries-entry/timeseries-entry.component.ts","ng://@helgoland/depiction/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts","ng://@helgoland/depiction/lib/datasetlist/module.ts","ng://@helgoland/depiction/lib/dataset-table/dataset-table.component.ts","ng://@helgoland/depiction/lib/dataset-table/module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IdCache, Settings, SettingsService } from '@helgoland/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\ndeclare var $: any;\n\n@Injectable()\nexport class LabelMapperService {\n\n    private cache: IdCache<string> = new IdCache();\n\n    constructor(\n        protected httpClient: HttpClient,\n        protected settingsSrvc: SettingsService<Settings>\n    ) { }\n\n    public getMappedLabel(label: string): Observable<string> {\n        return new Observable<string>((observer: Observer<string>) => {\n            if (!this.settingsSrvc.getSettings().solveLabels) {\n                this.confirmLabel(observer, label);\n            } else {\n                const url = this.findUrl(label);\n                if (url) {\n                    if (this.cache.has(url)) {\n                        this.confirmLabel(observer, this.cache.get(url));\n                    } else {\n                        const labelUrl =\n                            this.settingsSrvc.getSettings().proxyUrl ? this.settingsSrvc.getSettings().proxyUrl + url : url;\n                        this.httpClient.get(labelUrl, { responseType: 'text' }).subscribe((res) => {\n                            try {\n                                const xml = $.parseXML(res);\n                                label = label.replace(url, $(xml).find('prefLabel').text());\n                            } catch (error) {\n                                // currently do nothing and use old label\n                            }\n                            this.cache.set(url, label);\n                            this.confirmLabel(observer, label);\n                        }, (error) => {\n                            const resolvedLabel = label.substring(label.lastIndexOf('/') + 1, label.length);\n                            this.cache.set(url, resolvedLabel);\n                            this.confirmLabel(observer, resolvedLabel);\n                        });\n                    }\n                } else {\n                    this.confirmLabel(observer, label);\n                }\n            }\n        });\n    }\n\n    private confirmLabel(observer: Observer<string>, label: string) {\n        observer.next(label);\n        observer.complete();\n    }\n\n    private findUrl(label: string) {\n        const source = (label || '').toString();\n        const regexToken = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?&\\/\\/=]+)/g;\n        const matchArray = regexToken.exec(source);\n        if (matchArray !== null) {\n            return matchArray[0];\n        }\n        return null;\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { LabelMapperService } from './label-mapper.service';\n\n@Component({\n    selector: 'n52-label-mapper',\n    template: `<span *ngIf=\"determinedLabel\">{{determinedLabel}}</span>\n<span *ngIf=\"loading\">\n  <span class=\"glyphicon glyphicon-refresh icon-spin\"></span>\n  <span> loading label ...</span>\n</span>\n`\n})\nexport class LabelMapperComponent implements OnChanges {\n\n    @Input()\n    public label: string;\n\n    public determinedLabel: string;\n\n    public loading = true;\n\n    constructor(\n        protected labelMapperSrvc: LabelMapperService\n    ) { }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.label) {\n            this.labelMapperSrvc.getMappedLabel(this.label)\n                .subscribe((label) => {\n                    this.determinedLabel = label;\n                    this.loading = false;\n                });\n        } else {\n            this.loading = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LabelMapperComponent } from './label-mapper.component';\nimport { LabelMapperService } from './label-mapper.service';\n\n@NgModule({\n  declarations: [\n    LabelMapperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LabelMapperComponent\n  ],\n  providers: [\n    LabelMapperService\n  ]\n})\nexport class HelgolandLabelMapperModule { }\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { InternalDatasetId, InternalIdHandler } from '@helgoland/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * Represents an abstract dataset entry for a list, which has the following functions:\n *  - can be selected and is selectable internally, with a corresponding output event\n *  - can be deleted, which also triggers an output event\n *  - translatable, so it triggers the methode onLanguageChanged when the language is switched\n */\nexport abstract class ListEntryComponent implements OnInit, OnDestroy {\n\n    @Input()\n    public datasetId: string;\n\n    @Input()\n    public selected: boolean;\n\n    @Output()\n    public onDeleteDataset: EventEmitter<boolean> = new EventEmitter();\n\n    @Output()\n    public onSelectDataset: EventEmitter<boolean> = new EventEmitter();\n\n    public loading;\n\n    protected internalId: InternalDatasetId;\n\n    private langChangeSubscription: Subscription;\n\n    constructor(\n        protected internalIdHandler: InternalIdHandler,\n        protected translateSrvc: TranslateService\n    ) { }\n\n    public ngOnInit(): void {\n        if (this.datasetId) {\n            this.internalId = this.internalIdHandler.resolveInternalId(this.datasetId);\n            this.loadDataset(this.translateSrvc.currentLang);\n        }\n        this.langChangeSubscription = this.translateSrvc.onLangChange.subscribe((langChangeEvent: LangChangeEvent) => this.onLanguageChanged(langChangeEvent));\n    }\n\n    public ngOnDestroy(): void {\n        this.langChangeSubscription.unsubscribe();\n    }\n\n    public removeDataset() {\n        this.onDeleteDataset.emit(true);\n    }\n\n    public toggleSelection() {\n        this.selected = !this.selected;\n        this.onSelectDataset.emit(this.selected);\n    }\n\n    protected onLanguageChanged(langChangeEvent: LangChangeEvent): void {\n        if (this.internalId) {\n            this.loadDataset(langChangeEvent.lang);\n        }\n    }\n\n    protected abstract loadDataset(lang?: string): void;\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    Dataset,\n    DatasetApiInterface,\n    InternalIdHandler,\n    LocatedProfileDataEntry,\n    ParameterFilter,\n    PlatformTypes,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Component({\n    selector: 'n52-profile-entry',\n    template: `<div class=\"legendItem\" style=\"position: relative;\" [ngClass]=\"{'selected': selected}\" (click)=\"toggleSelection()\">\n  <div class=\"legendItemheader\">\n    <div class=\"legendItemLabel\">\n      <n52-label-mapper label=\"{{dataset?.parameters.platform.label}}\"></n52-label-mapper>\n    </div>\n    <div class=\"small\">\n      <n52-label-mapper label=\"{{dataset?.parameters.phenomenon.label}}\"></n52-label-mapper>\n      <span *ngIf=\"dataset?.uom\">[\n        <n52-label-mapper label=\"{{dataset.uom}}\"></n52-label-mapper>]</span>\n    </div>\n    <div class=\"small\">\n      <n52-label-mapper label=\"{{dataset?.parameters.procedure.label}}\"></n52-label-mapper>\n    </div>\n    <div class=\"small\" *ngIf=\"dataset?.parameters.category.label != dataset?.parameters.phenomenon.label\">\n      <n52-label-mapper label=\"{{dataset?.parameters.category.label}}\"></n52-label-mapper>\n    </div>\n  </div>\n  <div *ngFor=\"let item of datasetOptions\">\n    <div>\n      <span [ngStyle]=\"{'color': item.color}\">{{item.timestamp | date: 'short'}}</span>\n      <span class=\"fa\" [ngClass]=\"{'fa-eye-slash': item.visible, 'fa-eye': !item.visible}\" (click)=\"toggleVisibility(item); $event.stopPropagation();\"\n        title=\"{{'profiles.legend.visibility' | translate}}\"></span>\n      <span class=\"fa fa-pencil\" (click)=\"editDatasetOptions(item); $event.stopPropagation();\" [ngStyle]=\"{color: item.color}\"\n        title=\"{{'profiles.legend.edit-style' | translate}}\"></span>\n      <span class=\"fa fa-map-marker\" (click)=\"showGeometry(item); $event.stopPropagation();\" title=\"{{'profiles.legend.show-geometry' | translate}}\"></span>\n      <span class=\"fa fa-times\" (click)=\"removeDatasetOptions(item); $event.stopPropagation();\" title=\"{{'profiles.legend.delete-subentry' | translate}}\"></span>\n    </div>\n    <div (click)=\"openInCombiView(item); $event.stopPropagation();\" *ngIf=\"isMobile()\" class=\"toCombiView\">\n      <span class=\"fa fa-arrow-right\"></span>\n      <span>{{'profiles.legend.go-to-combi-view' | translate}}</span>\n    </div>\n  </div>\n</div>\n`,\n    styles: [`:host .legendItem{background-color:#fff;padding:5px;border-radius:5px;margin-bottom:5px}:host .legendItem .small{font-size:90%;word-break:break-all}:host .legendItem.selected{padding:0;border-width:5px;border-style:solid}:host .legendItem .legendItemheader{cursor:pointer}:host .legendItem .toCombiView{cursor:pointer}:host .legendItem .fa{cursor:pointer}`]\n})\nexport class ProfileEntryComponent extends ListEntryComponent {\n\n    @Input()\n    public datasetOptions: TimedDatasetOptions[];\n\n    @Output()\n    public onUpdateOptions: EventEmitter<TimedDatasetOptions[]> = new EventEmitter();\n\n    @Output()\n    public onDeleteDatasetOptions: EventEmitter<TimedDatasetOptions> = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter<TimedDatasetOptions> = new EventEmitter();\n\n    @Output()\n    public onOpenInCombiView: EventEmitter<TimedDatasetOptions> = new EventEmitter();\n\n    @Output()\n    public onShowGeometry: EventEmitter<GeoJSON.GeoJsonObject> = new EventEmitter();\n\n    public dataset: Dataset;\n\n    public editableOptions: TimedDatasetOptions;\n    public tempColor: string;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected internalIdHandler: InternalIdHandler,\n        protected translateSrvc: TranslateService\n    ) {\n        super(internalIdHandler, translateSrvc);\n    }\n\n    public removeDatasetOptions(options: TimedDatasetOptions) {\n        this.onDeleteDatasetOptions.emit(options);\n    }\n\n    public editDatasetOptions(options: TimedDatasetOptions) {\n        this.onEditOptions.emit(options);\n    }\n\n    public toggleVisibility(options: TimedDatasetOptions) {\n        options.visible = !options.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public isMobile() {\n        if (this.dataset) {\n            return this.dataset.platformType === PlatformTypes.mobileInsitu;\n        }\n        return false;\n    }\n\n    public openInCombiView(option: TimedDatasetOptions) {\n        this.onOpenInCombiView.emit(option);\n    }\n\n    public showGeometry(option: TimedDatasetOptions) {\n        const internalId = this.internalIdHandler.resolveInternalId(this.datasetId);\n        if (this.isMobile()) {\n            const timespan = new Timespan(option.timestamp);\n            this.api.getData<LocatedProfileDataEntry>(internalId.id, internalId.url, timespan).subscribe((result) => {\n                if (result.values.length === 1) {\n                    this.onShowGeometry.emit(result.values[0].geometry);\n                }\n            });\n        } else {\n            this.api.getPlatform(this.dataset.parameters.platform.id, internalId.url).subscribe((platform) => {\n                this.onShowGeometry.emit(platform.geometry);\n            });\n        }\n    }\n\n    protected loadDataset(lang?: string) {\n        const params: ParameterFilter = {};\n        if (lang) { params.lang = lang; }\n        this.loading = true;\n        this.api.getDataset(this.internalId.id, this.internalId.url, params).subscribe((dataset) => {\n            this.dataset = dataset;\n            this.loading = false;\n        });\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { Dataset, DatasetApiInterface, IDataset, InternalIdHandler, ParameterFilter, Timeseries } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ListEntryComponent } from '../../list-entry.component';\n\n/**\n * Implements the abstract ListEntryComponent, which has the following functions:\n *  - can be selected and is selectable internally, with a corresponding output event\n *  - can be deleted, which also triggers an output event\n *  - translatable, so it triggers the methode onLanguageChanged when the language is switched\n */\n@Component({\n  selector: 'n52-simple-timeseries-entry',\n  template: `<span>Platform: {{platformLabel}}</span>\n<span>Phenomenon: {{phenomenonLabel}}</span>\n<span>Procedure: {{procedureLabel}}</span>\n<span>Category: {{categoryLabel}}</span>\n<span>Uom: {{uom}}</span>\n<button (click)=\"toggleSelection()\">select</button>\n<button (click)=\"removeDataset()\">remove</button>`,\n  styles: [``]\n})\nexport class SimpleTimeseriesEntryComponent extends ListEntryComponent {\n\n  public dataset: IDataset;\n\n  public platformLabel: string;\n  public phenomenonLabel: string;\n  public procedureLabel: string;\n  public categoryLabel: string;\n  public uom: string;\n\n  constructor(\n    protected api: DatasetApiInterface,\n    protected internalIdHandler: InternalIdHandler,\n    protected translateSrvc: TranslateService\n  ) {\n    super(internalIdHandler, translateSrvc);\n  }\n\n  protected loadDataset(lang?: string): void {\n    const params: ParameterFilter = {};\n    if (lang) { params.lang = lang; }\n    this.loading = true;\n    this.api.getSingleTimeseries(this.internalId.id, this.internalId.url, params)\n      .subscribe(\n        (timeseries) => this.setDataset(timeseries),\n        (error) => {\n          this.api.getDataset(this.internalId.id, this.internalId.url, params).subscribe((dataset) => this.setDataset(dataset));\n        });\n  }\n\n  protected setDataset(timeseries: IDataset) {\n    this.dataset = timeseries;\n    this.setParameters();\n    this.loading = false;\n  }\n\n  protected setParameters() {\n    if (this.dataset instanceof Dataset) {\n      this.platformLabel = this.dataset.parameters.platform.label;\n    } else if (this.dataset instanceof Timeseries) {\n      this.platformLabel = this.dataset.station.properties.label;\n    }\n    this.phenomenonLabel = this.dataset.parameters.phenomenon.label;\n    this.procedureLabel = this.dataset.parameters.procedure.label;\n    this.categoryLabel = this.dataset.parameters.category.label;\n    this.uom = this.dataset.uom;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Dataset, DatasetApiInterface, DatasetOptions, InternalIdHandler, Timeseries } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { SimpleTimeseriesEntryComponent } from '../simple-timeseries-entry/simple-timeseries-entry.component';\n\n/**\n * Extends the SimpleTimeseriesEntryComponent, with the following functions:\n *  - dataset options and triggers the editation of the dataset options\n *  - triggers the show geometry event\n */\n@Component({\n  selector: 'n52-configurable-timeseries-entry',\n  template: `<span>Platform: {{platformLabel}}</span>\n<span>Phenomenon: {{phenomenonLabel}}</span>\n<span>Procedure: {{procedureLabel}}</span>\n<span>Category: {{categoryLabel}}</span>\n<span>Uom: {{uom}}</span>\n<button (click)=\"toggleSelection()\">toggle selection</button>\n<button (click)=\"removeDataset()\">remove</button>\n<button (click)=\"toggleVisibility()\">toggle visibility</button>\n<button (click)=\"editDatasetOptions()\">edit Options</button>\n<button (click)=\"showGeometry()\">show Geometry</button>`,\n  styles: [``]\n})\nexport class ConfigurableTimeseriesEntryComponent extends SimpleTimeseriesEntryComponent {\n\n  @Input()\n  public datasetOptions: DatasetOptions;\n\n  @Input()\n  public highlight: boolean;\n\n  @Output()\n  public onUpdateOptions: EventEmitter<DatasetOptions> = new EventEmitter();\n\n  @Output()\n  public onEditOptions: EventEmitter<DatasetOptions> = new EventEmitter();\n\n  @Output()\n  public onShowGeometry: EventEmitter<GeoJSON.GeoJsonObject> = new EventEmitter();\n\n  constructor(\n    protected api: DatasetApiInterface,\n    protected internalIdHandler: InternalIdHandler,\n    protected translateSrvc: TranslateService\n  ) {\n    super(api, internalIdHandler, translateSrvc);\n  }\n\n  public toggleVisibility() {\n    this.datasetOptions.visible = !this.datasetOptions.visible;\n    this.onUpdateOptions.emit(this.datasetOptions);\n  }\n\n  public editDatasetOptions() {\n    this.onEditOptions.emit(this.datasetOptions);\n  }\n\n  public showGeometry() {\n    if (this.dataset instanceof Timeseries) {\n      this.onShowGeometry.emit(this.dataset.station.geometry);\n    }\n    if (this.dataset instanceof Dataset) {\n      this.api.getPlatform(this.dataset.parameters.platform.id, this.dataset.url).subscribe((platform) => {\n        this.onShowGeometry.emit(platform.geometry);\n      });\n    }\n  }\n\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { DatasetApiInterface, FirstLastValue, InternalIdHandler, Time, TimeInterval } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  ConfigurableTimeseriesEntryComponent,\n} from '../configurable-timeseries-entry/configurable-timeseries-entry.component';\n\n/**\n * Extends the ConfigurableTimeseriesEntryComponent, with the following functions:\n *  - first and latest validation\n *  - jump to first and latest value events\n */\n@Component({\n  selector: 'n52-first-latest-timeseries-entry',\n  template: `<span>{{procedureLabel}} - {{platformLabel}}</span>\n<span>Has Data: {{hasData}}</span>\n<button *ngIf=\"firstValue\" (click)=\"jumpToFirstTimeStamp()\">{{firstValue.value}} - {{firstValue.timestamp | date}}</button>\n<button *ngIf=\"lastValue\" (click)=\"jumpToLastTimeStamp()\">{{lastValue.value}} - {{lastValue.timestamp | date}}</button>`,\n  styles: [``]\n})\nexport class FirstLatestTimeseriesEntryComponent extends ConfigurableTimeseriesEntryComponent implements OnChanges {\n\n  @Input()\n  public timeInterval: TimeInterval;\n\n  @Output()\n  public onSelectDate: EventEmitter<Date> = new EventEmitter();\n\n  public firstValue: FirstLastValue;\n  public lastValue: FirstLastValue;\n  public hasData = true;\n\n  constructor(\n    protected api: DatasetApiInterface,\n    protected internalIdHandler: InternalIdHandler,\n    protected translateSrvc: TranslateService,\n    protected timeSrvc: Time\n  ) {\n    super(api, internalIdHandler, translateSrvc);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.timeInterval) {\n      this.checkDataInTimespan();\n    }\n  }\n\n  public jumpToFirstTimeStamp() {\n    this.onSelectDate.emit(new Date(this.dataset.firstValue.timestamp));\n  }\n\n  public jumpToLastTimeStamp() {\n    this.onSelectDate.emit(new Date(this.dataset.lastValue.timestamp));\n  }\n\n  protected setParameters() {\n    super.setParameters();\n    this.firstValue = this.dataset.firstValue;\n    this.lastValue = this.dataset.lastValue;\n    this.checkDataInTimespan();\n  }\n\n  private checkDataInTimespan() {\n    if (this.timeInterval && this.dataset) {\n      this.hasData = this.timeSrvc.overlaps(\n        this.timeInterval,\n        this.dataset.firstValue.timestamp,\n        this.dataset.lastValue.timestamp\n      );\n    }\n  }\n\n}\n","import { Component, Injectable, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { ColorService, DatasetApiInterface, IdCache, InternalIdHandler, ReferenceValue, Time } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n    FirstLatestTimeseriesEntryComponent,\n} from '../first-latest-timeseries-entry/first-latest-timeseries-entry.component';\n\n@Injectable()\nexport class ReferenceValueColorCache extends IdCache<{ color: string, visible: boolean }> { }\n\n/**\n * Extends the FirstLatestTimeseriesEntryComponent, with the following functions:\n *  - handles the reference values of the dataset entry\n */\n@Component({\n    selector: 'n52-timeseries-entry',\n    template: `<div class=\"legendItem\" style=\"position: relative;\" [ngStyle]=\"{'border-color': datasetOptions?.color}\" [ngClass]=\"{'selected': selected}\"\n  (click)=\"toggleSelection()\">\n  <div class=\"loading-overlay\" *ngIf=\"loading\" [ngStyle]=\"{'background-color': datasetOptions?.color}\">\n    <div class=\"fa fa-refresh fa-spin fa-3x fa-fw\"></div>\n  </div>\n  <div>\n    <div class=\"legendItemheader\" [ngClass]=\"{'highlight': highlight}\">\n      <div class=\"legendItemLabel\" [ngStyle]=\"{'color': datasetOptions?.color}\">\n        <n52-label-mapper label=\"{{platformLabel}}\"></n52-label-mapper>\n        <!-- <n52-favorite-toggler [dataset]=\"dataset\"></n52-favorite-toggler> -->\n      </div>\n      <div class=\"noDataWarning firstLastEntry\" *ngIf=\"!hasData\">\n        <div>\n          <span class=\"fa fa-exclamation-triangle red\"></span>\n          <span class=\"small-label\">Keine Daten verfÃ¼gbar</span>\n        </div>\n        <div class=\"additionalLegendEntry\" (click)=\"jumpToLastTimeStamp(); $event.stopPropagation();\">\n          <span class=\"fa fa-chevron-right\"></span>\n          <span class=\"small-label\">Springe zur letzten Messung</span>\n        </div>\n      </div>\n      <div class=\"small-label\">\n        <n52-label-mapper label=\"{{phenomenonLabel}}\"></n52-label-mapper>\n        <span *ngIf=\"uom\">\n          <span>[</span>\n          <n52-label-mapper label=\"{{uom}}\"></n52-label-mapper>\n          <span>]</span>\n        </span>\n      </div>\n      <div class=\"small-label\">\n        <n52-label-mapper label=\"{{procedureLabel}}\"></n52-label-mapper>\n      </div>\n      <div class=\"small-label\" *ngIf=\"categoryLabel != phenomenonLabel\">\n        <n52-label-mapper label=\"{{categoryLabel}}\"></n52-label-mapper>\n      </div>\n    </div>\n    <div class=\"legendicons\">\n      <span class=\"fa\" [ngClass]=\"{'fa-chevron-down': !informationVisible, 'fa-chevron-up': informationVisible}\" (click)=\"toggleInformation(); $event.stopPropagation();\"></span>\n      <span class=\"fa\" [ngClass]=\"{'fa-eye-slash': datasetOptions?.visible, 'fa-eye': !datasetOptions?.visible}\" (click)=\"toggleVisibility(); $event.stopPropagation();\"></span>\n      <span class=\"fa fa-map-marker\" (click)=\"showGeometry(); $event.stopPropagation();\"></span>\n      <span class=\"fa fa-pencil\" (click)=\"editDatasetOptions(); $event.stopPropagation();\" [ngStyle]=\"{color: datasetOptions?.color}\"></span>\n      <span class=\"fa fa-times\" (click)=\"removeDataset(); $event.stopPropagation();\"></span>\n    </div>\n    <div class=\"collapseLegendEntry small-label\" *ngIf=\"informationVisible\">\n      <div class=\"firstLastEntry additionalLegendEntry\" *ngIf=\"firstValue\" (click)=\"jumpToFirstTimeStamp(); $event.stopPropagation();\">\n        <span class=\"fa fa-chevron-right\"></span>\n        <span>Erster Wert bei</span>\n        <span>{{firstValue.timestamp| date: 'short'}}</span>\n        <span class=\"hidden-medium\">({{firstValue.value}} {{uom}})</span>\n      </div>\n      <div class=\"firstLastEntry additionalLegendEntry\" *ngIf=\"lastValue\" (click)=\"jumpToLastTimeStamp(); $event.stopPropagation();\">\n        <span class=\"fa fa-chevron-right\"></span>\n        <span>Letzter Wert bei</span>\n        <span>{{lastValue.timestamp| date: 'short'}}</span>\n        <span class=\"hidden-medium\">({{lastValue.value}} {{uom}})</span>\n      </div>\n      <div *ngIf=\"dataset?.referenceValues\">\n        <div class=\"additionalLegendEntry\" *ngFor=\"let ref of dataset.referenceValues\" (click)=\"toggleReferenceValue(ref); $event.stopPropagation();\"\n          [ngClass]=\"{'selected': ref.visible}\" [ngStyle]=\"{color: ref.color}\">\n          <span class=\"fa fa-chevron-right\"></span>\n          <span>{{ref.label}}</span>\n        </div>\n      </div>\n      <!-- <div class=\"additionalLegendEntry\" ng-click=\"$event.stopPropagation(); createExportCsv(timeseries)\">\n                <span class=\"glyphicon glyphicon-download\"></span>\n                <span translate=\"export.label\"></span>\n            </div> -->\n      <!-- <div class=\"additionalLegendEntry\">\n                <swc-procedure-metadata timeseries='timeseries'></swc-procedure-metadata>\n                <swc-timeseries-raw-data-output timeseries='timeseries'></swc-timeseries-raw-data-output>\n                <swc-sos-url timeseries='timeseries'></swc-sos-url>\n            </div> -->\n    </div>\n  </div>\n</div>`,\n    styles: [`.geometryViewerModal .modal-body{height:50vh}n52-timeseries-entry .legendItem{background-color:#fff;padding:5px;border-radius:5px;margin-bottom:5px}n52-timeseries-entry .legendItem .small-label{font-size:90%;word-break:break-all}n52-timeseries-entry .legendItem.selected{padding:0;border-width:5px;border-style:solid}n52-timeseries-entry .legendItem .legendItemheader{cursor:pointer}n52-timeseries-entry .legendItem .legendItemheader.highlight{font-weight:700}n52-timeseries-entry .legendItem .legendicons span{margin:0 4%;font-size:150%}n52-timeseries-entry .legendItem .legendicons span:hover{cursor:pointer}n52-timeseries-entry .legendItem .legendicons .delete{z-index:5}n52-timeseries-entry .legendItem .noDataWarning{border:2px solid red;border-radius:5px;padding:3px}n52-timeseries-entry .legendItem .noDataWarning .red{color:red}n52-timeseries-entry .legendItem .additionalLegendEntry:hover{cursor:pointer}n52-timeseries-entry .legendItem .additionalLegendEntry.selected{font-weight:bolder}n52-timeseries-entry .legendItem .refEntry.selected{border-style:solid;border-width:2px;border-radius:2px;margin:2px 0}n52-timeseries-entry .legendItem .loading-overlay{width:100%;height:100%;position:absolute;top:0;left:0;opacity:.5;z-index:1;display:flex;justify-content:center;align-items:center}n52-timeseries-entry .legendItem .loading-overlay .fa-spin{color:#fff;font-size:25px;width:25px;height:25px}`],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TimeseriesEntryComponent extends FirstLatestTimeseriesEntryComponent implements OnChanges {\n\n    public informationVisible = false;\n    public referenceValues: ReferenceValue[];\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected timeSrvc: Time,\n        protected internalIdHandler: InternalIdHandler,\n        protected color: ColorService,\n        protected refValCache: ReferenceValueColorCache,\n        protected translateSrvc: TranslateService\n    ) {\n        super(api, internalIdHandler, translateSrvc, timeSrvc);\n    }\n\n    public toggleInformation() {\n        this.informationVisible = !this.informationVisible;\n    }\n\n    public toggleReferenceValue(refValue: ReferenceValue) {\n        const idx = this.datasetOptions.showReferenceValues.findIndex((entry) => entry.id === refValue.referenceValueId);\n        const refValId = this.createRefValId(refValue.referenceValueId);\n        if (idx > -1) {\n            refValue.visible = false;\n            this.datasetOptions.showReferenceValues.splice(idx, 1);\n        } else {\n            refValue.visible = true;\n            this.datasetOptions.showReferenceValues.push({ id: refValue.referenceValueId, color: refValue.color });\n        }\n        this.refValCache.get(refValId).visible = refValue.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    protected setParameters() {\n        super.setParameters();\n        if (this.dataset.referenceValues) {\n            this.dataset.referenceValues.forEach((e) => {\n                const refValId = this.createRefValId(e.referenceValueId);\n                const refValOption = this.datasetOptions.showReferenceValues.find((o) => o.id === e.referenceValueId);\n                if (refValOption) {\n                    this.refValCache.set(refValId, {\n                        color: refValOption.color,\n                        visible: true\n                    });\n                }\n                if (!this.refValCache.has(refValId)) {\n                    this.refValCache.set(refValId, {\n                        color: this.color.getColor(),\n                        visible: false\n                    });\n                }\n                e.color = this.refValCache.get(refValId).color;\n                e.visible = this.refValCache.get(refValId).visible;\n            });\n        }\n    }\n\n    private createRefValId(refId: string) {\n        return this.dataset.url + refId;\n    }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Dataset, DatasetApiInterface, DatasetOptions, InternalIdHandler, ParameterFilter } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Component({\n    selector: 'n52-trajectory-entry',\n    template: `<div style=\"white-space: nowrap;\" (click)=\"toggleVisibility()\">\n  <span>\n    <a class=\"btn btn-light\">\n      <span class=\"fa fa-plus\" [ngClass]=\"{'fa-eye': !datasetOptions?.visible, 'fa-eye-slash': datasetOptions?.visible}\"></span>\n    </a>\n  </span>\n  <span style=\"padding-left: 10px;\" [ngStyle]=\"{'color': datasetOptions?.color}\">{{dataset?.parameters.phenomenon.label}}</span>\n  <span class=\"fa fa-pencil\" (click)=\"editDatasetOptions(datasetOptions); $event.stopPropagation();\" [ngStyle]=\"{color: datasetOptions?.color}\"></span>\n</div>`\n})\nexport class TrajectoryEntryComponent extends ListEntryComponent {\n\n    @Input()\n    public datasetOptions: DatasetOptions;\n\n    @Output()\n    public onUpdateOptions: EventEmitter<DatasetOptions> = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter<DatasetOptions> = new EventEmitter();\n\n    public dataset: Dataset;\n\n    public tempColor: string;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected internalIdHandler: InternalIdHandler,\n        protected translateSrvc: TranslateService\n    ) {\n        super(internalIdHandler, translateSrvc);\n    }\n\n    public toggleVisibility() {\n        this.datasetOptions.visible = !this.datasetOptions.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public editDatasetOptions(options: DatasetOptions) {\n        this.onEditOptions.emit(options);\n    }\n\n    protected loadDataset(lang?: string): void {\n        const params: ParameterFilter = {};\n        if (lang) { params.lang = lang; }\n        this.loading = true;\n        this.api.getDataset(this.internalId.id, this.internalId.url, params).subscribe((dataset) => {\n            this.dataset = dataset;\n            this.loading = false;\n        });\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { HelgolandLabelMapperModule } from '../label-mapper/label-mapper.module';\nimport { ProfileEntryComponent } from './profile-entry/profile-entry.component';\nimport {\n  ConfigurableTimeseriesEntryComponent,\n} from './timeseries/configurable-timeseries-entry/configurable-timeseries-entry.component';\nimport {\n  FirstLatestTimeseriesEntryComponent,\n} from './timeseries/first-latest-timeseries-entry/first-latest-timeseries-entry.component';\nimport { SimpleTimeseriesEntryComponent } from './timeseries/simple-timeseries-entry/simple-timeseries-entry.component';\nimport {\n  ReferenceValueColorCache,\n  TimeseriesEntryComponent,\n} from './timeseries/timeseries-entry/timeseries-entry.component';\nimport { TrajectoryEntryComponent } from './trajectory-entry/trajectory-entry.component';\n\nconst COMPONENTS = [\n  TimeseriesEntryComponent,\n  ConfigurableTimeseriesEntryComponent,\n  SimpleTimeseriesEntryComponent,\n  FirstLatestTimeseriesEntryComponent,\n  ProfileEntryComponent,\n  TrajectoryEntryComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HelgolandCoreModule,\n    HelgolandLabelMapperModule,\n    FormsModule\n  ],\n  declarations: [\n    COMPONENTS\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    ReferenceValueColorCache\n  ]\n})\nexport class HelgolandDatasetlistModule {\n}\n","import { Component, IterableDiffers, OnInit } from '@angular/core';\nimport {\n  DatasetApiInterface,\n  DatasetOptions,\n  DatasetPresenterComponent,\n  DatasetTableData,\n  InternalIdHandler,\n  Time,\n  Timeseries,\n} from '@helgoland/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'n52-dataset-table',\n  template: `<table *ngIf=\"ready\">\n  <thead>\n    <tr>\n      <th (click)=\"sort($event)\" [attr.data-column-id]=\"'datetime'\" class=\"sorted-asc\">\n        Zeit\n      </th>\n      <th *ngFor=\"let series of this.timeseriesArray; let i = index\" (click)=\"sort($event)\" [attr.data-column-id]=\"i\" [ngStyle]=\"{ 'border-color': preparedColors[i] }\">\n        {{series?.label}} [{{series?.uom}}]\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let row of this.preparedData\">\n      <td>{{row.datetime | date: 'short'}}</td>\n      <td *ngFor=\"let value of row.values\">{{value}}</td>\n    </tr>\n  </tbody>\n</table>\n`,\n  styles: [`:host{flex:1;overflow-y:scroll;overflow-x:hidden}:host tbody,:host thead tr{display:table;table-layout:fixed;width:100%}:host table{display:block;border-collapse:separate;border-spacing:0 1px}:host thead{display:block;position:-webkit-sticky;position:sticky;top:0;border-spacing:0}:host tr:nth-child(2n){background-color:#eee}:host th{background-color:#a9a9a9;cursor:pointer;border-bottom-width:7px;border-bottom-style:solid;overflow-wrap:break-word}:host th:first-child{border-bottom-color:#a9a9a9}:host th:first-child.sorted-asc,:host th:first-child.sorted-desc{border-bottom-color:#555}:host th.sorted-asc,:host th.sorted-desc{background-color:#555;color:#fff}:host th.sorted-asc:after{content:\"\\\\25B4\";float:right}:host th.sorted-desc:after{content:\"\\\\25BE\";float:right}:host td{white-space:nowrap;border-bottom:1px solid gray}:host td,:host th{padding:5px 10px}`]\n})\nexport class DatasetTableComponent extends DatasetPresenterComponent<DatasetOptions, any> implements OnInit {\n  /*\n    The component extends DatasetGraphComponent, but implements only parts of that components inputs and outputs.\n    Implemented: datasetIds, timeInterval, selectedDatasetIds and datasetOptions inputs; no outputs\n    Not implemented: graphOptions input; all outputs (onDatasetSelected, onTimespanChanged, onMessageThrown, onLoading)\n  */\n\n  public preparedData: DatasetTableData[] = Array();\n  public preparedColors: string[] = Array();\n  public ready = false;\n\n  public timeseriesArray: Timeseries[] = new Array();\n  private additionalStylesheet: HTMLElement;\n\n  constructor(\n    protected iterableDiffers: IterableDiffers,\n    protected api: DatasetApiInterface,\n    protected datasetIdResolver: InternalIdHandler,\n    protected timeSrvc: Time,\n    protected translateSrvc: TranslateService\n  ) {\n    super(iterableDiffers, api, datasetIdResolver, timeSrvc, translateSrvc);\n  }\n\n  public ngOnInit() {\n    this.additionalStylesheet = document.getElementById('selectedIdsStylesheet');\n    if (!this.additionalStylesheet) {\n      this.additionalStylesheet = document.createElement('style');\n      this.additionalStylesheet.id = 'selectedIdsStylesheet';\n      document.body.appendChild(this.additionalStylesheet);\n    }\n  }\n\n  /* called when user clicks on table headers */\n  public sort(event: any) {\n    // can be 'datetime' or an integer indicating the index of the column in the values array\n    const by = event.target.dataset.columnId;\n    const direction = event.target.classList.contains('sorted-asc') ? 'desc' : 'asc';\n    const directionNumber = (direction === 'asc' ? 1 : -1);\n\n    // set CSS classes\n    Array.from(event.target.parentElement.children).forEach((child: Element) => child.className = '');\n    if (direction === 'asc') {\n      (event.target as Element).classList.add('sorted-asc');\n    } else {\n      (event.target as Element).classList.add('sorted-desc');\n    }\n\n    // define correct callback function for sort method\n    let sortCallback;\n    if (by === 'datetime') {\n      sortCallback = (e1: any, e2: any) => directionNumber * (e1.datetime - e2.datetime);\n    } else {\n      const index = parseInt(by, 10);\n      // basically the same as above, but take care of 'undefined' values\n      sortCallback = (e1: any, e2: any) =>\n        (e1.values[index] === undefined ? 1 :\n          (e2.values[index] === undefined ? -1 :\n            (directionNumber * (e1.values[index] - e2.values[index]))\n          )\n        );\n    }\n\n    // do the sort\n    this.preparedData = this.preparedData.sort(sortCallback);\n  }\n\n  protected onLanguageChanged(langChangeEvent: LangChangeEvent): void { }\n\n  public reloadDataForDatasets(datasetIds: string[]): void {\n    // console.log('reload data at ' + new Date());\n  }\n\n  protected presenterOptionsChanged(options: any) {\n    // only included because it's required by abstract parent class (wouldn't compile without)\n    // no point in implementing this method in a non-graphing component\n  }\n\n  protected getIndexFromInternalId(internalId: string) {\n    // helper method\n    return this.datasetIds.indexOf(internalId);\n  }\n\n  protected setSelectedId(internalId: string) {\n    // quite fairly tested\n    const rules = this.additionalStylesheet.innerHTML.split('\\r\\n');\n    const index = this.getIndexFromInternalId(internalId);\n    rules[index] = 'td:nth-child(' + (index + 2) + ') {font-weight: bold}';\n    this.additionalStylesheet.innerHTML = rules.join('\\r\\n');\n  }\n\n  protected removeSelectedId(internalId: string) {\n    // fairly tested\n    const rules = this.additionalStylesheet.innerHTML.split('\\r\\n');\n    const index = this.getIndexFromInternalId(internalId);\n    rules[index] = '';\n    this.additionalStylesheet.innerHTML = rules.join('\\r\\n');\n  }\n\n  protected timeIntervalChanges() {\n    // the easiest method: delete everything and build preparedData from scratch.\n    this.preparedData = [];\n    this.timeseriesArray.forEach((timeseries) => this.loadTsData(timeseries));\n  }\n\n  protected removeDataset(internalId: string) {\n    // fairly tested\n    const index = this.getIndexFromInternalId(internalId);\n\n    // remove entries of this dataset in each datetime's `values` arrays\n    this.preparedData.forEach((e) => e.values.splice(index, 1));\n    // if a datetime became completely empty (i.e. there's only `undefined`s in the `values` array, delete this datetime)\n    this.preparedData = this.preparedData.filter((e) => e.values.reduce((a, c) => a || c, undefined) !== undefined);\n\n    this.preparedColors.splice(index, 1);\n\n    const rules = this.additionalStylesheet.innerHTML.split('\\r\\n');\n    rules.splice(index, 1);\n    this.additionalStylesheet.innerHTML = rules.join('\\r\\n');\n\n    this.timeseriesArray.splice(index, 1);\n  }\n\n  protected addDataset(internalId: string, url: string): void {\n    this.timeseriesArray.length += 1;  // create new empty slot\n    this.preparedColors.push('darkgrey');\n    this.additionalStylesheet.innerHTML += '\\r\\n';\n    this.api.getSingleTimeseries(internalId, url)\n      .subscribe((timeseries: Timeseries) => this.addTimeseries(timeseries));\n  }\n\n  protected datasetOptionsChanged(internalId: string, options: DatasetOptions): void {\n    if (this.timeseriesArray.some((e) => e !== undefined && e.internalId === internalId)) {\n      const index = this.getIndexFromInternalId(internalId);\n      this.preparedColors[index] = options.color;\n      // TODO-CF: Page isn't refreshed instantly, but only after the next sort (or possible other actions as well)\n    }\n  }\n\n  protected onResize(): void {\n    // TODO-CF: needed???? probably not\n  }\n\n  private addTimeseries(timeseries: Timeseries) {\n    this.timeseriesArray[this.getIndexFromInternalId(timeseries.internalId)] = timeseries;\n    this.loadTsData(timeseries);\n  }\n\n  private loadTsData(timeseries: Timeseries) {\n    if (this.timespan) {\n      // const datasetOptions = this.datasetOptions.get(timeseries.internalId);\n      this.api.getTsData<[number, number]>(timeseries.id, timeseries.url, this.timespan, { format: 'flot' })\n        .subscribe((result) => {\n          // bring result into Array<DatasetTableData> format and pass to prepareData\n          // convention for layout of newdata argument: see 3-line-comment in prepareData function\n          const index = this.getIndexFromInternalId(timeseries.internalId);\n          this.prepareData(timeseries, result.values.map((e) => {\n            const a = new Array(this.datasetIds.length).fill(undefined);\n            a[index] = e[1];\n            return { datetime: e[0], values: a };\n          }));\n        });\n    }\n  }\n\n  private prepareData(timeseries: Timeseries, newdata: DatasetTableData[]) {\n    const index = this.getIndexFromInternalId(timeseries.internalId);\n\n    // if datasetOptions are provided, use their color to style the header's \"color band\" (i.e. the 7px border-bottom of th)\n    if (this.datasetOptions) {\n      const datasetOptions = this.datasetOptions.get(timeseries.internalId);\n      this.preparedColors[index] = datasetOptions.color;\n    } else {\n      // when no color is specified: make border transparent so the header's background color is used for the color band, too\n      this.preparedColors[index] = 'rgba(0,0,0,0)';\n    }\n\n    if (this.selectedDatasetIds.indexOf(timeseries.internalId) !== -1) {\n      this.setSelectedId(timeseries.internalId);\n    }\n\n    // `newdata` is expected in exactly the same format `preparedData` would look like if that timeseries was the only one\n    // to actually have data (i.e. `values` has the length of timeseriesArray, but all slots are `undefined`, except for\n    // the slot that corresponds to that timeseries)\n\n    // `timeseries` is first timeseries added -> no other `preparedData` to merge with\n    if (this.preparedData.length === 0) {\n      // set newdata as preparedData (as per above)\n      this.preparedData = newdata;\n\n      // `timeseries` is not the first timeseries added -> we have to merge `newdata` into the existing `preparedData`\n    } else {\n      let i = 0;  // loop variable for `preparedData`\n      let j = 0;  // loop variable for `newdata`\n\n      // go through all data points in `newdata`\n      while (j < newdata.length) {\n\n        // timestamps match\n        if (this.preparedData[i] && this.preparedData[i].datetime === newdata[j].datetime) {\n          // just add `newdata`'s value to the existing `values` array in `preparedData`\n          this.preparedData[i].values[index] = newdata[j].values[index];\n          // increment both\n          i++;\n          j++;\n\n          // `newdata` is ahead of `preparedData`\n        } else if (this.preparedData[i] && this.preparedData[i].datetime < newdata[j].datetime) {\n          // do nothing because there's already an undefined there\n          // give preparedData the chance to catch up with newdata\n          i++;\n\n          // `preparedData` is ahead of `newdata`\n        } else {\n          // the current `newdata` is the first dataset that has this datetime -> add it to the preparedData array\n          this.preparedData.splice(i, 0, newdata[j]);\n          // give newdata the chance to catch up with preparedData\n          j++;\n          // but preparedData is 1 longer now, too\n          i++;\n        }\n      }\n    }\n\n    this.ready = this.timeseriesArray.every((e) => e !== undefined);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DatasetTableComponent } from './dataset-table.component';\n\n@NgModule({\n    declarations: [\n        DatasetTableComponent\n    ],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        HelgolandCoreModule\n    ],\n    exports: [\n        DatasetTableComponent\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandDatasetTableModule { }\n"],"names":["IdCache","Observable","Injectable","HttpClient","SettingsService","Component","Input","NgModule","CommonModule","EventEmitter","Output","tslib_1.__extends","PlatformTypes","Timespan","DatasetApiInterface","InternalIdHandler","TranslateService","Dataset","Timeseries","Time","ViewEncapsulation","ColorService","TranslateModule","HelgolandCoreModule","FormsModule","IterableDiffers","DatasetPresenterComponent"],"mappings":"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"}
