{"version":3,"file":"helgoland-plotly.js.map","sources":["ng://@helgoland/plotly/lib/plotly-profile-graph/plotly-profile-graph.component.ts","ng://@helgoland/plotly/lib/plotly.module.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    PresenterHighlight,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport * as d3 from 'd3';\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial<Plotly.ScatterData> {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    template: `<div #plotly></div>`,\n    styles: [`:host div{width:100%;height:100%}`]\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent<TimedDatasetOptions[], any>\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter<PresenterHighlight> = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map<string, RawData> = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial<any> = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        protected translateSrvc: TranslateService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc, translateSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    protected onLanguageChanged(langChangeEvent: LangChangeEvent): void { }\n\n    public reloadDataForDatasets(datasetIds: string[]): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData<ProfileDataEntry>(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected presenterOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array<number>();\n                    const y = new Array<number>();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial<any> {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial<any> {\n    [key: string]: any;\n}\n","import { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { PlotlyProfileGraphComponent } from './plotly-profile-graph/plotly-profile-graph.component';\n\n@NgModule({\n  declarations: [\n    PlotlyProfileGraphComponent\n  ],\n  imports: [\n    HelgolandCoreModule\n  ],\n  exports: [\n    PlotlyProfileGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandPlotlyModule { }\n"],"names":["tslib_1.__extends","d3.extent","Plotly.newPlot","Plotly.relayout"],"mappings":"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"}
