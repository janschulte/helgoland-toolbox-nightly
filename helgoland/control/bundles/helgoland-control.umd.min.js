!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@helgoland/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@helgoland/control",["exports","@angular/core","@helgoland/core","@angular/common"],e):e((t.helgoland=t.helgoland||{},t.helgoland.control={}),t.ng.core,null,t.ng.common)}(this,function(t,e,n,o){"use strict";var r=function(){function t(){this.onToggled=new e.EventEmitter}return t.prototype.toggle=function(){this.onToggled.emit(!this.value)},t.decorators=[{type:e.Component,args:[{selector:"n52-bool-toggler",template:'<button type="button" class="btn" (click)="toggle()" [ngClass]="value ? \'btn-primary\' : \'btn-light\'" title="{{tooltip}}">\n    <i class="fa fa-{{icon}}" aria-hidden="true"></i>\n</button>'}]}],t.propDecorators={value:[{type:e.Input}],icon:[{type:e.Input}],tooltip:[{type:e.Input}],onToggled:[{type:e.Output}]},t}(),i=function(){function t(t){this.settings=t,this.refreshing=new e.EventEmitter,this.refreshInterval||(this.refreshInterval=this.settings.getSettings().refreshDataInterval?this.settings.getSettings().refreshDataInterval:60)}return t.prototype.ngOnInit=function(){this.evaluteRefreshing()},t.prototype.ngOnChanges=function(t){t.toggled&&this.evaluteRefreshing()},t.prototype.toggle=function(){this.toggled=!this.toggled,this.toggled&&this.refresh(),this.evaluteRefreshing()},t.prototype.evaluteRefreshing=function(){this.toggled?this.startRefreshInterval():this.stopRefreshInterval()},t.prototype.startRefreshInterval=function(){var t=this;this.interval=setInterval(function(){return t.refresh()},1e3*this.refreshInterval)},t.prototype.stopRefreshInterval=function(){clearInterval(this.interval)},t.prototype.refresh=function(){this.refreshing.emit(!0)},t.decorators=[{type:e.Component,args:[{selector:"n52-refresh-button",template:'<button type="button" class="btn" (click)="toggle()" [ngClass]="toggled ? \'btn-primary\' : \'btn-light\'">\n    <i class="fa fa-refresh" aria-hidden="true"></i>\n    <span *ngIf="toggled">active</span>\n</button>'}]}],t.ctorParameters=function(){return[{type:n.SettingsService}]},t.propDecorators={refreshInterval:[{type:e.Input}],toggled:[{type:e.Input}],refreshing:[{type:e.Output}]},t}(),s=function(){function t(){this.onToggled=new e.EventEmitter}return t.prototype.ngOnChanges=function(t){t.value&&(this.isToggled=this.option===this.value)},t.prototype.toggle=function(){this.onToggled.emit(this.option)},t.decorators=[{type:e.Component,args:[{selector:"n52-string-toggler",template:'<button type="button" class="btn" (click)="toggle()" [ngClass]="isToggled ? \'btn-primary\' : \'btn-light\'" title="{{tooltip}}">\n    <i class="fa fa-{{icon}}" aria-hidden="true"></i>\n</button>'}]}],t.propDecorators={value:[{type:e.Input}],option:[{type:e.Input}],icon:[{type:e.Input}],tooltip:[{type:e.Input}],onToggled:[{type:e.Output}]},t}(),l=[r,s,i],g=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[l],imports:[o.CommonModule],exports:[l],providers:[]}]}],t}();t.HelgolandControlModule=g,t.BoolTogglerComponent=r,t.StringTogglerComponent=s,t.RefreshButtonComponent=i,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=helgoland-control.umd.min.js.map